"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = babelPresetSplunk;

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function babelPresetSplunk(api) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$envPresetEnabled = _ref.envPresetEnabled,
      envPresetEnabled = _ref$envPresetEnabled === void 0 ? true : _ref$envPresetEnabled,
      _ref$reactPresetEnabl = _ref.reactPresetEnabled,
      reactPresetEnabled = _ref$reactPresetEnabl === void 0 ? true : _ref$reactPresetEnabl,
      _ref$typescriptPreset = _ref.typescriptPresetEnabled,
      typescriptPresetEnabled = _ref$typescriptPreset === void 0 ? true : _ref$typescriptPreset,
      envPresetOptions = _ref.envPresetOptions,
      reactPresetOptions = _ref.reactPresetOptions,
      typescriptPresetOptions = _ref.typescriptPresetOptions;

  return {
    presets: [envPresetEnabled && [require.resolve('@babel/preset-env'), _objectSpread({}, envPresetOptions)], reactPresetEnabled && [require.resolve('@babel/preset-react'), _objectSpread({
      development: api.env('development')
    }, reactPresetOptions)], typescriptPresetEnabled && [require.resolve('@babel/preset-typescript'), _objectSpread({}, typescriptPresetOptions)]].filter(Boolean),
    plugins: [require.resolve('@babel/plugin-proposal-class-properties'), require.resolve('@babel/plugin-proposal-object-rest-spread')]
  };
}