module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 139);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("@splunk/themes");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ 10:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/id");

/***/ }),

/***/ 139:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* reexport */ src_ControlGroup_ControlGroup; });
__webpack_require__.d(__webpack_exports__, "ControlGroupContext", function() { return /* reexport */ ControlGroup_ControlGroupContext; });

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(2);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(1);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(4);

// EXTERNAL MODULE: external "@splunk/themes"
var themes_ = __webpack_require__(0);

// EXTERNAL MODULE: external "@splunk/ui-utils/id"
var id_ = __webpack_require__(10);

// EXTERNAL MODULE: external "@splunk/react-ui/Box"
var Box_ = __webpack_require__(8);
var Box_default = /*#__PURE__*/__webpack_require__.n(Box_);

// EXTERNAL MODULE: external "@splunk/react-ui/ScreenReaderContent"
var ScreenReaderContent_ = __webpack_require__(14);
var ScreenReaderContent_default = /*#__PURE__*/__webpack_require__.n(ScreenReaderContent_);

// EXTERNAL MODULE: external "@splunk/react-ui/Tooltip"
var Tooltip_ = __webpack_require__(50);
var Tooltip_default = /*#__PURE__*/__webpack_require__.n(Tooltip_);

// EXTERNAL MODULE: external "styled-components"
var external_styled_components_ = __webpack_require__(3);
var external_styled_components_default = /*#__PURE__*/__webpack_require__.n(external_styled_components_);

// CONCATENATED MODULE: ./src/ControlGroup/ControlGroupStyles.ts



var StyledBox = external_styled_components_default()(Box_default.a).withConfig({
  displayName: "ControlGroupStyles__StyledBox",
  componentId: "wjnyif-0"
})(["", " ", " max-width:600px;margin-bottom:", ";", " color:", ";", ""], themes_["mixins"].reset('block'), themes_["mixins"].clearfix(), Object(themes_["pick"])({
  enterprise: Object(external_styled_components_["css"])(["calc(", " * 0.75)"], themes_["variables"].spacing),
  prisma: {
    comfortable: '16px',
    compact: '12px'
  }
}), Object(themes_["pick"])({
  prisma: {
    comfortable: Object(external_styled_components_["css"])(["&:first-child{margin-top:", ";}&:last-child{margin-bottom:", ";}"], themes_["variables"].spacingMedium, themes_["variables"].spacingMedium),
    compact: Object(external_styled_components_["css"])(["&:first-child{margin-top:", ";}&:last-child{margin-bottom:", ";}"], themes_["variables"].spacingSmall, themes_["variables"].spacingSmall)
  }
}), Object(themes_["pick"])({
  enterprise: themes_["variables"].textColor,
  prisma: themes_["variables"].contentColorMuted
}), function (_ref) {
  var $error = _ref.$error;
  return $error && Object(external_styled_components_["css"])(["color:", ";"], Object(themes_["pick"])({
    enterprise: {
      light: themes_["variables"].errorColorD10,
      dark: themes_["variables"].errorColorL20
    },
    prisma: themes_["variables"].accentColorNegative
  }));
});
var StyledControlsStackBox = external_styled_components_default()(Box_default.a).withConfig({
  displayName: "ControlGroupStyles__StyledControlsStackBox",
  componentId: "wjnyif-1"
})(["flex-direction:column;"]);
var StyledLabelWrapper = external_styled_components_default.a.div.withConfig({
  displayName: "ControlGroupStyles__StyledLabelWrapper",
  componentId: "wjnyif-2"
})(["display:inline-flex;align-items:center;", " ", ""], Object(themes_["pick"])({
  enterprise: Object(external_styled_components_["css"])(["justify-content:flex-end;"])
}), function (_ref2) {
  var $labelPosition = _ref2.$labelPosition;
  return $labelPosition === 'top' ? Object(external_styled_components_["css"])(["", ""], Object(themes_["pick"])({
    prisma: Object(external_styled_components_["css"])(["padding-bottom:", ";"], themes_["variables"].spacingXSmall)
  })) : Object(external_styled_components_["css"])(["", ""], Object(themes_["pick"])({
    prisma: Object(external_styled_components_["css"])(["min-height:", ";"], themes_["variables"].inputHeight)
  }));
});
var StyledLabelWrapperLeft = external_styled_components_default()(StyledLabelWrapper).withConfig({
  displayName: "ControlGroupStyles__StyledLabelWrapperLeft",
  componentId: "wjnyif-3"
})(["float:left;"]);
var StyledLabel = external_styled_components_default.a.label.withConfig({
  displayName: "ControlGroupStyles__StyledLabel",
  componentId: "wjnyif-4"
})(["padding:", ";word-wrap:break-word;color:inherit;text-align:", ";"], Object(themes_["pick"])({
  enterprise: {
    comfortable: '6px 0',
    compact: '4px 0'
  }
}), Object(themes_["pick"])({
  enterprise: 'right',
  prisma: 'left'
}));
var StyledHelp = external_styled_components_default.a.div.withConfig({
  displayName: "ControlGroupStyles__StyledHelp",
  componentId: "wjnyif-5"
})(["", ";font-size:", ";color:", ";margin-top:", ";[aria-invalid] > &{color:inherit;}"], themes_["mixins"].reset('block'), themes_["variables"].fontSizeSmall, themes_["variables"].contentColorMuted, Object(themes_["pick"])({
  enterprise: '2px',
  prisma: '4px'
}));

// CONCATENATED MODULE: ./src/ControlGroup/ControlGroupContext.tsx


/**
 * A React context used to inform subcomponets of ControlGroup of parent component values.
 * The context interface is `ControlGroupContextValue`.
 * Defaults to `'{}'`.
 * @public
 */
var ControlGroupContext = /*#__PURE__*/external_react_default.a.createContext({});
/* harmony default export */ var ControlGroup_ControlGroupContext = (ControlGroupContext);
// CONCATENATED MODULE: ./src/ControlGroup/ControlGroup.tsx
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }










 // props ControlGroup may access and/or override on children

var propTypes = {
  children: external_prop_types_default.a.node,
  controlsLayout: external_prop_types_default.a.oneOf(['fill', 'fillJoin', 'none', 'stack']),
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  error: external_prop_types_default.a.bool,
  help: external_prop_types_default.a.node,
  hideLabel: external_prop_types_default.a.bool,
  label: external_prop_types_default.a.string.isRequired,
  labelFor: external_prop_types_default.a.string,
  labelPosition: external_prop_types_default.a.oneOf(['left', 'top']),
  labelWidth: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.string]),
  size: external_prop_types_default.a.oneOf(['small', 'medium']),

  /** @private */
  splunkTheme: external_prop_types_default.a.object,
  tooltip: external_prop_types_default.a.node,
  tooltipDefaultPlacement: external_prop_types_default.a.oneOf(['above', 'below', 'left', 'right', 'theme'])
};
var defaultProps = {
  controlsLayout: 'fill',
  error: false,
  hideLabel: false,
  labelPosition: 'left',
  labelWidth: 120,
  size: 'medium'
};
// Style cloned onto child elements when fill behavior set.
var FLEX_GROW_STYLE = {
  flexGrow: 1
}; // Margin bootom values cloned onto child elements when the stacking behavior is needed.

var CHILD_MARGIN_BOTTOM_DEFAULT = '0';
var CHILD_MARGIN_BOTTOM_PRISMA = '16px';
var CHILD_MARGIN_BOTTOM_PRISMA_COMPACT = '12px';
/**
 * `ControlGroup` places a label and optional help text around one or more controls. The `ControlGroup`
 * will automatically add aria attributes to associate the controls with the labels and help text to
 * address accessibility requirements.
 *
 * `ControlGroup` provides layouts to assist in aligning and laying out controls, but the defaults are
 * not helpful in all cases, nor will the layout options address all cases. Consider setting
 * `controlsLayout` to none and manually positioning the controls as required.
 *
 * `ControlGroup` uses the HTML `label` tag. The rules for determining which child component is linked
 * to the label's `for` attribute are:
 * 1. If one or more `children` are `Text` components, the first one is used.
 * 2. If there aren't any `Text` components, the first child is used.
 *
 * If the linked child supports an `inputId` prop and it's set, its value is used for the label's `for`
 * attribute. If `inputId` is supported but not set a generated id is used instead. If `inputId` isn't
 * supported `id` is used. The `labelFor` prop may be used to override the `for` attribute.
 */

var ControlGroup_ControlGroup = /*#__PURE__*/function (_Component) {
  _inherits(ControlGroup, _Component);

  var _super = _createSuper(ControlGroup);

  // @docs-props-type ControlGroupPropsBase
  function ControlGroup(props) {
    var _this;

    _classCallCheck(this, ControlGroup);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "helpId", void 0);

    _defineProperty(_assertThisInitialized(_this), "labelId", void 0);

    _defineProperty(_assertThisInitialized(_this), "contextValue", void 0);

    _defineProperty(_assertThisInitialized(_this), "childIds", void 0);

    _defineProperty(_assertThisInitialized(_this), "stackLayoutChildStyle", void 0);

    _defineProperty(_assertThisInitialized(_this), "getChildID", function (key, index) {
      var childKey = "".concat(key, "-").concat(index);
      var value = _this.childIds[childKey];

      if (!value || !value.length) {
        value = Object(id_["createDOMID"])(key);
        _this.childIds[childKey] = value;
      }

      return value;
    });

    _defineProperty(_assertThisInitialized(_this), "getStackLayoutChildStyle", function (isPrisma, isCompact) {
      if (isPrisma) {
        if (isCompact) {
          _this.stackLayoutChildStyle.marginBottom = CHILD_MARGIN_BOTTOM_PRISMA_COMPACT;
        }

        _this.stackLayoutChildStyle.marginBottom = CHILD_MARGIN_BOTTOM_PRISMA;
      } else {
        _this.stackLayoutChildStyle.marginBottom = CHILD_MARGIN_BOTTOM_DEFAULT;
      }

      return _this.stackLayoutChildStyle;
    });

    _defineProperty(_assertThisInitialized(_this), "hasInputId", function (item) {
      return item.type && item.type.propTypes && Object.prototype.hasOwnProperty.call(item.type.propTypes, 'inputId');
    });

    _defineProperty(_assertThisInitialized(_this), "getLinkedId", function (components) {
      if (components.length === 0) {
        return undefined;
      }

      var _components = _slicedToArray(components, 1),
          firstChild = _components[0];

      var firstText = Object(external_lodash_["find"])(components, function (comp) {
        return comp.type && comp.type.componentType === 'Text';
      });

      var inputId = _this.hasInputId(firstChild); // see class doc block for details


      if (components.length === 1 && firstChild && firstChild.props) {
        return inputId ? firstChild.props.inputId : firstChild.props.id;
      }

      if (firstText && firstText.props) {
        return firstText.props.inputId;
      }

      if (firstChild.props) {
        return inputId ? firstChild.props.inputId : firstChild.props.id;
      }

      return undefined;
    });

    _this.labelId = Object(id_["createDOMID"])('label');
    _this.helpId = Object(id_["createDOMID"])('help');
    _this.contextValue = _this.createContextValue();
    _this.childIds = {};
    _this.stackLayoutChildStyle = {};
    return _this;
  }

  _createClass(ControlGroup, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      if (external_react_default.a.Children.count(nextProps.children) !== external_react_default.a.Children.count(this.props.children)) {
        this.childIds = {};
      }

      return true;
    }
  }, {
    key: "createContextValue",
    value: function createContextValue() {
      return {
        labelAttrs: {
          text: this.props.label,
          id: this.labelId
        }
      };
    }
  }, {
    key: "getContextValue",
    value: function getContextValue() {
      var _this$contextValue$la, _this$contextValue$la2;

      if (this.props.label !== ((_this$contextValue$la = this.contextValue.labelAttrs) === null || _this$contextValue$la === void 0 ? void 0 : _this$contextValue$la.text) || this.labelId !== ((_this$contextValue$la2 = this.contextValue.labelAttrs) === null || _this$contextValue$la2 === void 0 ? void 0 : _this$contextValue$la2.id)) {
        this.contextValue = this.createContextValue();
      }

      return this.contextValue;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          children = _this$props.children,
          controlsLayout = _this$props.controlsLayout,
          error = _this$props.error,
          help = _this$props.help,
          hideLabel = _this$props.hideLabel,
          label = _this$props.label,
          labelFor = _this$props.labelFor,
          labelPosition = _this$props.labelPosition,
          labelWidth = _this$props.labelWidth,
          size = _this$props.size,
          splunkTheme = _this$props.splunkTheme,
          tooltip = _this$props.tooltip,
          tooltipDefaultPlacement = _this$props.tooltipDefaultPlacement,
          otherProps = _objectWithoutProperties(_this$props, ["children", "controlsLayout", "error", "help", "hideLabel", "label", "labelFor", "labelPosition", "labelWidth", "size", "splunkTheme", "tooltip", "tooltipDefaultPlacement"]);

      var isPrisma = splunkTheme.isPrisma,
          isCompact = splunkTheme.isCompact;
      var validChildren = external_react_["Children"].toArray(children).filter(external_react_["isValidElement"]);
      var count = validChildren.length;
      var writableOtherProps = otherProps; // Clean the Children

      var cloneWithProps = function cloneWithProps(item, i) {
        var cloneProps = {
          key: item.key || i
        };

        if (controlsLayout === 'fillJoin') {
          if (i > 0) {
            cloneProps.prepend = true;
          }

          if (i < count - 1) {
            cloneProps.append = true;
          }

          if (cloneProps.prepend || cloneProps.append) {
            cloneProps.inline = false;
          }
        }

        if (controlsLayout === 'fill' && count > 1) {
          cloneProps.inline = true;
        }

        if (controlsLayout === 'stack') {
          cloneProps.inline = false;

          if (i < count - 1) {
            // The spread operator is used as css styles are not nested, so there is no need for a deep copy.
            var stackStyle = _this2.getStackLayoutChildStyle(isPrisma, isCompact);

            cloneProps.style = item.props.style ? _objectSpread(_objectSpread({}, item.props.style), stackStyle) : stackStyle;
          }
        }

        cloneProps.labelledBy = _this2.labelId;

        if (_this2.props.help) {
          cloneProps.describedBy = _this2.helpId;
        } // TODO: SUI-3402 refactor so that parent component doesn't have to know what it's child components are


        if (item.type.componentType === 'Multiselect') {
          var multiselect = item;

          if (multiselect.props.compact === false) {
            cloneProps.labelText = label;
          }
        } else {
          cloneProps.labelText = label;
        }

        if (count === 1 && (controlsLayout === 'fillJoin' || controlsLayout === 'fill')) {
          // Some controls like Select do not grow by default, so flexGrow is applied
          // The spread operator is used as css styles are not nested, so there is no need for a deep copy.
          cloneProps.style = item.props.style ? _objectSpread(_objectSpread({}, item.props.style), FLEX_GROW_STYLE) : FLEX_GROW_STYLE;
        }

        if (!labelFor && item) {
          if (_this2.hasInputId(item)) {
            cloneProps.inputId = item.props.inputId || _this2.getChildID('input-id', i);
          } else {
            cloneProps.id = item.props.id || _this2.getChildID('id', i);
          }
        }

        return /*#__PURE__*/Object(external_react_["cloneElement"])(item, cloneProps);
      };

      var childrenFormatted = validChildren.map(cloneWithProps);
      var defaultLinkedId = this.getLinkedId(childrenFormatted);

      if (error) {
        writableOtherProps['aria-invalid'] = true;
      }

      var labelWidthStyle = labelPosition === 'left' ? {
        width: labelWidth
      } : undefined;
      var labelWidthString = Object(external_lodash_["isFinite"])(labelWidth) ? "".concat(labelWidth, "px") : labelWidth;
      var labelMargin = isPrisma ? '16px' : '20px';
      var contentMarginStyle = labelPosition === 'left' ? {
        marginLeft: "calc(".concat(labelWidthString, " + ").concat(labelMargin, ")")
      } : undefined;
      var StyledControlsComponent = controlsLayout === 'stack' ? StyledControlsStackBox : Box_default.a;
      var StyledLabelWrapperComponent = labelPosition === 'left' ? StyledLabelWrapperLeft : StyledLabelWrapper;
      var styledLabel = /*#__PURE__*/external_react_default.a.createElement(StyledLabelWrapperComponent, {
        style: labelWidthStyle,
        $labelPosition: labelPosition
      }, /*#__PURE__*/external_react_default.a.createElement(StyledLabel, {
        "data-size": size,
        "data-test": "label",
        id: this.labelId,
        htmlFor: labelFor || defaultLinkedId,
        $tooltip: !!tooltip
      }, label, !isPrisma && !hideLabel && tooltip && /*#__PURE__*/external_react_default.a.createElement("span", null, "\xA0"), !hideLabel && tooltip && /*#__PURE__*/external_react_default.a.createElement(ScreenReaderContent_default.a, null, tooltip)), !hideLabel && tooltip && /*#__PURE__*/external_react_default.a.createElement(Tooltip_default.a, {
        content: tooltip,
        defaultPlacement: tooltipDefaultPlacement,
        "aria-hidden": "true"
      }));
      return /*#__PURE__*/external_react_default.a.createElement(StyledBox, _extends({
        "data-test": "control-group",
        $error: error
      }, writableOtherProps), /*#__PURE__*/external_react_default.a.createElement(ControlGroup_ControlGroupContext.Provider, {
        value: this.getContextValue()
      }, hideLabel ? /*#__PURE__*/external_react_default.a.createElement(ScreenReaderContent_default.a, null, styledLabel) : styledLabel, /*#__PURE__*/external_react_default.a.createElement(StyledControlsComponent, {
        "data-test": "controls",
        flex: controlsLayout !== 'none',
        style: contentMarginStyle
      }, childrenFormatted), help && /*#__PURE__*/external_react_default.a.createElement(StyledHelp, {
        "data-test": "help",
        id: this.helpId,
        style: contentMarginStyle
      }, help)));
    }
  }]);

  return ControlGroup;
}(external_react_["Component"]);

_defineProperty(ControlGroup_ControlGroup, "propTypes", propTypes);

_defineProperty(ControlGroup_ControlGroup, "defaultProps", defaultProps);

var ControlGroupWithTheme = Object(themes_["withSplunkTheme"])(ControlGroup_ControlGroup);
ControlGroupWithTheme.propTypes = ControlGroup_ControlGroup.propTypes;
/* harmony default export */ var src_ControlGroup_ControlGroup = (ControlGroupWithTheme);

// CONCATENATED MODULE: ./src/ControlGroup/index.ts



/***/ }),

/***/ 14:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/ScreenReaderContent");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),

/***/ 50:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Tooltip");

/***/ }),

/***/ 8:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Box");

/***/ })

/******/ });