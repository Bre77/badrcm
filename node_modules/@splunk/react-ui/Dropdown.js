module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 179);
/******/ })
/************************************************************************/
/******/ ({

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ 10:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/id");

/***/ }),

/***/ 11:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return updateReactRef; });
/**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
function updateReactRef(ref, current) {
  if (ref) {
    if (typeof ref === 'function') {
      ref(current);
    } else {
      // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
      // the intention here is to signal "we will take care of setting 'current', not you".
      ref.current = current; // eslint-disable-line no-param-reassign
    }
  }
}



/***/ }),

/***/ 17:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Popover");

/***/ }),

/***/ 179:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* reexport */ src_Dropdown_Dropdown; });
__webpack_require__.d(__webpack_exports__, "legacyRefMode", function() { return /* reexport */ legacyRefMode; });

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(2);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(1);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(4);

// EXTERNAL MODULE: external "@splunk/ui-utils/id"
var id_ = __webpack_require__(10);

// EXTERNAL MODULE: external "@splunk/react-ui/Popover"
var Popover_ = __webpack_require__(17);
var Popover_default = /*#__PURE__*/__webpack_require__.n(Popover_);

// EXTERNAL MODULE: ./src/utils/updateReactRef.ts
var updateReactRef = __webpack_require__(11);

// CONCATENATED MODULE: ./src/Dropdown/Dropdown.tsx
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







/** @public */

var possibleCloseReasons = ['clickAway', 'contentClick', 'escapeKey', 'offScreen', 'tabKey', 'toggleClick'];
var propTypes = {
  align: external_prop_types_default.a.oneOf(['center', 'edge', 'theme', 'end']),
  canCoverAnchor: external_prop_types_default.a.bool,
  children: external_prop_types_default.a.oneOfType([external_prop_types_default.a.node, external_prop_types_default.a.func]),
  closeReasons: external_prop_types_default.a.arrayOf(external_prop_types_default.a.oneOf(possibleCloseReasons)),
  defaultPlacement: external_prop_types_default.a.oneOf(['above', 'below', 'left', 'right', 'vertical', 'horizontal']),
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  focusToggleReasons: external_prop_types_default.a.arrayOf(external_prop_types_default.a.oneOf(possibleCloseReasons)),
  inputId: external_prop_types_default.a.string,
  onRequestClose: external_prop_types_default.a.func,
  onRequestOpen: external_prop_types_default.a.func,
  open: external_prop_types_default.a.bool,
  repositionMode: external_prop_types_default.a.oneOf(['none', 'flip', 'any']),
  retainFocus: external_prop_types_default.a.bool,
  takeFocus: external_prop_types_default.a.bool,
  toggle: external_prop_types_default.a.element.isRequired
};
var defaultProps = {
  align: 'theme',
  canCoverAnchor: true,
  closeReasons: possibleCloseReasons,
  defaultPlacement: 'below',
  focusToggleReasons: ['contentClick', 'escapeKey', 'tabKey', 'toggleClick'],
  repositionMode: 'flip',
  retainFocus: false,
  takeFocus: true
};
var legacyRefMode = Symbol('Dropdown legacy ref mode marker');

var Dropdown_Dropdown = /*#__PURE__*/function (_Component) {
  _inherits(Dropdown, _Component);

  var _super = _createSuper(Dropdown);

  // @docs-props-type DropdownPropsBase

  /**
   * Enumeration of the possible reasons for closing the Select.
   * 'clickAway', 'escapeKey', and 'offScreen' are inherited from Popover, but repeated here for
   * docs extraction.
   */
  function Dropdown(props) {
    var _this;

    _classCallCheck(this, Dropdown);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "controlledExternally", void 0);

    _defineProperty(_assertThisInitialized(_this), "popoverId", void 0);

    _defineProperty(_assertThisInitialized(_this), "toggleRef", null);

    _defineProperty(_assertThisInitialized(_this), "toggleId", void 0);

    _defineProperty(_assertThisInitialized(_this), "handleToggleMount", function (el) {
      _this.toggleRef = el;

      _this.setState({
        anchor: el
      });

      if (_this.props.toggle.type[legacyRefMode]) {
        // TS: assume that legacy ref mode toggles support elementRef
        Object(updateReactRef["a" /* updateReactRef */])(_this.props.toggle.props.elementRef, el);
      } else {
        // TS: ref does not exist on React.ReactElement - technically, this is undocumented API
        Object(updateReactRef["a" /* updateReactRef */])(_this.props.toggle.ref, el);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleToggleClick", function (event) {
      var _this$props$toggle$pr, _this$props$toggle$pr2;

      (_this$props$toggle$pr = (_this$props$toggle$pr2 = _this.props.toggle.props).onClick) === null || _this$props$toggle$pr === void 0 ? void 0 : _this$props$toggle$pr.call(_this$props$toggle$pr2, event);

      if (_this.isOpen()) {
        _this.handleRequestClose({
          reason: 'toggleClick',
          event: event
        });
      } else {
        var _this$props$onRequest, _this$props;

        (_this$props$onRequest = (_this$props = _this.props).onRequestOpen) === null || _this$props$onRequest === void 0 ? void 0 : _this$props$onRequest.call(_this$props, event, {
          reason: 'toggleClick'
        });

        if (!_this.isControlled()) {
          _this.setState({
            open: true
          });
        }
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleRequestClose", function (info) {
      var event = info.event,
          reason = info.reason;
      var _this$props2 = _this.props,
          closeReasons = _this$props2.closeReasons,
          focusToggleReasons = _this$props2.focusToggleReasons,
          onRequestClose = _this$props2.onRequestClose;

      if (event && reason === 'clickAway') {
        var el = event.target;
        var toggleId = _this.props.inputId || _this.props.toggle.props.id || _this.toggleId;

        while (el) {
          // Ignore clicks on toggle.
          if (el.id === toggleId) {
            return;
          }

          el = el.parentNode;
        }
      }

      if (_this.isOpen() && Object(external_lodash_["includes"])(closeReasons, reason)) {
        if (Object(external_lodash_["includes"])(focusToggleReasons, reason)) {
          _this.focus();
        }

        if (!_this.isControlled()) {
          _this.setState({
            open: false
          });
        }

        onRequestClose === null || onRequestClose === void 0 ? void 0 : onRequestClose(info);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleContentClick", function (event) {
      _this.handleRequestClose({
        reason: 'contentClick',
        event: event
      });
    });

    _this.state = {
      anchor: null,
      open: false
    };
    _this.controlledExternally = Object(external_lodash_["has"])(props, 'open');
    _this.popoverId = Object(id_["createDOMID"])('popover');
    _this.toggleId = Object(id_["createDOMID"])('toggle');
    return _this;
  }

  _createClass(Dropdown, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (false) {}

      var otherProps = _objectSpread({}, Object(external_lodash_["omit"])(this.props, Object(external_lodash_["keys"])(Dropdown.propTypes), 'value', 'id'));

      if (false) {}
    }
  }, {
    key: "isOpen",
    value: function isOpen() {
      return this.isControlled() ? this.props.open : this.state.open;
    }
    /**
     * Places focus on the toggle.
     */

  }, {
    key: "focus",
    value: function focus() {
      var _this$toggleRef;

      (_this$toggleRef = this.toggleRef) === null || _this$toggleRef === void 0 ? void 0 : _this$toggleRef.focus();
    }
  }, {
    key: "isControlled",
    value: function isControlled() {
      return this.controlledExternally;
    }
  }, {
    key: "renderToggle",
    value: function renderToggle() {
      var _cloneElement;

      return /*#__PURE__*/Object(external_react_["cloneElement"])(this.props.toggle, (_cloneElement = {
        onClick: this.handleToggleClick
      }, _defineProperty(_cloneElement, this.props.toggle.type[legacyRefMode] ? 'elementRef' : 'ref', this.handleToggleMount), _defineProperty(_cloneElement, 'aria-controls', this.isOpen() ? this.popoverId : undefined), _defineProperty(_cloneElement, 'aria-haspopup', true), _defineProperty(_cloneElement, 'aria-expanded', this.isOpen()), _defineProperty(_cloneElement, 'data-test', this.props.toggle.props['data-test'] || 'dropdown'), _defineProperty(_cloneElement, 'data-test-popover-id', this.popoverId), _defineProperty(_cloneElement, "id", this.props.inputId || this.props.toggle.props.id || this.toggleId), _cloneElement));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          align = _this$props3.align,
          canCoverAnchor = _this$props3.canCoverAnchor,
          children = _this$props3.children,
          closeReasons = _this$props3.closeReasons,
          defaultPlacement = _this$props3.defaultPlacement,
          elementRef = _this$props3.elementRef,
          repositionMode = _this$props3.repositionMode,
          retainFocus = _this$props3.retainFocus,
          takeFocus = _this$props3.takeFocus;
      var anchor = this.state.anchor;
      var handleRequestClose = this.handleRequestClose,
          handleContentClick = this.handleContentClick;
      var toggle = this.renderToggle();
      return /*#__PURE__*/external_react_default.a.createElement(external_react_default.a.Fragment, null, toggle, /*#__PURE__*/external_react_default.a.createElement(Popover_default.a, {
        align: align,
        open: !!anchor && this.isOpen(),
        autoCloseWhenOffScreen: Object(external_lodash_["includes"])(closeReasons, 'offScreen'),
        anchor: anchor,
        canCoverAnchor: canCoverAnchor,
        elementRef: elementRef,
        retainFocus: retainFocus,
        defaultPlacement: defaultPlacement,
        onRequestClose: handleRequestClose,
        repositionMode: repositionMode,
        id: this.popoverId,
        "aria-labelledby": this.props.inputId || this.props.toggle.props.id || this.toggleId,
        takeFocus: takeFocus
      }, Object(external_lodash_["isFunction"])(children) ? // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
      function () {
        return /*#__PURE__*/external_react_default.a.createElement("div", {
          onClick: handleContentClick
        }, children.apply(void 0, arguments));
      } :
      /*#__PURE__*/
      // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
      external_react_default.a.createElement("div", {
        onClick: handleContentClick
      }, children)));
    }
  }]);

  return Dropdown;
}(external_react_["Component"]);

_defineProperty(Dropdown_Dropdown, "possibleCloseReasons", possibleCloseReasons);

_defineProperty(Dropdown_Dropdown, "propTypes", propTypes);

_defineProperty(Dropdown_Dropdown, "defaultProps", defaultProps);

/* harmony default export */ var src_Dropdown_Dropdown = (Dropdown_Dropdown);

// CONCATENATED MODULE: ./src/Dropdown/index.ts



/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ })

/******/ });