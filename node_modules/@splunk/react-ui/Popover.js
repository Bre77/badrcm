module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 135);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("@splunk/themes");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ 11:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return updateReactRef; });
/**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
function updateReactRef(ref, current) {
  if (ref) {
    if (typeof ref === 'function') {
      ref(current);
    } else {
      // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
      // the intention here is to signal "we will take care of setting 'current', not you".
      ref.current = current; // eslint-disable-line no-param-reassign
    }
  }
}



/***/ }),

/***/ 135:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* reexport */ src_Popover_Popover; });
__webpack_require__.d(__webpack_exports__, "PopoverContext", function() { return /* reexport */ PopoverContext; });

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(2);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(1);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: external "react-dom"
var external_react_dom_ = __webpack_require__(68);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(4);

// EXTERNAL MODULE: external "@splunk/themes"
var themes_ = __webpack_require__(0);

// EXTERNAL MODULE: external "@splunk/react-ui/Animation"
var Animation_ = __webpack_require__(31);

// EXTERNAL MODULE: external "@splunk/react-ui/EventListener"
var EventListener_ = __webpack_require__(15);
var EventListener_default = /*#__PURE__*/__webpack_require__.n(EventListener_);

// EXTERNAL MODULE: external "@splunk/react-ui/Layer"
var Layer_ = __webpack_require__(58);
var Layer_default = /*#__PURE__*/__webpack_require__.n(Layer_);

// EXTERNAL MODULE: external "@splunk/react-ui/ScrollContainerContext"
var ScrollContainerContext_ = __webpack_require__(37);
var ScrollContainerContext_default = /*#__PURE__*/__webpack_require__.n(ScrollContainerContext_);

// EXTERNAL MODULE: external "@splunk/ui-utils/focus"
var focus_ = __webpack_require__(26);

// CONCATENATED MODULE: ./src/Popover/getPlacement.ts
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function getInitialStyle(_ref) {
  var align = _ref.align,
      anchorPos = _ref.anchorPos,
      outerContainerEl = _ref.outerContainerEl,
      padding = _ref.padding,
      placement = _ref.placement;

  switch (placement) {
    case 'above':
      return {
        top: anchorPos.top - outerContainerEl.offsetHeight,
        left: align === 'edge' ? anchorPos.left - padding : anchorPos.middle - outerContainerEl.offsetWidth / 2
      };

    case 'below':
      // Align 'end' is only supported by below
      // TODO: SUI-5101 Enable users to align Popover and Dropdown
      if (align === 'end') {
        return {
          top: anchorPos.bottom,
          left: anchorPos.right - outerContainerEl.offsetWidth + padding
        };
      }

      return {
        top: anchorPos.bottom,
        left: align === 'edge' ? anchorPos.left - padding : anchorPos.middle - outerContainerEl.offsetWidth / 2
      };

    case 'left':
      return {
        top: align === 'edge' ? anchorPos.top - padding : anchorPos.center - outerContainerEl.offsetHeight / 2,
        left: anchorPos.left - outerContainerEl.offsetWidth
      };

    case 'right':
      return {
        top: align === 'edge' ? anchorPos.top - padding : anchorPos.center - outerContainerEl.offsetHeight / 2,
        left: anchorPos.right
      };

    default:
      throw new Error("".concat(placement, " is not a valid placement value. Valid options are: 'above', 'below', 'left', or 'right'"));
  }
}

function getPlacement(args) {
  var align = args.align,
      anchorPos = args.anchorPos,
      scrollContainerPos = args.scrollContainerPos,
      canCoverAnchor = args.canCoverAnchor,
      defaultPlacement = args.defaultPlacement,
      outerContainerEl = args.outerContainerEl,
      padding = args.padding,
      repositionMode = args.repositionMode,
      windowHeight = args.windowHeight,
      windowWidth = args.windowWidth;
  var repositionFlip = repositionMode === 'flip';
  var repositionAny = repositionMode === 'any';
  var canReposition = repositionFlip || repositionAny;
  var placement = args.placement || defaultPlacement; // Translate vertical/horizontal to above/below/left/right

  if (defaultPlacement === 'vertical') {
    placement = anchorPos.top > windowHeight - anchorPos.bottom ? 'above' : 'below';
  } else if (defaultPlacement === 'horizontal') {
    placement = anchorPos.left > windowWidth - anchorPos.right ? 'left' : 'right';
  }

  var resolvedPlacement = placement; // Initialize the result variables. These will be mutated as needed and returned.

  var _getInitialStyle = getInitialStyle({
    align: align,
    anchorPos: anchorPos,
    outerContainerEl: outerContainerEl,
    padding: padding,
    placement: resolvedPlacement
  }),
      top = _getInitialStyle.top,
      left = _getInitialStyle.left;

  var bottom = 'auto';
  var maxWidth = windowWidth;
  var maxHeight = windowHeight;
  var placementStatus = resolvedPlacement; // Boolean convenience variables to simplify positioning logic.

  var canPlaceAbove = anchorPos.top - outerContainerEl.offsetHeight > 0;
  var canPlaceBelow = anchorPos.bottom + outerContainerEl.offsetHeight < windowHeight;
  var canPlaceLeft = anchorPos.left - outerContainerEl.offsetWidth > 0;
  var canPlaceRight = anchorPos.right + outerContainerEl.offsetWidth < windowWidth;
  var significantlyMoreSpaceAbove = anchorPos.top * 0.7 > windowHeight - anchorPos.bottom;
  var offScreenRight = (align === 'edge' ? anchorPos.left + outerContainerEl.offsetWidth - padding : anchorPos.middle + outerContainerEl.offsetWidth / 2) > windowWidth;
  var offScreenLeft = (align === 'edge' ? anchorPos.left - padding : anchorPos.middle - outerContainerEl.offsetWidth / 2) < 0;
  var offScreenTop = (align === 'edge' ? anchorPos.top - padding : anchorPos.top - outerContainerEl.offsetHeight / 2) < 0;
  var offScreenBottom = (align === 'edge' ? anchorPos.top + outerContainerEl.offsetHeight - padding : anchorPos.bottom + outerContainerEl.offsetHeight / 2) > windowHeight; // Handle each of the four placement options individually.

  if (placementStatus === 'above') {
    if (!canPlaceAbove && canReposition) {
      if (canPlaceBelow) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'below'
        }));
      }

      if (repositionAny && canPlaceRight) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'right'
        }));
      }

      if (repositionAny && canPlaceLeft) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'left'
        }));
      }

      if (canCoverAnchor) {
        placementStatus = 'misaligned';
        top = 0;
      }
    }

    if (placementStatus !== 'misaligned') {
      bottom = windowHeight - top - outerContainerEl.offsetHeight;

      if (scrollContainerPos) {
        bottom = Math.min(bottom, windowHeight - scrollContainerPos.top);
      }

      top = 'auto';
    }

    if (offScreenRight) {
      left = Math.max(windowWidth - outerContainerEl.offsetWidth, 0);
    } else if (offScreenLeft) {
      left = 0;
    }

    if (!canCoverAnchor) {
      maxHeight = anchorPos.top;
    }
  }

  if (placementStatus === 'below') {
    if (!canPlaceBelow && canReposition) {
      if (canPlaceAbove && significantlyMoreSpaceAbove) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'above'
        }));
      }

      if (repositionAny && canPlaceRight) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'right'
        }));
      }

      if (repositionAny && canPlaceLeft) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'left'
        }));
      }

      if (canCoverAnchor) {
        placementStatus = 'misaligned';
        top = 0;
      }
    }

    if (scrollContainerPos) {
      top = Math.min(top, scrollContainerPos.bottom);
    }

    if (offScreenRight) {
      left = Math.max(windowWidth - outerContainerEl.offsetWidth, 0);
    } else if (offScreenLeft) {
      left = 0;
    }

    if (!canCoverAnchor) {
      maxHeight = windowHeight - anchorPos.bottom;
    }
  }

  if (placementStatus === 'left') {
    if (!canPlaceLeft && canReposition) {
      if (canPlaceRight) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'right'
        }));
      }

      if (repositionAny && canPlaceBelow) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'below'
        }));
      }

      if (repositionAny && canPlaceAbove) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'above'
        }));
      }

      if (canCoverAnchor) {
        placementStatus = 'misaligned';
        top = 0;
      }
    }

    if (offScreenTop) {
      top = 0;
    } else if (offScreenBottom) {
      top = Math.max(windowHeight - outerContainerEl.offsetHeight, 0);
    }

    if (!canCoverAnchor) {
      maxWidth = anchorPos.left;
    }
  }

  if (placementStatus === 'right') {
    if (!canPlaceRight && canReposition) {
      if (canPlaceLeft) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'left'
        }));
      }

      if (repositionAny && canPlaceBelow) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'below'
        }));
      }

      if (repositionAny && canPlaceAbove) {
        return getPlacement(_objectSpread(_objectSpread({}, args), {}, {
          placement: 'above'
        }));
      }

      if (canCoverAnchor) {
        placementStatus = 'misaligned';
        top = 0;
      }
    }

    if (offScreenTop) {
      top = 0;
    } else if (offScreenBottom) {
      top = Math.max(windowHeight - outerContainerEl.offsetHeight, 0);
    }

    if (!canCoverAnchor) {
      maxWidth = windowWidth - anchorPos.left;
    }
  }

  return {
    placement: placementStatus,
    maxHeight: maxHeight,
    maxWidth: maxWidth,
    outerContainerStyle: {
      top: top,
      left: left,
      bottom: bottom
    }
  };
}
// CONCATENATED MODULE: ./src/Popover/PopoverContext.tsx

var PopoverContext = /*#__PURE__*/Object(external_react_["createContext"])({});

// EXTERNAL MODULE: external "react-spring"
var external_react_spring_ = __webpack_require__(19);

// EXTERNAL MODULE: external "styled-components"
var external_styled_components_ = __webpack_require__(3);
var external_styled_components_default = /*#__PURE__*/__webpack_require__.n(external_styled_components_);

// CONCATENATED MODULE: ./src/Popover/PopoverStyles.ts



var PopoverStyles_arrowHeight = Object(themes_["pick"])({
  enterprise: '8px',
  prisma: 0
});
var Styled = external_styled_components_default()(external_react_spring_["animated"].div).withConfig({
  displayName: "PopoverStyles__Styled",
  componentId: "sc-1nahsvw-0"
})(["position:fixed;z-index:", ";left:-300%;top:-300%;"], themes_["variables"].zindexPopover);
var StyledBox = external_styled_components_default.a.div.withConfig({
  displayName: "PopoverStyles__StyledBox",
  componentId: "sc-1nahsvw-1"
})(["", ";", ";"], themes_["mixins"].reset('block'), function (_ref) {
  var $appearance = _ref.$appearance;
  return $appearance !== 'none' && Object(external_styled_components_["css"])(["padding:8px;"]);
});
var StyledContent = external_styled_components_default.a.div.withConfig({
  displayName: "PopoverStyles__StyledContent",
  componentId: "sc-1nahsvw-2"
})(["", ""], Object(themes_["pickVariant"])('$appearance', {
  normal: Object(external_styled_components_["css"])(["background-color:", ";color:", ";border:", ";box-shadow:", ";border-radius:", ";"], themes_["variables"].backgroundColorPopup, themes_["variables"].contentColorDefault, Object(themes_["pick"])({
    enterprise: {
      light: themes_["variables"].border,
      dark: themes_["variables"].border
    },
    prisma: 'none'
  }), Object(themes_["pick"])({
    enterprise: {
      light: Object(external_styled_components_["css"])(["0 2px 2px ", ""], themes_["mixins"].colorWithAlpha(themes_["variables"].gray20, 0.1)),
      dark: '0 1px 2px #000'
    },
    prisma: themes_["variables"].overlayShadow
  }), themes_["variables"].borderRadius),
  // Enterprise Only
  inverted: Object(external_styled_components_["css"])(["background-color:", ";color:", ";"], Object(themes_["pick"])({
    light: themes_["variables"].gray20,
    dark: themes_["variables"].white
  }), Object(themes_["pick"])({
    light: themes_["variables"].white,
    dark: themes_["variables"].gray30
  }))
})); // Enterprise Only

var StyledArrow = external_styled_components_default.a.div.withConfig({
  displayName: "PopoverStyles__StyledArrow",
  componentId: "sc-1nahsvw-3"
})(["width:0;height:0;border-left:", " solid transparent;border-right:", " solid transparent;position:absolute;border-bottom-width:", ";border-bottom-style:solid;", ""], PopoverStyles_arrowHeight, PopoverStyles_arrowHeight, PopoverStyles_arrowHeight, Object(themes_["pickVariant"])('$appearance', {
  normal: Object(external_styled_components_["css"])(["border-bottom-color:", ";&::before{content:'';display:block;width:0;height:0;border-left:", " solid transparent;border-right:", " solid transparent;border-bottom:", " solid ", ";position:absolute;top:1px;left:0;margin-left:-", ";}"], Object(themes_["pick"])({
    light: themes_["variables"].borderColor,
    dark: themes_["variables"].black
  }), PopoverStyles_arrowHeight, PopoverStyles_arrowHeight, PopoverStyles_arrowHeight, themes_["variables"].backgroundColor, PopoverStyles_arrowHeight),
  inverted: Object(external_styled_components_["css"])(["border-bottom-color:", ";"], Object(themes_["pick"])({
    light: themes_["variables"].gray20,
    dark: themes_["variables"].white
  }))
}));
var StyledLowerRightCorner = external_styled_components_default.a.div.withConfig({
  displayName: "PopoverStyles__StyledLowerRightCorner",
  componentId: "sc-1nahsvw-4"
})(["position:fixed;right:0;bottom:0;"]);

// EXTERNAL MODULE: ./src/utils/updateReactRef.ts
var updateReactRef = __webpack_require__(11);

// CONCATENATED MODULE: ./src/Popover/Popover.tsx
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function Popover_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function Popover_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Popover_ownKeys(Object(source), true).forEach(function (key) { Popover_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Popover_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function Popover_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }















var possibleCloseReasons = ['clickAway', 'escapeKey', 'offScreen', 'tabKey'];
var propTypes = {
  align: external_prop_types_default.a.oneOf(['center', 'edge', 'theme', 'end']),
  anchor: external_prop_types_default.a.object,
  animation: external_prop_types_default.a.bool,
  appearance: external_prop_types_default.a.oneOf(['normal', 'inverted', 'none']),
  autoCloseWhenOffScreen: external_prop_types_default.a.bool,
  canCoverAnchor: external_prop_types_default.a.bool,
  children: external_prop_types_default.a.oneOfType([external_prop_types_default.a.node, external_prop_types_default.a.func]),
  closeReasons: external_prop_types_default.a.arrayOf(external_prop_types_default.a.oneOf(possibleCloseReasons)),
  defaultPlacement: external_prop_types_default.a.oneOf(['above', 'below', 'left', 'right', 'vertical', 'horizontal']),
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  id: external_prop_types_default.a.string,
  onRequestClose: external_prop_types_default.a.func,
  open: external_prop_types_default.a.bool,
  pointTo: external_prop_types_default.a.shape({
    x: external_prop_types_default.a.number,
    y: external_prop_types_default.a.number
  }),
  repositionMode: external_prop_types_default.a.oneOf(['none', 'flip', 'any']),
  retainFocus: external_prop_types_default.a.bool,
  takeFocus: external_prop_types_default.a.bool,
  splunkTheme: external_prop_types_default.a.object
};
var defaultProps = {
  align: 'theme',
  animation: true,
  appearance: 'normal',
  autoCloseWhenOffScreen: true,
  canCoverAnchor: false,
  closeReasons: possibleCloseReasons,
  defaultPlacement: 'below',
  open: false,
  repositionMode: 'flip',
  retainFocus: true,
  takeFocus: false
};

// eslint-disable-next-line @typescript-eslint/ban-types
function everyApproxEqual(a, b) {
  var threshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  return !!a && !!b && Object(external_lodash_["every"])(a, function (val, key) {
    if (Object(external_lodash_["isFinite"])(val)) {
      return Math.abs(b[key] - val) <= threshold;
    }

    return b[key] === val;
  });
}
/**
 * `Popover` is used to create layovers such as dropdowns, contextual menus, or tooltips. Use
 * this only when the other components don't provide sufficient functionality or control. A controlled
 * `Dropdown` covers use cases where you might consider using `Popover` directly.
 */


var Popover_Popover = /*#__PURE__*/function (_Component) {
  _inherits(Popover, _Component);

  var _super = _createSuper(Popover);

  _createClass(Popover, null, [{
    key: "getArrowStyle",
    // @docs-props-type PopoverPropsBase
    value: function getArrowStyle(_ref) {
      var anchorPos = _ref.anchorPos,
          arrowHeight = _ref.arrowHeight,
          placement = _ref.placement,
          outerContainerStyle = _ref.outerContainerStyle,
          outerContainerEl = _ref.outerContainerEl;

      if (placement === 'misaligned') {
        return [{
          display: 'none'
        }];
      }

      var style = {
        display: 'block'
      };
      var maxVertDiff = outerContainerEl.offsetHeight / 2 - 22;
      var minVertDiff = -(outerContainerEl.offsetHeight / 2 - 15);
      var initVertDiff = anchorPos.center - (outerContainerStyle.top + outerContainerEl.offsetHeight / 2) - arrowHeight / 2;
      var vertDiff = Object(external_lodash_["clamp"])(initVertDiff, minVertDiff, maxVertDiff);
      var horizontalDiff = anchorPos.middle - (outerContainerStyle.left + outerContainerEl.offsetWidth / 2) - arrowHeight;
      var transformMetadata = {
        left: {
          translateX: arrowHeight / 2,
          translateY: vertDiff,
          rotate: 90
        },
        right: {
          translateX: -arrowHeight / 2,
          translateY: vertDiff,
          rotate: -90
        },
        above: {
          translateX: horizontalDiff,
          translateY: 0,
          rotate: 180
        },
        below: {
          translateX: horizontalDiff,
          translateY: 0,
          rotate: 0
        }
      };
      var transformMeta = transformMetadata[placement];
      style.transform = "translate(".concat(transformMeta.translateX, "px, ").concat(transformMeta.translateY, "px) rotate(").concat(transformMeta.rotate, "deg)"); // set new positions

      var origin1 = {
        left: 'right',
        right: 'left',
        above: 'bottom',
        below: 'top'
      };
      style[origin1[placement]] = '1px';
      var origin2 = {
        left: 'top',
        right: 'top',
        above: 'left',
        below: 'left'
      };
      style[origin2[placement]] = '50%';
      return [style, transformMeta];
    }
  }]);

  function Popover(props) {
    var _this;

    _classCallCheck(this, Popover);

    _this = _super.call(this, props);

    Popover_defineProperty(_assertThisInitialized(_this), "outerContainerEl", null);

    Popover_defineProperty(_assertThisInitialized(_this), "innerContainerEl", null);

    Popover_defineProperty(_assertThisInitialized(_this), "arrow", null);

    Popover_defineProperty(_assertThisInitialized(_this), "windowSizeMeasurementEl", null);

    Popover_defineProperty(_assertThisInitialized(_this), "handleScroll", void 0);

    Popover_defineProperty(_assertThisInitialized(_this), "handleWindowScroll", void 0);

    Popover_defineProperty(_assertThisInitialized(_this), "allowAnimationUpdates", true);

    Popover_defineProperty(_assertThisInitialized(_this), "getElPosition", function (anchorEl) {
      var rect = anchorEl.getBoundingClientRect();
      var a = {
        width: anchorEl.offsetWidth,
        height: anchorEl.offsetHeight
      };
      var pointTo = _this.props.pointTo;
      var pointToHorizontal = pointTo && Object(external_lodash_["has"])(pointTo, 'x');
      var pointToVertical = pointTo && Object(external_lodash_["has"])(pointTo, 'y');
      a.left = pointToHorizontal ? rect.left + ((pointTo === null || pointTo === void 0 ? void 0 : pointTo.x) || 0) : rect.left;
      a.top = pointToVertical ? rect.top + ((pointTo === null || pointTo === void 0 ? void 0 : pointTo.y) || 0) : rect.top;
      a.right = pointToHorizontal ? a.left + a.width : rect.left + a.width || rect.right;
      a.bottom = pointToVertical ? a.top + a.height : rect.top + a.height || rect.bottom;
      a.middle = pointToHorizontal ? a.left : rect.left + (a.right - rect.left) / 2;
      a.center = pointToVertical ? a.top : rect.top + (a.bottom - rect.top) / 2;
      return a;
    });

    Popover_defineProperty(_assertThisInitialized(_this), "setPlacement", function (scrolling) {
      _this.setState(function (state) {
        var _state$arrowStyleTran;

        var _this$props = _this.props,
            align = _this$props.align,
            anchor = _this$props.anchor,
            autoCloseWhenOffScreen = _this$props.autoCloseWhenOffScreen,
            canCoverAnchor = _this$props.canCoverAnchor,
            defaultPlacement = _this$props.defaultPlacement,
            open = _this$props.open,
            repositionMode = _this$props.repositionMode,
            splunkTheme = _this$props.splunkTheme;
        var scrollContainer = _this.context || window;
        var isPrisma = splunkTheme.isPrisma; // If these conditions are not met, we cannot set the popover.

        if (!open || !_this.outerContainerEl || !anchor || !state.anchorEl || !_this.windowSizeMeasurementEl) {
          if (false) {}

          return null;
        }

        var anchorPos = _this.getElPosition(state.anchorEl);

        var scrollContainerPos = scrollContainer !== window ? _this.getElPosition(scrollContainer) : undefined;

        if (scrolling && autoCloseWhenOffScreen) {
          if (_this.autoCloseWhenOffScreen(anchorPos, scrollContainerPos)) {
            return null;
          }
        }

        var arrowHeight = isPrisma ? 0 : 8;
        var padding = 8;
        var defaultAlignment = isPrisma ? 'edge' : 'center';

        var _getPlacement = getPlacement({
          align: align === 'theme' ? defaultAlignment : align,
          anchorPos: anchorPos,
          scrollContainerPos: scrollContainerPos,
          canCoverAnchor: canCoverAnchor,
          defaultPlacement: defaultPlacement,
          repositionMode: repositionMode,
          outerContainerEl: _this.outerContainerEl,
          padding: padding,
          windowWidth: _this.windowSizeMeasurementEl.offsetLeft,
          windowHeight: _this.windowSizeMeasurementEl.offsetTop
        }),
            placement = _getPlacement.placement,
            outerContainerStyle = _getPlacement.outerContainerStyle,
            maxHeight = _getPlacement.maxHeight,
            maxWidth = _getPlacement.maxWidth;

        var _ref2 = _this.arrow ? Popover.getArrowStyle({
          anchorPos: anchorPos,
          arrowHeight: arrowHeight,
          outerContainerStyle: outerContainerStyle,
          placement: placement,
          outerContainerEl: _this.outerContainerEl
        }) : [],
            _ref3 = _slicedToArray(_ref2, 2),
            arrowStyle = _ref3[0],
            arrowStyleTransformMeta = _ref3[1];

        var hasArrow = _this.props.appearance !== 'none' && !isPrisma;
        var baseCheck = everyApproxEqual(anchorPos, state.anchorPos) && everyApproxEqual(outerContainerStyle, state.outerContainerStyle) && placement === state.placement && maxHeight === state.maxHeight && maxWidth === state.maxWidth;
        var arrowCheck = everyApproxEqual(Object(external_lodash_["omit"])(arrowStyle, 'transform'), Object(external_lodash_["omit"])(state.arrowStyle, 'transform')) && everyApproxEqual(arrowStyleTransformMeta !== null && arrowStyleTransformMeta !== void 0 ? arrowStyleTransformMeta : {}, (_state$arrowStyleTran = state.arrowStyleTransformMeta) !== null && _state$arrowStyleTran !== void 0 ? _state$arrowStyleTran : {}); // If none of the position data has changed, do not set state.

        if (baseCheck && (!hasArrow || hasArrow && arrowCheck)) {
          return null;
        }

        return {
          anchorPos: anchorPos,
          arrowStyle: arrowStyle,
          arrowStyleTransformMeta: arrowStyleTransformMeta,
          outerContainerStyle: outerContainerStyle,
          placement: placement,
          maxHeight: maxHeight,
          maxWidth: maxWidth
        };
      });
    });

    Popover_defineProperty(_assertThisInitialized(_this), "handleNewAnchor", function (anchor) {
      var anchorEl;

      if (anchor && !(anchor instanceof HTMLElement)) {
        if (false) {}

        anchorEl = Object(external_react_dom_["findDOMNode"])(anchor); // eslint-disable-line react/no-find-dom-node
      } else {
        anchorEl = anchor !== null && anchor !== void 0 ? anchor : undefined;
      }

      var anchorPos = anchorEl ? _this.getElPosition(anchorEl) : undefined;

      _this.setState({
        anchorEl: anchorEl,
        anchorPos: anchorPos
      }); // eslint-disable-line react/no-unused-state

    });

    Popover_defineProperty(_assertThisInitialized(_this), "handleInnerContainerMount", function (el) {
      _this.innerContainerEl = el;

      if (el && _this.props.takeFocus) {
        Object(external_lodash_["defer"])(focus_["takeFocus"], el);
      }

      Object(updateReactRef["a" /* updateReactRef */])(_this.props.elementRef, el);
    });

    Popover_defineProperty(_assertThisInitialized(_this), "handleTab", function (e) {
      if (_this.innerContainerEl) {
        if (_this.props.retainFocus) {
          Object(focus_["handleTab"])(_this.innerContainerEl, e);
        } else if (Object(focus_["isTabKey"])(e)) {
          var tabbableElements = Object(focus_["getSortedTabbableElements"])(_this.innerContainerEl);

          if (tabbableElements.length > 0) {
            var finalTabbale = e.shiftKey ? tabbableElements[0] : tabbableElements[tabbableElements.length - 1];

            if (finalTabbale === e.target) {
              _this.handleRequestClose({
                event: e,
                reason: 'tabKey'
              });
            }
          }
        }
      }
    });

    Popover_defineProperty(_assertThisInitialized(_this), "handleRequestClose", function (data) {
      if (_this.props.open) {
        _this.requestClose(data);
      }
    });

    Popover_defineProperty(_assertThisInitialized(_this), "handleAnimationEnd", function () {
      if (_this.allowAnimationUpdates) {
        _this.setState({
          animating: false
        });
      }
    });

    Popover_defineProperty(_assertThisInitialized(_this), "renderLayer", function () {
      var _this$props2 = _this.props,
          animation = _this$props2.animation,
          appearance = _this$props2.appearance,
          children = _this$props2.children,
          id = _this$props2.id,
          open = _this$props2.open,
          retainFocus = _this$props2.retainFocus,
          splunkTheme = _this$props2.splunkTheme;
      var _this$state = _this.state,
          anchorPos = _this$state.anchorPos,
          arrowStyle = _this$state.arrowStyle,
          outerContainerStyle = _this$state.outerContainerStyle,
          placement = _this$state.placement;
      var isPrisma = splunkTheme.isPrisma;
      var displayAppearance = isPrisma && appearance === 'inverted' ? 'normal' : appearance;
      var _this$state2 = _this.state,
          maxHeight = _this$state2.maxHeight,
          maxWidth = _this$state2.maxWidth; // eslint-disable-line prefer-const
      // Accommodate the arrow in the maxHeight and maxWidth.

      if (appearance !== 'none') {
        if (Object(external_lodash_["isFinite"])(maxHeight)) {
          maxHeight -= 20;
        }

        if (Object(external_lodash_["isFinite"])(maxWidth)) {
          maxWidth -= 20;
        }
      }

      var childData = {
        anchorHeight: anchorPos ? anchorPos.height : null,
        anchorWidth: anchorPos ? anchorPos.width : null,
        placement: placement || null,
        maxHeight: maxHeight || null,
        maxWidth: maxWidth || null
      };
      var motionStyle = animation ? {
        opacity: open ? 1 : 0
      } : {
        opacity: 1
      };
      /* eslint-disable jsx-a11y/no-static-element-interactions */

      return /*#__PURE__*/external_react_default.a.createElement(Animation_["Spring"], {
        from: {
          opacity: animation ? 0 : 1
        },
        to: motionStyle,
        config: {
          tension: 300,
          friction: 40
        },
        onRest: _this.handleAnimationEnd
      }, function (interpolatedStyles) {
        return /*#__PURE__*/external_react_default.a.createElement(Styled, {
          "data-test": "outer-popover",
          style: Popover_objectSpread(Popover_objectSpread({}, outerContainerStyle), interpolatedStyles),
          ref: function ref(c) {
            _this.outerContainerEl = c;
          }
        }, (open || _this.state.animating) && /*#__PURE__*/external_react_default.a.createElement(StyledBox, _extends({
          $appearance: displayAppearance,
          "data-test": "popover",
          ref: _this.handleInnerContainerMount,
          tabIndex: -1,
          id: id,
          onKeyDown: _this.handleTab // TODO: remove anchor once prop type generation is fixed

        }, Object(external_lodash_["omit"])(_this.props, ['anchor'].concat(_toConsumableArray(Object(external_lodash_["keys"])(Popover.propTypes))))), /*#__PURE__*/external_react_default.a.createElement(PopoverContext.Provider, {
          value: {
            retainFocus: retainFocus
          }
        }, appearance === 'none' && children, appearance !== 'none' && !isPrisma && /*#__PURE__*/external_react_default.a.createElement(StyledArrow, {
          $appearance: displayAppearance,
          ref: function ref(arrow) {
            _this.arrow = arrow;
          },
          style: arrowStyle
        }), appearance !== 'none' && /*#__PURE__*/external_react_default.a.createElement(StyledContent, {
          $appearance: displayAppearance
        }, Object(external_lodash_["isFunction"])(children) ? children(childData) : children))), /*#__PURE__*/external_react_default.a.createElement(StyledLowerRightCorner, {
          ref: function ref(el) {
            _this.windowSizeMeasurementEl = el;
          }
        }));
      });
      /* eslint-enable jsx-a11y/no-static-element-interactions */
    });

    _this.handleScroll = Object(external_lodash_["throttle"])(_this.setPlacement.bind(_assertThisInitialized(_this), true), 0);
    _this.handleWindowScroll = Object(external_lodash_["throttle"])(_this.setPlacement.bind(_assertThisInitialized(_this), true), 0);
    _this.setPlacement = Object(external_lodash_["throttle"])(_this.setPlacement, 0, {
      leading: false
    });
    _this.state = {
      animating: false,
      prevOpen: props.open // eslint-disable-line react/no-unused-state

    };
    return _this;
  }

  _createClass(Popover, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.handleNewAnchor(this.props.anchor);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.anchor !== this.props.anchor) {
        this.handleNewAnchor(this.props.anchor);
      }

      if (!this.innerContainerEl) {
        return;
      }

      if (this.props.open || this.state.animating) {
        this.setPlacement(); // make sure that the popover both was not open before and is actually open now
        // this prevents bugs like #4 in SUI-2054 where popover contents re-rendering due to animation
        // causes the popover contents to receive focus even though the popover closing

        if (!prevProps.open && this.props.open && this.props.takeFocus) {
          Object(focus_["takeFocus"])(this.innerContainerEl);
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.setPlacement.cancel(); // guaranteed by constructor

      this.handleScroll.cancel();
      this.allowAnimationUpdates = false;
    }
  }, {
    key: "autoCloseWhenOffScreen",
    value: function autoCloseWhenOffScreen(anchorPosition, scrollContainerPosition) {
      if (anchorPosition.top < 0 || anchorPosition.top > window.innerHeight || anchorPosition.left < 0 || anchorPosition.left > window.innerWidth) {
        this.requestClose({
          reason: 'offScreen'
        });
        return true;
      }

      if (scrollContainerPosition) {
        if (anchorPosition.height + anchorPosition.top < scrollContainerPosition.top || anchorPosition.top > scrollContainerPosition.bottom || anchorPosition.width + anchorPosition.left < scrollContainerPosition.left || anchorPosition.left > scrollContainerPosition.right) {
          this.requestClose({
            reason: 'offScreen'
          });
          return true;
        }
      }

      return false;
    }
  }, {
    key: "requestClose",
    value: function requestClose(data) {
      if (Object(external_lodash_["includes"])(this.props.closeReasons, data.reason)) {
        var _this$props$onRequest, _this$props3;

        (_this$props$onRequest = (_this$props3 = this.props).onRequestClose) === null || _this$props$onRequest === void 0 ? void 0 : _this$props$onRequest.call(_this$props3, data);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var open = this.props.open || this.state.animating;
      var scrollContainer = this.context || window;
      var hasCustomizedScrollContainer = scrollContainer !== window;
      return [hasCustomizedScrollContainer && /*#__PURE__*/external_react_default.a.createElement(EventListener_default.a, {
        target: scrollContainer,
        eventType: "scroll",
        listener: this.handleScroll,
        options: {
          passive: false,
          capture: true
        },
        key: "eventListener"
      }), /*#__PURE__*/external_react_default.a.createElement(EventListener_default.a, {
        target: window,
        eventType: "resize",
        listener: this.setPlacement,
        key: "eventListenerOnWindowResize"
      }), /*#__PURE__*/external_react_default.a.createElement(EventListener_default.a, {
        target: window,
        eventType: "scroll",
        listener: this.handleWindowScroll,
        options: {
          passive: false,
          capture: true
        },
        key: "eventListenerOnWindowScroll"
      }), /*#__PURE__*/external_react_default.a.createElement(Layer_default.a, {
        closeReasons: Object(external_lodash_["intersection"])(this.props.closeReasons.filter(function (reason) {
          return reason !== 'offScreen';
        }), Layer_default.a.possibleCloseReasons),
        open: open,
        onRequestClose: this.handleRequestClose,
        key: "Layer"
      }, open && this.renderLayer())];
    }
  }]);

  return Popover;
}(external_react_["Component"]);

Popover_defineProperty(Popover_Popover, "contextType", ScrollContainerContext_default.a);

Popover_defineProperty(Popover_Popover, "defaultProps", defaultProps);

Popover_defineProperty(Popover_Popover, "propTypes", propTypes);

Popover_defineProperty(Popover_Popover, "getDerivedStateFromProps", function (props, state) {
  if (props.open !== state.prevOpen) {
    return {
      animating: props.animation,
      prevOpen: props.open
    };
  }

  return null;
});

var PopoverWithTheme = Object(themes_["withSplunkTheme"])(Popover_Popover);
PopoverWithTheme.propTypes = Popover_Popover.propTypes;
/* harmony default export */ var src_Popover_Popover = (PopoverWithTheme);
// CONCATENATED MODULE: ./src/Popover/index.ts




/***/ }),

/***/ 15:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/EventListener");

/***/ }),

/***/ 19:
/***/ (function(module, exports) {

module.exports = require("react-spring");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 26:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/focus");

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),

/***/ 31:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Animation");

/***/ }),

/***/ 37:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/ScrollContainerContext");

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),

/***/ 58:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Layer");

/***/ }),

/***/ 68:
/***/ (function(module, exports) {

module.exports = require("react-dom");

/***/ })

/******/ });