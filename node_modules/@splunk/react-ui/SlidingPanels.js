module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 144);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("@splunk/themes");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ 11:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return updateReactRef; });
/**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
function updateReactRef(ref, current) {
  if (ref) {
    if (typeof ref === 'function') {
      ref(current);
    } else {
      // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
      // the intention here is to signal "we will take care of setting 'current', not you".
      ref.current = current; // eslint-disable-line no-param-reassign
    }
  }
}



/***/ }),

/***/ 144:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* reexport */ src_SlidingPanels_SlidingPanels; });
__webpack_require__.d(__webpack_exports__, "Panel", function() { return /* reexport */ SlidingPanels_Panel; });

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(2);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(1);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(4);

// EXTERNAL MODULE: external "react-spring"
var external_react_spring_ = __webpack_require__(19);

// EXTERNAL MODULE: external "@splunk/react-ui/Animation"
var Animation_ = __webpack_require__(31);

// EXTERNAL MODULE: external "styled-components"
var external_styled_components_ = __webpack_require__(3);
var external_styled_components_default = /*#__PURE__*/__webpack_require__.n(external_styled_components_);

// EXTERNAL MODULE: external "@splunk/react-ui/Box"
var Box_ = __webpack_require__(8);
var Box_default = /*#__PURE__*/__webpack_require__.n(Box_);

// EXTERNAL MODULE: external "@splunk/themes"
var themes_ = __webpack_require__(0);

// CONCATENATED MODULE: ./src/SlidingPanels/SlidingPanelsStyles.ts




var StyledBox = external_styled_components_default()(Object(external_react_spring_["animated"])(Box_default.a)).withConfig({
  displayName: "SlidingPanelsStyles__StyledBox",
  componentId: "su6isq-0"
})(["overflow:hidden;position:relative;"]);
var Styled = external_styled_components_default()(external_react_spring_["animated"].div).withConfig({
  displayName: "SlidingPanelsStyles__Styled",
  componentId: "su6isq-1"
})(["", ";", ";"], themes_["mixins"].reset('block'), themes_["mixins"].clearfix());

// EXTERNAL MODULE: ./src/utils/updateReactRef.ts
var updateReactRef = __webpack_require__(11);

// CONCATENATED MODULE: ./src/SlidingPanels/Panel.tsx
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var propTypes = {
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  panelId: external_prop_types_default.a.any.isRequired,

  /**
   * @private.
   * Used internally, func passed in from outer place is overwritten
   * by SlidingPanels during rendering
   */
  onMount: external_prop_types_default.a.func,

  /**
   * @private.
   * Used internally, func passed in from outer place is overwritten
   * by SlidingPanels during rendering
   */
  onUnmount: external_prop_types_default.a.func
};
var defaultProps = {};

/**
 * Container for arbitrary content.
 */
var Panel_Panel = /*#__PURE__*/function (_Component) {
  _inherits(Panel, _Component);

  var _super = _createSuper(Panel);

  function Panel() {
    var _this;

    _classCallCheck(this, Panel);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _defineProperty(_assertThisInitialized(_this), "el", null);

    _defineProperty(_assertThisInitialized(_this), "handleMount", function (el) {
      _this.el = el;
      Object(updateReactRef["a" /* updateReactRef */])(_this.props.elementRef, el);
    });

    return _this;
  }

  _createClass(Panel, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props$onMount, _this$props;

      (_this$props$onMount = (_this$props = this.props).onMount) === null || _this$props$onMount === void 0 ? void 0 : _this$props$onMount.call(_this$props, this);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this$props$onUnmount, _this$props2;

      (_this$props$onUnmount = (_this$props2 = this.props).onUnmount) === null || _this$props$onUnmount === void 0 ? void 0 : _this$props$onUnmount.call(_this$props2, this);
    }
  }, {
    key: "getHeight",
    value: function getHeight() {
      var _this$el;

      return (_this$el = this.el) === null || _this$el === void 0 ? void 0 : _this$el.clientHeight;
    }
  }, {
    key: "getWidth",
    value: function getWidth() {
      var _this$el2;

      return (_this$el2 = this.el) === null || _this$el2 === void 0 ? void 0 : _this$el2.clientWidth;
    }
  }, {
    key: "render",
    value: function render() {
      var panelId = this.props.panelId;
      return /*#__PURE__*/external_react_default.a.createElement(Styled, _extends({
        "data-test": "panel",
        "data-test-panel-id": panelId
      }, Object(external_lodash_["omit"])(this.props, Object(external_lodash_["keys"])(Panel.propTypes)), {
        ref: this.handleMount
      }));
    }
  }]);

  return Panel;
}(external_react_["Component"]);

_defineProperty(Panel_Panel, "propTypes", propTypes);

_defineProperty(Panel_Panel, "defaultProps", defaultProps);

/* harmony default export */ var SlidingPanels_Panel = (Panel_Panel);
// CONCATENATED MODULE: ./src/SlidingPanels/SlidingPanels.tsx
function SlidingPanels_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { SlidingPanels_typeof = function _typeof(obj) { return typeof obj; }; } else { SlidingPanels_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return SlidingPanels_typeof(obj); }

function SlidingPanels_extends() { SlidingPanels_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return SlidingPanels_extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { SlidingPanels_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function SlidingPanels_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function SlidingPanels_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function SlidingPanels_createClass(Constructor, protoProps, staticProps) { if (protoProps) SlidingPanels_defineProperties(Constructor.prototype, protoProps); if (staticProps) SlidingPanels_defineProperties(Constructor, staticProps); return Constructor; }

function SlidingPanels_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) SlidingPanels_setPrototypeOf(subClass, superClass); }

function SlidingPanels_setPrototypeOf(o, p) { SlidingPanels_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return SlidingPanels_setPrototypeOf(o, p); }

function SlidingPanels_createSuper(Derived) { var hasNativeReflectConstruct = SlidingPanels_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = SlidingPanels_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = SlidingPanels_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return SlidingPanels_possibleConstructorReturn(this, result); }; }

function SlidingPanels_possibleConstructorReturn(self, call) { if (call && (SlidingPanels_typeof(call) === "object" || typeof call === "function")) { return call; } return SlidingPanels_assertThisInitialized(self); }

function SlidingPanels_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function SlidingPanels_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function SlidingPanels_getPrototypeOf(o) { SlidingPanels_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return SlidingPanels_getPrototypeOf(o); }

function SlidingPanels_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








var SlidingPanels_propTypes = {
  activePanelId: external_prop_types_default.a.any.isRequired,
  children: external_prop_types_default.a.node,
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  innerClassName: external_prop_types_default.a.string,
  innerStyle: external_prop_types_default.a.object,
  onAnimationEnd: external_prop_types_default.a.func,
  outerClassName: external_prop_types_default.a.string,
  outerStyle: external_prop_types_default.a.object,
  transition: external_prop_types_default.a.oneOf(['forward', 'backward'])
};
var SlidingPanels_defaultProps = {
  transition: 'forward'
};

var SlidingPanels_SlidingPanels = /*#__PURE__*/function (_Component) {
  SlidingPanels_inherits(SlidingPanels, _Component);

  var _super = SlidingPanels_createSuper(SlidingPanels);

  // @docs-props-type SlidingPanelsPropsBase
  function SlidingPanels(props) {
    var _this;

    SlidingPanels_classCallCheck(this, SlidingPanels);

    _this = _super.call(this, props);

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "panelInstances", {});

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "allowAnimationUpdates", true);

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "willEnter", function () {
      return {
        translateX: 0
      };
    });

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "willLeave", function (animating) {
      return animating ? {
        translateX: -1,
        position: 'absolute',
        left: 0,
        top: 0
      } : {
        translateX: -1
      };
    });

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "handlePanelMount", function (panel) {
      _this.panelInstances[panel.props.panelId] = panel;

      if (panel.props.panelId === _this.props.activePanelId) {
        _this.setState({
          activePanel: panel,
          panelLoading: false
        });
      }
    });

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "handlePanelUnmount", function (panel) {
      delete _this.panelInstances[panel.props.panelId];
    });

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "handleAnimationEnd", function () {
      var _this$props$onAnimati, _this$props;

      if (_this.allowAnimationUpdates) {
        _this.setState({
          animating: false
        });
      }

      (_this$props$onAnimati = (_this$props = _this.props).onAnimationEnd) === null || _this$props$onAnimati === void 0 ? void 0 : _this$props$onAnimati.call(_this$props);
    });

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "renderPanel", function (transitionStyle, activePanelId, maxWidth) {
      var _transitionStyle$tran;

      var _this$props2 = _this.props,
          children = _this$props2.children,
          transition = _this$props2.transition;
      var currentPanel = external_react_["Children"].toArray(children).filter(external_react_["isValidElement"]).find(function (child) {
        return child.props.panelId === activePanelId;
      }); // TODO: Fix Interplation<string | number> can't be cast to string

      var transform = (_transitionStyle$tran = transitionStyle.translateX) === null || _transitionStyle$tran === void 0 ? void 0 : _transitionStyle$tran.to(function (x) {
        return "translateX(".concat(x * maxWidth * (transition === 'forward' ? 1 : -1), "px)");
      });
      var clonedPanel = currentPanel ? /*#__PURE__*/external_react_default.a.createElement(external_react_spring_["animated"].div, {
        style: transitionStyle
      }, /*#__PURE__*/Object(external_react_["cloneElement"])(currentPanel, {
        style: _objectSpread(_objectSpread({}, currentPanel.props.style), {}, {
          transform: transform
        }),
        onMount: _this.handlePanelMount,
        onUnmount: _this.handlePanelUnmount
      })) : null;
      return clonedPanel;
    });

    SlidingPanels_defineProperty(SlidingPanels_assertThisInitialized(_this), "renderOuterContainer", function (interpolatedOuterStyle) {
      var _this$props3 = _this.props,
          activePanelId = _this$props3.activePanelId,
          children = _this$props3.children,
          elementRef = _this$props3.elementRef,
          outerClassName = _this$props3.outerClassName,
          outerStyle = _this$props3.outerStyle,
          innerClassName = _this$props3.innerClassName,
          innerStyle = _this$props3.innerStyle;
      var animating = _this.state.animating;

      var style = _objectSpread(_objectSpread({}, outerStyle), animating ? {
        width: interpolatedOuterStyle.width,
        height: interpolatedOuterStyle.height
      } : {});

      var currentPanel = external_react_["Children"].toArray(children).filter(external_react_["isValidElement"]).find(function (child) {
        return child.props.panelId === activePanelId;
      });

      if (false) {}

      var transitionStyle = animating ? {
        translateX: 1
      } : {};
      var currentPanelsArr = Object(external_lodash_["filter"])(Object(external_lodash_["values"])(_this.panelInstances), function (panel) {
        return !!panel;
      });
      var maxWidth = currentPanelsArr.map(function (panel) {
        var _p$getWidth;

        var p = _this.panelInstances[panel.props.panelId];
        return p ? (_p$getWidth = p.getWidth()) !== null && _p$getWidth !== void 0 ? _p$getWidth : 0 : 0;
      }).reduce(function (max, current) {
        return Math.max(max, current);
      }, 0);
      return /*#__PURE__*/external_react_default.a.createElement(StyledBox, SlidingPanels_extends({
        className: outerClassName,
        "data-test-active-panel-id": activePanelId,
        "data-test": "sliding-panels",
        elementRef: elementRef,
        style: style
      }, Object(external_lodash_["omit"])(_this.props, Object(external_lodash_["keys"])(SlidingPanels.propTypes))), /*#__PURE__*/external_react_default.a.createElement(Animation_["Transition"], {
        from: transitionStyle,
        enter: _this.willEnter(),
        leave: _this.willLeave(animating),
        items: activePanelId
      }, // eslint-disable-next-line @typescript-eslint/no-explicit-any
      function (styles, item) {
        return /*#__PURE__*/external_react_default.a.createElement(external_react_spring_["animated"].div, {
          style: innerStyle,
          className: innerClassName
        }, _this.renderPanel(styles, item, maxWidth));
      }));
    });

    _this.state = {
      animating: false,
      panelLoading: false,
      prevActivePanelId: _this.props.activePanelId,
      // eslint-disable-line react/no-unused-state
      slidingId: 0 // eslint-disable-line react/no-unused-state

    };
    return _this;
  }

  SlidingPanels_createClass(SlidingPanels, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.allowAnimationUpdates = false;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state = this.state,
          activePanel = _this$state.activePanel,
          panelLoading = _this$state.panelLoading;
      var width = activePanel ? activePanel.getWidth() : 0;
      var height = activePanel ? activePanel.getHeight() : 0; // When a new panel is loading, the activePanel is about to be removed. The height and/or
      // width of that panel may have changed since the last render. To ensure that the next
      // panel animates from the current height and width (rather than the previously loaded one),
      // we only set the style when panelLoading is true (immediate prop prevents animation if true).

      var style = {
        width: width,
        height: height
      };
      return /*#__PURE__*/external_react_default.a.createElement(Animation_["Spring"], {
        to: style,
        onRest: this.handleAnimationEnd,
        immediate: panelLoading,
        config: {
          precision: 1
        }
      },
      /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
      this.renderOuterContainer);
    }
  }]);

  return SlidingPanels;
}(external_react_["Component"]);

SlidingPanels_defineProperty(SlidingPanels_SlidingPanels, "propTypes", SlidingPanels_propTypes);

SlidingPanels_defineProperty(SlidingPanels_SlidingPanels, "defaultProps", SlidingPanels_defaultProps);

SlidingPanels_defineProperty(SlidingPanels_SlidingPanels, "Panel", SlidingPanels_Panel);

SlidingPanels_defineProperty(SlidingPanels_SlidingPanels, "getDerivedStateFromProps", function (props, state) {
  if (props.activePanelId !== state.prevActivePanelId) {
    // instead of using panelId, assign each sliding event an id and
    // use it as the key to make sure new panelA will transit as expected if
    // old panelA has not fully left yet
    return {
      animating: true,
      panelLoading: true,
      prevActivePanelId: props.activePanelId,
      slidingId: state.slidingId + 1
    };
  } // Return null to indicate no change to state


  return null;
});

/* harmony default export */ var src_SlidingPanels_SlidingPanels = (SlidingPanels_SlidingPanels);

// CONCATENATED MODULE: ./src/SlidingPanels/index.ts



/***/ }),

/***/ 19:
/***/ (function(module, exports) {

module.exports = require("react-spring");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),

/***/ 31:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Animation");

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),

/***/ 8:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Box");

/***/ })

/******/ });