module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 112);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("@splunk/themes");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),
/* 2 */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),
/* 4 */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/i18n");

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return SVG; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_components__WEBPACK_IMPORTED_MODULE_1__);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }



var Styled = styled_components__WEBPACK_IMPORTED_MODULE_1___default.a.svg.withConfig({
  displayName: "SVG__Styled",
  componentId: "sc-1bz0ryh-0"
})(["flex:0 0 auto;"]);
function SVG(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Styled, _extends({
    xmlns: "http://www.w3.org/2000/svg"
  }, props));
}

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Icon; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _splunk_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);
/* harmony import */ var _splunk_themes__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_splunk_themes__WEBPACK_IMPORTED_MODULE_2__);
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




var inlineStyles = {
  display: 'inline-block',
  flex: '0 0 auto',
  overflow: 'visible',
  verticalAlign: 'middle'
};
var blockStyles = {
  display: 'block',
  flex: '0 0 auto',
  margin: '0 auto',
  overflow: 'visible'
};
var propTypes = {
  Enterprise: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  enterpriseSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),
  enterpriseWidth: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),
  enterpriseHeight: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number, prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string]),
  Prisma24: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func.isRequired,
  Prisma20: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  Prisma16: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  prismaSize: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.oneOf(['medium', 'small']),
  inline: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,
  screenReaderText: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string
};
var defaultProps = {
  inline: true,
  prismaSize: 'medium'
};
function Icon(_ref) {
  var Enterprise = _ref.Enterprise,
      Prisma24 = _ref.Prisma24,
      Prisma20 = _ref.Prisma20,
      Prisma16 = _ref.Prisma16,
      prismaSize = _ref.prismaSize,
      inline = _ref.inline,
      enterpriseSize = _ref.enterpriseSize,
      enterpriseWidth = _ref.enterpriseWidth,
      enterpriseHeight = _ref.enterpriseHeight,
      screenReaderText = _ref.screenReaderText,
      otherProps = _objectWithoutProperties(_ref, ["Enterprise", "Prisma24", "Prisma20", "Prisma16", "prismaSize", "inline", "enterpriseSize", "enterpriseWidth", "enterpriseHeight", "screenReaderText"]);

  var _useSplunkTheme = Object(_splunk_themes__WEBPACK_IMPORTED_MODULE_2__["useSplunkTheme"])(),
      family = _useSplunkTheme.family,
      density = _useSplunkTheme.density; // Enterprise - all variants


  if (family === 'enterprise') {
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Enterprise, _extends({
      size: enterpriseSize,
      width: enterpriseWidth,
      height: enterpriseHeight,
      screenReaderText: screenReaderText || null,
      hideDefaultTooltip: true,
      inline: inline
    }, otherProps));
  }

  var prismaProps = _objectSpread({
    'aria-label': screenReaderText,
    style: inline ? inlineStyles : blockStyles
  }, otherProps); // Prisma - small+compact, small+comfortable


  if (prismaSize === 'small') {
    var SVG = Prisma16 || Prisma24;
    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(SVG, _extends({
      width: "16",
      height: "16"
    }, prismaProps));
  } // Prisma - medium+compact


  if (density === 'compact') {
    var _SVG = Prisma20 || Prisma24;

    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SVG, _extends({
      width: "20",
      height: "20"
    }, prismaProps));
  } // Prisma - medium+comfortable


  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Prisma24, _extends({
    width: "24",
    height: "24"
  }, prismaProps));
}
Icon.propTypes = propTypes;
Icon.defaultProps = defaultProps;

/***/ }),
/* 8 */,
/* 9 */
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/keyboard");

/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/id");

/***/ }),
/* 11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return updateReactRef; });
/**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
function updateReactRef(ref, current) {
  if (ref) {
    if (typeof ref === 'function') {
      ref(current);
    } else {
      // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
      // the intention here is to signal "we will take care of setting 'current', not you".
      ref.current = current; // eslint-disable-line no-param-reassign
    }
  }
}



/***/ }),
/* 12 */,
/* 13 */,
/* 14 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/ScreenReaderContent");

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/EventListener");

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Button");

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Popover");

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Dropdown");

/***/ }),
/* 19 */,
/* 20 */,
/* 21 */,
/* 22 */,
/* 23 */,
/* 24 */,
/* 25 */,
/* 26 */,
/* 27 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChevronRight; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _splunk_react_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(33);
/* harmony import */ var _splunk_react_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_splunk_react_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ThemedIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var _SVG__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }






function Prisma24(_ref) {
  var otherProps = _extends({}, _ref);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SVG__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], _extends({
    viewBox: "0 0 24 24"
  }, otherProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", {
    d: "M14.7861 11.9999L8.48587 5.69972C8.09534 5.3092 8.09534 4.67603 8.48587 4.28551C8.87639 3.89499 9.50956 3.89499 9.90008 4.28551L16.5538 10.9393C17.1396 11.525 17.1396 12.4748 16.5538 13.0606L9.90142 19.713C9.5109 20.1035 8.87773 20.1035 8.48721 19.713C8.09669 19.3224 8.09669 18.6893 8.48721 18.2988L14.7861 11.9999Z",
    fill: "currentColor"
  }));
}

function Prisma16(_ref2) {
  var otherProps = _extends({}, _ref2);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SVG__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], _extends({
    viewBox: "0 0 16 16"
  }, otherProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", {
    d: "M11.7109 7.9976L5.71017 13.9983L4.29597 12.5841L8.88914 7.99095L4.34482 3.40363L5.76567 1.99609L11.7109 7.9976Z",
    fill: "currentColor"
  }));
}

function ChevronRight(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ThemedIcon__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"], _extends({
    Enterprise: _splunk_react_icons_ChevronRight__WEBPACK_IMPORTED_MODULE_1___default.a,
    Prisma16: Prisma16,
    Prisma24: Prisma24
  }, props));
}

/***/ }),
/* 28 */,
/* 29 */,
/* 30 */,
/* 31 */,
/* 32 */,
/* 33 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/ChevronRight");

/***/ }),
/* 34 */,
/* 35 */,
/* 36 */,
/* 37 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/ScrollContainerContext");

/***/ }),
/* 38 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return CaretDown; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _splunk_react_icons_Caret__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(39);
/* harmony import */ var _splunk_react_icons_Caret__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_splunk_react_icons_Caret__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ThemedIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var _SVG__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }






function Prisma24(_ref) {
  var otherProps = _extends({}, _ref);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SVG__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], _extends({
    viewBox: "0 0 24 24"
  }, otherProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", {
    d: "M7.2788 9.00002C6.84609 9.00002 6.61768 9.51239 6.90691 9.83423L11.4078 14.8426C11.6065 15.0637 11.953 15.0636 12.1517 14.8425L16.6499 9.8341C16.939 9.51223 16.7106 9 16.2779 9L7.2788 9.00002Z",
    fill: "currentColor"
  }));
}

function CaretDown(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ThemedIcon__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"], _extends({
    Enterprise: _splunk_react_icons_Caret__WEBPACK_IMPORTED_MODULE_1___default.a,
    Prisma24: Prisma24
  }, props));
}

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Caret");

/***/ }),
/* 40 */,
/* 41 */,
/* 42 */,
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/ChevronDown");

/***/ }),
/* 50 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Tooltip");

/***/ }),
/* 51 */,
/* 52 */,
/* 53 */,
/* 54 */,
/* 55 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return assertDefined; });
// see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31245 for details
// regarding the css prop. certain (versions of) libraries included in the compilation
// - such as storybook->emotion - introduce the css prop using a global augmentation,
// which causes the prop to end up in our declaration files (via JSX.IntrinsicElements).
// it's difficult to control all nested dependencies and their types, which is why the
// css prop is omitted in the two prop helpers above - this ensures the css prop isn't
// erroneously included in react-ui's public api.
// see https://github.com/microsoft/TypeScript/pull/12253
// see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html
function assertDefined(val, msg) {
  if (val === undefined || val === null) {
    throw new Error(msg !== null && msg !== void 0 ? msg : 'Unexpected undefined or null');
  }
}



/***/ }),
/* 56 */,
/* 57 */,
/* 58 */,
/* 59 */,
/* 60 */,
/* 61 */,
/* 62 */,
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return MoreVertical; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _splunk_react_icons_MoreVertical__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(64);
/* harmony import */ var _splunk_react_icons_MoreVertical__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_splunk_react_icons_MoreVertical__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ThemedIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var _SVG__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }






function Prisma24(_ref) {
  var otherProps = _extends({}, _ref);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SVG__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], _extends({
    viewBox: "0 0 24 24"
  }, otherProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", {
    d: "M12.0167 6.27273C12.9205 6.27273 13.6531 5.5401 13.6531 4.63636C13.6531 3.73263 12.9205 3 12.0167 3C11.113 3 10.3804 3.73263 10.3804 4.63636C10.3804 5.5401 11.113 6.27273 12.0167 6.27273ZM13.6531 12C13.6531 12.9038 12.9205 13.6364 12.0167 13.6364C11.113 13.6364 10.3804 12.9038 10.3804 12C10.3804 11.0963 11.113 10.3636 12.0167 10.3636C12.9205 10.3636 13.6531 11.0963 13.6531 12ZM13.6531 19.3637C13.6531 20.2674 12.9205 21 12.0167 21C11.113 21 10.3804 20.2674 10.3804 19.3637C10.3804 18.4599 11.113 17.7273 12.0167 17.7273C12.9205 17.7273 13.6531 18.4599 13.6531 19.3637Z",
    fill: "currentColor"
  }));
}

function MoreVertical(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ThemedIcon__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"], _extends({
    Enterprise: _splunk_react_icons_MoreVertical__WEBPACK_IMPORTED_MODULE_1___default.a,
    Prisma24: Prisma24
  }, props));
}

/***/ }),
/* 64 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/MoreVertical");

/***/ }),
/* 65 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return ChevronDown; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _splunk_react_icons_ChevronDown__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(49);
/* harmony import */ var _splunk_react_icons_ChevronDown__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_splunk_react_icons_ChevronDown__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ThemedIcon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);
/* harmony import */ var _SVG__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(6);
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }






function Prisma24(_ref) {
  var otherProps = _extends({}, _ref);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SVG__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], _extends({
    viewBox: "0 0 24 24"
  }, otherProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", {
    d: "M12.0003 14.7858L18.2955 8.49062C18.686 8.1001 19.3192 8.1001 19.7097 8.49062C20.1003 8.88115 20.1003 9.51431 19.7097 9.90484L13.061 16.5536C12.4752 17.1394 11.5255 17.1394 10.9397 16.5536L4.28899 9.90289C3.89846 9.51236 3.89846 8.8792 4.28899 8.48868C4.67951 8.09815 5.31268 8.09815 5.7032 8.48868L12.0003 14.7858Z",
    fill: "currentColor"
  }));
}

function Prisma16(_ref2) {
  var otherProps = _extends({}, _ref2);

  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_SVG__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], _extends({
    viewBox: "0 0 16 16"
  }, otherProps), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("path", {
    d: "M8.0015 11.7109L14.0022 5.71017L12.588 4.29597L7.99485 8.88914L3.40754 4.34482L2 5.76567L8.0015 11.7109Z",
    fill: "currentColor"
  }));
}

function ChevronDown(props) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_ThemedIcon__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"], _extends({
    Enterprise: _splunk_react_icons_ChevronDown__WEBPACK_IMPORTED_MODULE_1___default.a,
    Prisma16: Prisma16,
    Prisma24: Prisma24
  }, props));
}

/***/ }),
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Switch");

/***/ }),
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */,
/* 78 */,
/* 79 */,
/* 80 */,
/* 81 */,
/* 82 */,
/* 83 */,
/* 84 */,
/* 85 */,
/* 86 */,
/* 87 */,
/* 88 */,
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */
/***/ (function(module, exports) {

module.exports = require("react-resize-detector");

/***/ }),
/* 106 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/SortedDown");

/***/ }),
/* 107 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/SortedUp");

/***/ }),
/* 108 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Sort");

/***/ }),
/* 109 */
/***/ (function(module, exports) {

module.exports = require("@splunk/react-icons/Info");

/***/ }),
/* 110 */,
/* 111 */,
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* reexport */ src_Table_Table; });
__webpack_require__.d(__webpack_exports__, "Body", function() { return /* reexport */ Table_Body; });
__webpack_require__.d(__webpack_exports__, "Caption", function() { return /* reexport */ Table_Caption; });
__webpack_require__.d(__webpack_exports__, "Cell", function() { return /* reexport */ Table_Cell; });
__webpack_require__.d(__webpack_exports__, "Head", function() { return /* reexport */ Table_Head; });
__webpack_require__.d(__webpack_exports__, "HeadCell", function() { return /* reexport */ Table_HeadCell; });
__webpack_require__.d(__webpack_exports__, "HeadDropdownCell", function() { return /* reexport */ Table_HeadDropdownCell; });
__webpack_require__.d(__webpack_exports__, "Row", function() { return /* reexport */ Table_Row; });

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(2);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(1);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(4);

// EXTERNAL MODULE: external "react-resize-detector"
var external_react_resize_detector_ = __webpack_require__(105);
var external_react_resize_detector_default = /*#__PURE__*/__webpack_require__.n(external_react_resize_detector_);

// EXTERNAL MODULE: external "@splunk/react-ui/EventListener"
var EventListener_ = __webpack_require__(15);
var EventListener_default = /*#__PURE__*/__webpack_require__.n(EventListener_);

// EXTERNAL MODULE: external "@splunk/ui-utils/keyboard"
var keyboard_ = __webpack_require__(9);

// EXTERNAL MODULE: external "@splunk/react-ui/ScrollContainerContext"
var ScrollContainerContext_ = __webpack_require__(37);

// EXTERNAL MODULE: external "styled-components"
var external_styled_components_ = __webpack_require__(3);
var external_styled_components_default = /*#__PURE__*/__webpack_require__.n(external_styled_components_);

// EXTERNAL MODULE: external "@splunk/themes"
var themes_ = __webpack_require__(0);

// CONCATENATED MODULE: ./src/Table/BodyStyles.ts


var Styled = external_styled_components_default.a.tbody.withConfig({
  displayName: "BodyStyles__Styled",
  componentId: "sc-1k5p6pq-0"
})(["", " z-index:0;"], themes_["mixins"].reset('table-row-group'));

// EXTERNAL MODULE: ./src/utils/updateReactRef.ts
var updateReactRef = __webpack_require__(11);

// CONCATENATED MODULE: ./src/Table/Body.tsx
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var propTypes = {
  /** @private. Generally passed by Table rather than added directly. */
  actions: external_prop_types_default.a.bool,
  children: external_prop_types_default.a.node,
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),

  /** @private. Generally passed by Table rather than added directly. */
  movableColumns: external_prop_types_default.a.bool,

  /** @private. Generally passed by Table rather than added directly. */
  rowExpansion: external_prop_types_default.a.oneOf(['single', 'multi', 'none', 'controlled']),

  /** @private. Generally passed by Table rather than added directly. */
  onRequestMoveRow: external_prop_types_default.a.func,

  /** @private. Generally passed by Table rather than added directly. */
  stripeRows: external_prop_types_default.a.bool
};
var defaultProps = {
  actions: false,
  rowExpansion: 'none',
  stripeRows: false
};

var Body_Body = /*#__PURE__*/function (_Component) {
  _inherits(Body, _Component);

  var _super = _createSuper(Body);

  // @docs-props-type BodyPropsBase
  function Body(props) {
    var _this;

    _classCallCheck(this, Body);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "el", null);

    _defineProperty(_assertThisInitialized(_this), "rect", void 0);

    _defineProperty(_assertThisInitialized(_this), "rowHeight", void 0);

    _defineProperty(_assertThisInitialized(_this), "rows", void 0);

    _defineProperty(_assertThisInitialized(_this), "handleDragStart", function (dragIndex, dragDataId) {
      var _this$el, _this$el$parentElemen, _this$el$parentElemen2, _this$el2;

      _this.rect = (_this$el = _this.el) === null || _this$el === void 0 ? void 0 : (_this$el$parentElemen = _this$el.parentElement) === null || _this$el$parentElemen === void 0 ? void 0 : (_this$el$parentElemen2 = _this$el$parentElemen.parentElement) === null || _this$el$parentElemen2 === void 0 ? void 0 : _this$el$parentElemen2.getBoundingClientRect();
      _this.rowHeight = (_this$el2 = _this.el) === null || _this$el2 === void 0 ? void 0 : _this$el2.children[0].getBoundingClientRect().height;

      _this.setState({
        dragIndex: dragIndex,
        dragDataId: dragDataId
      });

      window.addEventListener('dragenter', _this.handleDragEnter);
      window.addEventListener('dragover', _this.handleDragOver);
      window.addEventListener('drop', _this.handleDrop);
      window.addEventListener('dragend', _this.handleDragEnd);
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragOver", function (e) {
      e.preventDefault(); // necessary for the drop event to fire

      if (e.dataTransfer) {
        e.dataTransfer.dropEffect = 'move';
      }

      var y = e.clientY;

      _this.updateScrollPosition(y);

      _this.updateDragPosition(y);
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragEnter", function (e) {
      e.preventDefault(); // necessary for the drop event to fire

      _this.setState({
        dragPosition: e.clientY
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleDrop", function (e) {
      e.preventDefault(); // necessary to prevent cell from animating to original position;
    });

    _defineProperty(_assertThisInitialized(_this), "handleDragEnd", function () {
      var _this$state = _this.state,
          dragIndex = _this$state.dragIndex,
          dragDataId = _this$state.dragDataId;

      var guidelineIndex = _this.calculateGuideIndex(); // The new index is not necessarily the same as the guidelineIndex


      if (dragIndex !== undefined) {
        var toIndex = dragIndex < guidelineIndex ? guidelineIndex - 1 : guidelineIndex;

        if (dragIndex !== toIndex) {
          var _this$props$onRequest, _this$props;

          (_this$props$onRequest = (_this$props = _this.props).onRequestMoveRow) === null || _this$props$onRequest === void 0 ? void 0 : _this$props$onRequest.call(_this$props, {
            fromIndex: dragIndex,
            toIndex: toIndex,
            dataId: dragDataId
          });
        }
      }

      _this.setState({
        dragPosition: undefined
      });

      _this.cleanupDrag();
    });

    _defineProperty(_assertThisInitialized(_this), "onRequestMoveRow", function (_ref) {
      var dataId = _ref.dataId,
          fromIndex = _ref.fromIndex,
          toIndex = _ref.toIndex;

      _this.setState({
        dragDataId: dataId
      });

      if (toIndex < external_react_["Children"].toArray(_this.props.children).length) {
        var _this$props$onRequest2, _this$props2;

        (_this$props$onRequest2 = (_this$props2 = _this.props).onRequestMoveRow) === null || _this$props$onRequest2 === void 0 ? void 0 : _this$props$onRequest2.call(_this$props2, {
          fromIndex: fromIndex,
          toIndex: toIndex,
          dataId: dataId
        });
      }
    });

    _defineProperty(_assertThisInitialized(_this), "handleMount", function (el) {
      _this.el = el;
      Object(updateReactRef["a" /* updateReactRef */])(_this.props.elementRef, el);
    });

    _defineProperty(_assertThisInitialized(_this), "updateDragPosition", Object(external_lodash_["throttle"])(_this.updateDragPositionImpl, 100, {
      trailing: false
    }));

    _this.state = {
      dragDataId: undefined,
      expanded: []
    };
    _this.rowHeight = 0;
    return _this;
  }

  _createClass(Body, [{
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cleanupDrag();
    }
  }, {
    key: "handleRowExpansion",
    value: function handleRowExpansion(event, key, onExpansion) {
      var current = this.state.expanded;

      if (this.props.rowExpansion === 'single') {
        if (Object(external_lodash_["includes"])(current, key)) {
          this.setState({
            expanded: []
          });
        } else {
          this.setState({
            expanded: [key]
          });
        }
      } else if (this.props.rowExpansion === 'multi') {
        if (Object(external_lodash_["includes"])(current, key)) {
          this.setState({
            expanded: Object(external_lodash_["without"])(current, key)
          });
        } else {
          this.setState({
            expanded: current.concat(key)
          });
        }
      }

      onExpansion === null || onExpansion === void 0 ? void 0 : onExpansion(event);
    }
  }, {
    key: "calculateGuideIndex",
    value: function calculateGuideIndex() {
      var _this$state2 = this.state,
          dragIndex = _this$state2.dragIndex,
          dragPosition = _this$state2.dragPosition;

      if (dragPosition === undefined || !this.el) {
        return -1;
      }

      this.rows = Array.from(this.el.children);
      var overIndex = Object(external_lodash_["findIndex"])(this.rows, function (row) {
        var rect = row.getBoundingClientRect();
        return dragPosition > rect.top && dragPosition < rect.bottom;
      });

      if (overIndex === -1) {
        // must be too far left or right;
        var rect = this.el.getBoundingClientRect();
        return dragPosition < rect.top ? 0 : this.rows.length;
      }

      if (dragIndex !== undefined && overIndex > dragIndex) {
        return overIndex + 1;
      }

      return overIndex;
    }
  }, {
    key: "updateDragPositionImpl",
    value: function updateDragPositionImpl(dragPosition) {
      this.setState({
        dragPosition: dragPosition
      });
    }
  }, {
    key: "updateScrollPosition",
    value: function updateScrollPosition(y) {
      var _this$el3, _this$el3$parentEleme;

      var rect = this.rect;

      if (((_this$el3 = this.el) === null || _this$el3 === void 0 ? void 0 : (_this$el3$parentEleme = _this$el3.parentElement) === null || _this$el3$parentEleme === void 0 ? void 0 : _this$el3$parentEleme.parentElement) && rect && this.rowHeight !== undefined && y < rect.top + this.rowHeight * 2 + 5) {
        this.el.parentElement.parentElement.scrollTop -= 1;
      }
    }
  }, {
    key: "cleanupDrag",
    value: function cleanupDrag() {
      window.removeEventListener('dragenter', this.handleDragEnter);
      window.removeEventListener('dragover', this.handleDragOver);
      window.removeEventListener('drop', this.handleDrop);
      window.removeEventListener('dragend', this.handleDragEnd);
      this.updateDragPosition.cancel();
      this.rows = undefined;
      this.rect = undefined;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$state$dragDataI,
          _this2 = this;

      var _this$props3 = this.props,
          actions = _this$props3.actions,
          children = _this$props3.children,
          movableColumns = _this$props3.movableColumns,
          onRequestMoveRow = _this$props3.onRequestMoveRow,
          rowExpansion = _this$props3.rowExpansion,
          stripeRows = _this$props3.stripeRows,
          otherProps = _objectWithoutProperties(_this$props3, ["actions", "children", "movableColumns", "onRequestMoveRow", "rowExpansion", "stripeRows"]);

      var rows = [];
      var guidelineRowIndex = this.calculateGuideIndex();
      var activeElementId = (_this$state$dragDataI = this.state.dragDataId) === null || _this$state$dragDataI === void 0 ? void 0 : _this$state$dragDataI.toString();
      var filteredChildren = external_react_["Children"].toArray(children).filter(external_react_["isValidElement"]);
      filteredChildren.forEach(function (child, i) {
        var showRowGuideline = 'none';

        if (guidelineRowIndex === filteredChildren.length && i + 1 === filteredChildren.length) {
          showRowGuideline = 'after';
        } else if (guidelineRowIndex === i) {
          showRowGuideline = 'before';
        }

        if (child) {
          if (false) {}

          var key = child.key;
          var oddOrEven = i % 2 ? 'even' : 'odd';
          var stripe = stripeRows ? oddOrEven : 'none';
          var expanded = rowExpansion === 'controlled' ? child.props.expanded : Object(external_lodash_["includes"])(_this2.state.expanded, key);

          var onExpansion = function onExpansion(e) {
            _this2.handleRowExpansion(e, key, child.props.onExpansion);
          };

          rows.push( /*#__PURE__*/Object(external_react_["cloneElement"])(child, {
            index: i,
            showRowGuideline: showRowGuideline,
            stripe: stripe,
            actions: actions,
            expanded: expanded,
            expandable: rowExpansion !== 'none',
            draggable: !!onRequestMoveRow,
            movableColumns: movableColumns,
            onExpansion: onExpansion,
            onRequestMoveRow: onRequestMoveRow ? _this2.onRequestMoveRow : undefined,
            onDragStart: onRequestMoveRow ? _this2.handleDragStart : undefined,
            key: child.key || child.props.dataId || i,
            dataId: child.key || child.props.dataId || i,
            activeElementId: activeElementId
          }));

          if (expanded && child.props.expansionRow) {
            external_react_["Children"].forEach(child.props.expansionRow, function (expansionRow, index) {
              return rows.push( /*#__PURE__*/Object(external_react_["cloneElement"])(expansionRow, {
                key: "".concat(key, "-expansion-").concat(index),
                stripe: stripe,
                movableColumns: movableColumns,
                onRequestMoveRow: onRequestMoveRow,
                'data-expansion-row': 'true'
              }));
            });
          }
        }
      });

      if (rows.length === 0) {
        return null;
      }

      return /*#__PURE__*/external_react_default.a.createElement(Styled, _extends({
        "data-test": "body"
      }, otherProps, {
        ref: this.handleMount
      }), rows);
    }
  }]);

  return Body;
}(external_react_["Component"]);

_defineProperty(Body_Body, "splunkUiType", 'Table.Body');

_defineProperty(Body_Body, "propTypes", propTypes);

_defineProperty(Body_Body, "defaultProps", defaultProps);

/* harmony default export */ var Table_Body = (Body_Body);
// CONCATENATED MODULE: ./src/Table/TableStyles.ts


var TableStyles_Styled = external_styled_components_default.a.div.withConfig({
  displayName: "TableStyles__Styled",
  componentId: "sc-1cmfss7-0"
})(["", ";max-width:100%;position:relative;z-index:1;@media print{max-height:none !important;}"], themes_["mixins"].reset('block'));
var StyledTableContainer = external_styled_components_default.a.div.withConfig({
  displayName: "TableStyles__StyledTableContainer",
  componentId: "sc-1cmfss7-1"
})(["overflow:auto;&::before{content:'';width:100%;height:0;top:0;position:absolute;}"]);
var StyledTable = external_styled_components_default.a.table.withConfig({
  displayName: "TableStyles__StyledTable",
  componentId: "sc-1cmfss7-2"
})(["", ";position:relative;border-collapse:collapse;border-spacing:0;min-width:100%;z-index:0;&[data-fixed-column='true']{table-layout:fixed;min-width:0;width:0;}", " @media print{width:100%;max-width:100%;table-layout:auto;}"], themes_["mixins"].reset('table'), function (_ref) {
  var $resizableFillLayout = _ref.$resizableFillLayout;
  return $resizableFillLayout && Object(external_styled_components_["css"])(["width:100%;min-width:100%;table-layout:fixed;"]);
});
var StyledDockedScrollbar = external_styled_components_default.a.div.withConfig({
  displayName: "TableStyles__StyledDockedScrollbar",
  componentId: "sc-1cmfss7-3"
})(["position:fixed;bottom:0;overflow:auto;z-index:calc(", " + 1);"], themes_["variables"].zindexFixedNavbar);
var StyledDockedScrollbarContent = external_styled_components_default.a.div.withConfig({
  displayName: "TableStyles__StyledDockedScrollbarContent",
  componentId: "sc-1cmfss7-4"
})(["height:1px;"]);
var StyledTableCaption = external_styled_components_default.a.caption.withConfig({
  displayName: "TableStyles__StyledTableCaption",
  componentId: "sc-1cmfss7-5"
})(["padding:", ";font-size:", ";caption-side:", ";"], Object(themes_["pick"])({
  enterprise: "".concat(themes_["variables"].spacingQuarter, " 0"),
  prisma: "5px 0"
}), themes_["variables"].fontSizeLarge, function (_ref2) {
  var side = _ref2.side;
  return side;
});

// CONCATENATED MODULE: ./src/Table/Caption.tsx
function Caption_extends() { Caption_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Caption_extends.apply(this, arguments); }

function Caption_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Caption_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Caption_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }




var Caption_propTypes = {
  children: external_prop_types_default.a.node.isRequired,
  side: external_prop_types_default.a.oneOf(['top', 'bottom'])
};

/**
 * Tables that use a docked header must place the caption on the bottom side.
 * Tables that use a fixed header cannot use captions.
 */
function Caption(_ref) {
  var children = _ref.children,
      _ref$side = _ref.side,
      side = _ref$side === void 0 ? 'top' : _ref$side,
      otherProps = Caption_objectWithoutProperties(_ref, ["children", "side"]);

  // @docs-props-type CaptionPropsBase
  return /*#__PURE__*/external_react_default.a.createElement(StyledTableCaption, Caption_extends({
    "data-test": "caption",
    side: side
  }, otherProps), children);
}

Caption.propTypes = Caption_propTypes;
Caption.splunkUiType = 'Table.Caption';
/* harmony default export */ var Table_Caption = (Caption);
// CONCATENATED MODULE: ./src/Table/CellStyles.ts


var CellStyles_Styled = external_styled_components_default.a.td.withConfig({
  displayName: "CellStyles__Styled",
  componentId: "sc-1955xk2-0"
})(["", " padding:", ";border-left:0 solid transparent;border-right:0 solid transparent;word-wrap:break-word;line-height:", ";vertical-align:top;", " ", " ", " ", " ", " ", " [data-expansion-row='true'] > &:first-child{padding-top:8px;}[data-expansion-row='true'] > &:last-child{padding-bottom:14px;}[data-has-movable-columns='true'] > &:not([data-movable-column='false']){", "}"], themes_["mixins"].reset('table-cell'), Object(themes_["pick"])({
  enterprise: '6px 12px',
  prisma: {
    comfortable: '14px 8px',
    compact: '6px 8px'
  }
}), themes_["variables"].lineHeight, Object(themes_["pickVariant"])('$align', {
  center: Object(external_styled_components_["css"])(["text-align:center;"]),
  left: Object(external_styled_components_["css"])(["text-align:left;"]),
  right: Object(external_styled_components_["css"])(["text-align:right;"])
}), Object(themes_["pickVariant"])('$variant', {
  expand: {
    enterprise: Object(external_styled_components_["css"])(["padding:6px 0 0 0;"]),
    prisma: {
      comfortable: Object(external_styled_components_["css"])(["padding:12px 0 0 0;"]),
      compact: Object(external_styled_components_["css"])(["padding:4px 0 0 0;"])
    }
  },
  actions: {
    prisma: {
      comfortable: Object(external_styled_components_["css"])(["padding:4px 8px;"]),
      compact: Object(external_styled_components_["css"])(["padding:0 8px 0 0;"])
    }
  },
  toggle: {
    prisma: {
      comfortable: Object(external_styled_components_["css"])(["padding:10px 0 0 0;"]),
      compact: Object(external_styled_components_["css"])(["padding:6px 0 0 0;"])
    }
  }
}), Object(themes_["pickVariant"])('$appearance', {
  rowLink: {
    enterprise: Object(external_styled_components_["css"])(["color:", ";*:hover > &{cursor:pointer;}"], themes_["variables"].linkColor),
    prisma: Object(external_styled_components_["css"])(["color:", ";*:hover > &{cursor:pointer;}"], themes_["variables"].contentColorDefault)
  },
  link: {
    enterprise: Object(external_styled_components_["css"])(["color:", ";&:hover{cursor:pointer;color:{dark:variables.accentColorL20,light:variables.linkColor,};box-shadow:", ";}&:focus{color:{dark:variables.accentColorL20,light:variables.focusColor,};box-shadow:", ";}"], themes_["variables"].linkColor, themes_["variables"].focusShadowInset, themes_["variables"].focusShadowInset)
  }
}), function (_ref) {
  var $clickable = _ref.$clickable;
  return $clickable && Object(external_styled_components_["css"])(["cursor:pointer;&:hover{background-color:", ";color:", ";}&:focus{box-shadow:", ";color:", ";}&:active{background:", ";}"], Object(themes_["pick"])({
    enterprise: {
      light: themes_["variables"].accentColorL50,
      dark: themes_["variables"].accentColorD50
    },
    prisma: themes_["variables"].interactiveColorOverlayHover
  }), Object(themes_["pick"])({
    prisma: themes_["variables"].contentColorDefault
  }), themes_["variables"].focusShadowInset, Object(themes_["pick"])({
    prisma: themes_["variables"].contentColorDefault
  }), Object(themes_["pick"])({
    prisma: themes_["variables"].interactiveColorOverlayActive
  }));
}, function (_ref2) {
  var $expanded = _ref2.$expanded;
  return $expanded && Object(external_styled_components_["css"])(["background-color:", ";"], Object(themes_["pick"])({
    prisma: themes_["variables"].interactiveColorOverlaySelected
  }));
}, function (_ref3) {
  var $disabled = _ref3.$disabled;
  return $disabled && Object(external_styled_components_["css"])(["color:", ";"], Object(themes_["pick"])({
    prisma: themes_["variables"].contentColorDisabled
  }));
}, Object(themes_["pick"])({
  enterprise: Object(external_styled_components_["css"])(["padding-left:29px;&:first-child{padding-left:28px;}"])
}));

// CONCATENATED MODULE: ./src/Table/Cell.tsx
function Cell_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Cell_typeof = function _typeof(obj) { return typeof obj; }; } else { Cell_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Cell_typeof(obj); }

function Cell_extends() { Cell_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Cell_extends.apply(this, arguments); }

function Cell_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Cell_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Cell_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function Cell_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Cell_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Cell_createClass(Constructor, protoProps, staticProps) { if (protoProps) Cell_defineProperties(Constructor.prototype, protoProps); if (staticProps) Cell_defineProperties(Constructor, staticProps); return Constructor; }

function Cell_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Cell_setPrototypeOf(subClass, superClass); }

function Cell_setPrototypeOf(o, p) { Cell_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Cell_setPrototypeOf(o, p); }

function Cell_createSuper(Derived) { var hasNativeReflectConstruct = Cell_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Cell_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Cell_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Cell_possibleConstructorReturn(this, result); }; }

function Cell_possibleConstructorReturn(self, call) { if (call && (Cell_typeof(call) === "object" || typeof call === "function")) { return call; } return Cell_assertThisInitialized(self); }

function Cell_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function Cell_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function Cell_getPrototypeOf(o) { Cell_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Cell_getPrototypeOf(o); }

function Cell_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






var Cell_propTypes = {
  align: external_prop_types_default.a.oneOf(['left', 'center', 'right']),

  /** @private */
  appearance: external_prop_types_default.a.oneOf(['data', 'link', 'rowLink']),
  children: external_prop_types_default.a.node,
  data: external_prop_types_default.a.any,
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  onClick: external_prop_types_default.a.func,

  /** @private */
  onKeyDown: external_prop_types_default.a.func,

  /** @private */
  disabled: external_prop_types_default.a.bool,

  /** @private. */
  expand: external_prop_types_default.a.bool,

  /** @private. */
  variant: external_prop_types_default.a.oneOf(['toggle', 'expand', 'drag', 'actions'])
};
var Cell_defaultProps = {
  align: 'left'
};

var Cell_Cell = /*#__PURE__*/function (_Component) {
  Cell_inherits(Cell, _Component);

  var _super = Cell_createSuper(Cell);

  function Cell() {
    var _this;

    Cell_classCallCheck(this, Cell);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    Cell_defineProperty(Cell_assertThisInitialized(_this), "el", null);

    Cell_defineProperty(Cell_assertThisInitialized(_this), "handleMount", function (el) {
      _this.el = el;
      Object(updateReactRef["a" /* updateReactRef */])(_this.props.elementRef, el);
    });

    Cell_defineProperty(Cell_assertThisInitialized(_this), "handleClick", function (e) {
      var _this$props = _this.props,
          data = _this$props.data,
          onClick = _this$props.onClick;
      onClick === null || onClick === void 0 ? void 0 : onClick(e, data);
    });

    Cell_defineProperty(Cell_assertThisInitialized(_this), "handleKeyDown", function (e) {
      var _this$props2 = _this.props,
          data = _this$props2.data,
          onClick = _this$props2.onClick,
          onKeyDown = _this$props2.onKeyDown;

      if (Object(keyboard_["keycode"])(e.nativeEvent) === 'enter') {
        onClick === null || onClick === void 0 ? void 0 : onClick(e, data);
      }

      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);
    });

    return _this;
  }

  Cell_createClass(Cell, [{
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
          align = _this$props3.align,
          appearance = _this$props3.appearance,
          children = _this$props3.children,
          disabled = _this$props3.disabled,
          elementRef = _this$props3.elementRef,
          onClick = _this$props3.onClick,
          onKeyDown = _this$props3.onKeyDown,
          variant = _this$props3.variant,
          otherProps = Cell_objectWithoutProperties(_this$props3, ["align", "appearance", "children", "disabled", "elementRef", "onClick", "onKeyDown", "variant"]);

      var clickable = onClick !== undefined;
      var defaultAppearance = clickable ? 'link' : 'data';
      return /*#__PURE__*/external_react_default.a.createElement(CellStyles_Styled, Cell_extends({
        "data-test": "cell",
        $align: align,
        $appearance: appearance || defaultAppearance,
        $clickable: clickable ? true : undefined,
        $disabled: !!disabled,
        $variant: variant,
        onClick: this.handleClick,
        onKeyDown: this.handleKeyDown,
        ref: this.handleMount,
        tabIndex: clickable ? 0 : undefined
      }, otherProps), children);
    }
  }]);

  return Cell;
}(external_react_["Component"]);

Cell_defineProperty(Cell_Cell, "splunkUiType", 'Table.Cell');

Cell_defineProperty(Cell_Cell, "propTypes", Cell_propTypes);

Cell_defineProperty(Cell_Cell, "defaultProps", Cell_defaultProps);

/* harmony default export */ var Table_Cell = (Cell_Cell);
// EXTERNAL MODULE: external "@splunk/ui-utils/i18n"
var i18n_ = __webpack_require__(5);

// EXTERNAL MODULE: external "@splunk/react-icons/SortedDown"
var SortedDown_ = __webpack_require__(106);
var SortedDown_default = /*#__PURE__*/__webpack_require__.n(SortedDown_);

// EXTERNAL MODULE: ./src/icons/ThemedIcon.tsx
var ThemedIcon = __webpack_require__(7);

// EXTERNAL MODULE: ./src/icons/SVG.tsx
var SVG = __webpack_require__(6);

// CONCATENATED MODULE: ./src/icons/SortedDown.tsx
function SortedDown_extends() { SortedDown_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return SortedDown_extends.apply(this, arguments); }






function Prisma24(_ref) {
  var otherProps = SortedDown_extends({}, _ref);

  return /*#__PURE__*/external_react_default.a.createElement(SVG["a" /* default */], SortedDown_extends({
    viewBox: "0 0 24 24"
  }, otherProps), /*#__PURE__*/external_react_default.a.createElement("path", {
    d: "M6.55086 12.337C6.16033 11.9465 5.52717 11.9465 5.13664 12.337C4.74612 12.7276 4.74612 13.3607 5.13664 13.7512L10.9391 19.5537C11.5249 20.1395 12.4746 20.1395 13.0604 19.5537L18.8628 13.7513C19.2534 13.3607 19.2534 12.7276 18.8628 12.337C18.4723 11.9465 17.8391 11.9465 17.4486 12.337L13 16.7856V5.00244C13 4.45016 12.5523 4.00244 12 4.00244C11.4477 4.00244 11 4.45016 11 5.00244V16.7862L6.55086 12.337Z",
    fill: "currentColor"
  }));
}

function Prisma16(_ref2) {
  var otherProps = SortedDown_extends({}, _ref2);

  return /*#__PURE__*/external_react_default.a.createElement(SVG["a" /* default */], SortedDown_extends({
    viewBox: "0 0 16 16"
  }, otherProps), /*#__PURE__*/external_react_default.a.createElement("path", {
    d: "M8 2C8.55228 2 9 2.44772 9 3V10.0858L11.7929 7.29289C12.1834 6.90237 12.8166 6.90237 13.2071 7.29289C13.5976 7.68342 13.5976 8.31658 13.2071 8.70711L9.06066 12.8536C8.47487 13.4393 7.52513 13.4393 6.93934 12.8536L2.79289 8.70711C2.40237 8.31658 2.40237 7.68342 2.79289 7.29289C3.18342 6.90237 3.81658 6.90237 4.20711 7.29289L7 10.0858V3C7 2.44772 7.44772 2 8 2Z",
    fill: "currentColor"
  }));
}

function SortedDown(props) {
  return /*#__PURE__*/external_react_default.a.createElement(ThemedIcon["a" /* default */], SortedDown_extends({
    Enterprise: SortedDown_default.a,
    Prisma16: Prisma16,
    Prisma24: Prisma24
  }, props));
}
// EXTERNAL MODULE: external "@splunk/react-icons/SortedUp"
var SortedUp_ = __webpack_require__(107);
var SortedUp_default = /*#__PURE__*/__webpack_require__.n(SortedUp_);

// CONCATENATED MODULE: ./src/icons/SortedUp.tsx
function SortedUp_extends() { SortedUp_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return SortedUp_extends.apply(this, arguments); }






function SortedUp_Prisma24(_ref) {
  var otherProps = SortedUp_extends({}, _ref);

  return /*#__PURE__*/external_react_default.a.createElement(SVG["a" /* default */], SortedUp_extends({
    viewBox: "0 0 24 24"
  }, otherProps), /*#__PURE__*/external_react_default.a.createElement("path", {
    d: "M6.55135 11.6631C6.16082 12.0536 5.52766 12.0536 5.13713 11.6631C4.74661 11.2725 4.74661 10.6394 5.13713 10.2488L10.9396 4.44642C11.5253 3.86064 12.4751 3.86063 13.0609 4.44642L18.8633 10.2488C19.2538 10.6394 19.2538 11.2725 18.8633 11.6631C18.4728 12.0536 17.8396 12.0536 17.4491 11.6631L13 7.21397V19.0009C13 19.5532 12.5523 20.0009 12 20.0009C11.4477 20.0009 11 19.5532 11 19.0009V7.21441L6.55135 11.6631Z",
    fill: "currentColor"
  }));
}

function SortedUp_Prisma16(_ref2) {
  var otherProps = SortedUp_extends({}, _ref2);

  return /*#__PURE__*/external_react_default.a.createElement(SVG["a" /* default */], SortedUp_extends({
    viewBox: "0 0 16 16"
  }, otherProps), /*#__PURE__*/external_react_default.a.createElement("path", {
    d: "M9 5.91414L11.7929 8.70703C12.1834 9.09756 12.8166 9.09756 13.2071 8.70703C13.5976 8.31651 13.5976 7.68334 13.2071 7.29282L9.06066 3.14637C8.47487 2.56059 7.52513 2.56058 6.93934 3.14637L2.79289 7.29282C2.40237 7.68334 2.40237 8.31651 2.79289 8.70703C3.18342 9.09756 3.81658 9.09756 4.20711 8.70703L7 5.91414V12.9999C7 13.5522 7.44772 13.9999 8 13.9999C8.55228 13.9999 9 13.5522 9 12.9999V5.91414Z",
    fill: "currentColor"
  }));
}

function SortedUp(props) {
  return /*#__PURE__*/external_react_default.a.createElement(ThemedIcon["a" /* default */], SortedUp_extends({
    Enterprise: SortedUp_default.a,
    Prisma16: SortedUp_Prisma16,
    Prisma24: SortedUp_Prisma24
  }, props));
}
// EXTERNAL MODULE: external "@splunk/react-icons/Sort"
var Sort_ = __webpack_require__(108);
var Sort_default = /*#__PURE__*/__webpack_require__.n(Sort_);

// CONCATENATED MODULE: ./src/icons/Sort.tsx
function Sort_extends() { Sort_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Sort_extends.apply(this, arguments); }






function Sort_Prisma24(_ref) {
  var otherProps = Sort_extends({}, _ref);

  return /*#__PURE__*/external_react_default.a.createElement(SVG["a" /* default */], Sort_extends({
    viewBox: "0 0 24 24"
  }, otherProps), /*#__PURE__*/external_react_default.a.createElement("path", {
    d: "M7.2788 9.00002C6.84609 9.00002 6.61768 9.51239 6.90691 9.83423L11.4078 14.8426C11.6065 15.0637 11.953 15.0636 12.1517 14.8425L16.6499 9.8341C16.939 9.51223 16.7106 9 16.2779 9L7.2788 9.00002Z",
    fill: "currentColor"
  }));
}

function Sort_Prisma16(_ref2) {
  var otherProps = Sort_extends({}, _ref2);

  return /*#__PURE__*/external_react_default.a.createElement(SVG["a" /* default */], Sort_extends({
    viewBox: "0 0 16 16"
  }, otherProps), /*#__PURE__*/external_react_default.a.createElement("path", {
    d: "M6.93934 2.14662C7.52513 1.56083 8.47487 1.56083 9.06066 2.14662L11.7071 4.79306C12.0976 5.18359 12.0976 5.81675 11.7071 6.20728C11.3166 6.5978 10.6834 6.5978 10.2929 6.20728L9 4.91438V11.0859L10.2929 9.79297C10.6834 9.40244 11.3166 9.40244 11.7071 9.79297C12.0976 10.1835 12.0976 10.8167 11.7071 11.2072L9.06066 13.8536C8.47487 14.4394 7.52513 14.4394 6.93934 13.8536L4.29289 11.2072C3.90237 10.8167 3.90237 10.1835 4.29289 9.79297C4.68342 9.40244 5.31658 9.40244 5.70711 9.79297L7 11.0859V4.91438L5.70711 6.20728C5.31658 6.5978 4.68342 6.5978 4.29289 6.20728C3.90237 5.81675 3.90237 5.18359 4.29289 4.79306L6.93934 2.14662Z",
    fill: "currentColor"
  }));
}

function CaretDown(props) {
  return /*#__PURE__*/external_react_default.a.createElement(ThemedIcon["a" /* default */], Sort_extends({
    Enterprise: Sort_default.a,
    Prisma16: Sort_Prisma16,
    Prisma24: Sort_Prisma24
  }, props));
}
// EXTERNAL MODULE: ./src/icons/CaretDown.tsx
var icons_CaretDown = __webpack_require__(38);

// EXTERNAL MODULE: external "@splunk/react-ui/ScreenReaderContent"
var ScreenReaderContent_ = __webpack_require__(14);
var ScreenReaderContent_default = /*#__PURE__*/__webpack_require__.n(ScreenReaderContent_);

// CONCATENATED MODULE: ./src/Table/HeadInnerStyles.ts


var tableHorizontalSpacing = '12px';
var StyledDragContainer = external_styled_components_default.a.div.withConfig({
  displayName: "HeadInnerStyles__StyledDragContainer",
  componentId: "sc-1sa0wng-0"
})(["position:absolute;cursor:move;top:0;", " padding:", ";"], Object(themes_["pick"])({
  enterprise: Object(external_styled_components_["css"])(["left:0;"]),
  prisma: Object(external_styled_components_["css"])(["right:0;"])
}), Object(themes_["pick"])({
  enterprise: '9px 12px',
  prisma: {
    comfortable: '17px 4px 14px',
    compact: '9px 4px 6px'
  }
}));
var StyledMenuIcon = external_styled_components_default.a.span.withConfig({
  displayName: "HeadInnerStyles__StyledMenuIcon",
  componentId: "sc-1sa0wng-1"
})(["", " color:", ";position:relative;"], Object(themes_["pick"])({
  prisma: Object(external_styled_components_["css"])(["display:inline-flex;"]),
  enterprise: Object(external_styled_components_["css"])(["padding-left:4px;"])
}), Object(themes_["pick"])({
  enterprise: themes_["variables"].textGray,
  prisma: themes_["variables"].contentColorDefault
}));
var StyledLabel = external_styled_components_default.a.span.withConfig({
  displayName: "HeadInnerStyles__StyledLabel",
  componentId: "sc-1sa0wng-2"
})(["flex:0 1 auto;position:relative;word-wrap:break-word;word-break:break-word;", " ", " ", " ", " ", " + &{margin-left:", ";}"], Object(themes_["pick"])({
  enterprise: function enterprise(_ref) {
    var $align = _ref.$align;
    return $align !== 'right' && Object(external_styled_components_["css"])(["display:flex;justify-content:space-between;"]);
  },
  prisma: Object(external_styled_components_["css"])(["display:flex;"])
}), Object(themes_["pickVariant"])('$truncate', {
  "true": Object(external_styled_components_["css"])(["overflow:hidden;text-overflow:ellipsis;white-space:nowrap;"])
}), Object(themes_["pickVariant"])('$fill', {
  "true": Object(external_styled_components_["css"])(["flex:1 0 0px;"])
}), Object(themes_["pickVariant"])('$align', {
  right: Object(external_styled_components_["css"])(["& > &{text-align:right;}"]),
  left: Object(external_styled_components_["css"])(["& > &{text-align:left;}"]),
  center: Object(external_styled_components_["css"])(["& > &{text-align:center;}"])
}),
/* sc-sel */
StyledDragContainer, Object(themes_["pick"])({
  enterprise: tableHorizontalSpacing
}));
var HeadInnerStyles_Styled = external_styled_components_default.a.div.withConfig({
  displayName: "HeadInnerStyles__Styled",
  componentId: "sc-1sa0wng-3"
})(["", " ", ";position:relative;font-size:", ";", ";line-height:", ";justify-content:", ";padding:", ";", " ", " ", " &[data-helper]{background-color:", ";position:absolute;left:-10000px;top:-10000px;box-shadow:", ";box-sizing:border-box;background-repeat:repeat-x;", ";}@media print{background-image:none;}"], themes_["mixins"].reset('flex'), themes_["mixins"].clearfix(), Object(themes_["pick"])({
  enterprise: 'inherit',
  prisma: '12px'
}), Object(themes_["pick"])({
  prisma: Object(external_styled_components_["css"])(["font-weight:bold;"])
}), Object(themes_["pick"])({
  enterprise: themes_["variables"].lineHeight,
  prisma: '16px'
}), Object(themes_["pickVariant"])('$align', {
  center: 'center',
  left: 'flex-start',
  right: 'flex-end'
}), Object(themes_["pick"])({
  enterprise: '6px 12px',
  prisma: {
    comfortable: '16px 10px',
    compact: '8px'
  }
}), function (_ref2) {
  var $hasActionsHead = _ref2.$hasActionsHead;
  return $hasActionsHead && Object(external_styled_components_["css"])(["padding:0;"]);
}, function (_ref3) {
  var $dragging = _ref3.$dragging;
  return $dragging && Object(external_styled_components_["css"])(["opacity:0;"]);
}, function (_ref4) {
  var $draggable = _ref4.$draggable;
  return $draggable && Object(external_styled_components_["css"])(["padding-left:", ";-webkit-user-drag:element;user-select:none;"], Object(themes_["pick"])({
    enterprise: '16px'
  }));
}, Object(themes_["pick"])({
  enterprise: {
    light: themes_["variables"].accentColorL50,
    dark: themes_["variables"].accentColorD50
  },
  prisma: themes_["mixins"].overlayColors(themes_["variables"].interactiveColorBackground, themes_["variables"].interactiveColorOverlaySelected)
}), Object(themes_["pick"])({
  enterprise: themes_["variables"].overlayShadow,
  prisma: themes_["variables"].dragShadow
}), Object(themes_["pick"])({
  enterprise: Object(external_styled_components_["css"])(["border:1px solid ", ";"], themes_["variables"].borderColor)
}));
var StyledSortIcon = external_styled_components_default.a.span.withConfig({
  displayName: "HeadInnerStyles__StyledSortIcon",
  componentId: "sc-1sa0wng-4"
})(["flex:0 0 auto;", ";margin-top:-1px;", " color:", ";", ""], Object(themes_["pick"])({
  enterprise: Object(external_styled_components_["css"])(["right:0;"]),
  prisma: Object(external_styled_components_["css"])(["left:0;"])
}), Object(themes_["pick"])({
  prisma: Object(external_styled_components_["css"])(["margin-right:4px;"]),
  enterprise: Object(external_styled_components_["css"])(["margin-left:10px;"])
}), Object(themes_["pick"])({
  enterprise: {
    light: themes_["variables"].textGray,
    dark: themes_["variables"].gray80
  }
}), function (_ref5) {
  var $sorted = _ref5.$sorted;
  return $sorted && Object(external_styled_components_["css"])(["color:", ";"], Object(themes_["pick"])({
    enterprise: themes_["variables"].accentColor,
    prisma: themes_["variables"].contentColorDefault
  }));
});
var StyledResize = external_styled_components_default.a.button.withConfig({
  displayName: "HeadInnerStyles__StyledResize",
  componentId: "sc-1sa0wng-5"
})(["", ";position:absolute;right:-5px;width:9px;top:0;bottom:0;z-index:1;cursor:col-resize;th:last-child > ", " > &{right:0;width:5px;}&::-moz-focus-inner{border:0;padding:0;}&:focus{outline:none;&::before{content:'';position:absolute;background:", ";box-shadow:", ";left:4px;width:1px;top:0;bottom:0;}}"], themes_["mixins"].reset('block'),
/* sc-sel */
HeadInnerStyles_Styled, themes_["variables"].focusColor, themes_["variables"].focusShadow);

// CONCATENATED MODULE: ./src/Table/HeadCellStyles.ts



var HeadCellStyles_Styled = external_styled_components_default.a.th.withConfig({
  displayName: "HeadCellStyles__Styled",
  componentId: "sc-1hj81sa-0"
})(["", ";background-color:", ";box-sizing:content-box;text-align:left;vertical-align:", ";& + &{border-left:1px solid ", ";}", " ", " ", " ", ""], themes_["mixins"].reset('table-cell'), Object(themes_["pick"])({
  enterprise: {
    light: themes_["variables"].gray92,
    dark: themes_["variables"].black
  },
  prisma: themes_["variables"].interactiveColorBackground
}), function (_ref) {
  var $variant = _ref.$variant;
  return $variant ? 'middle' : 'top';
}, Object(themes_["pick"])({
  enterprise: themes_["variables"].backgroundColor,
  prisma: themes_["variables"].backgroundColorPage
}), function (_ref2) {
  var $isFixed = _ref2.$isFixed,
      $zIndex = _ref2.$zIndex;
  return $isFixed && Object(external_styled_components_["css"])(["position:sticky;top:0;z-index:", ";&:not(:first-child)::before{content:'';height:100%;position:absolute;top:0;bottom:0;box-shadow:-1px 0 0 0 ", ";width:2px;border:0;left:0;margin-right:-2px;color:transparent;}&:not(:last-child)::after{content:'';height:100%;position:absolute;top:0;bottom:0;box-shadow:1px 0 0 0 ", ";width:2px;border:0;right:0;margin-left:-2px;color:transparent;}"], $zIndex, Object(themes_["pick"])({
    enterprise: themes_["variables"].backgroundColor,
    prisma: themes_["variables"].backgroundColorPage
  }), Object(themes_["pick"])({
    enterprise: themes_["variables"].backgroundColor,
    prisma: themes_["variables"].backgroundColorPage
  }));
}, function (_ref3) {
  var $clickable = _ref3.$clickable;
  return $clickable && Object(external_styled_components_["css"])(["cursor:pointer;&:focus{box-shadow:", ";outline:none;& > ", "{color:", ";background-color:", ";}}&:hover{outline:none;& > ", "{color:", ";background-color:", ";}}&:active{& > ", "{background-color:", ";}}"], themes_["variables"].focusShadowInset,
  /* sc-sel */
  HeadInnerStyles_Styled, Object(themes_["pick"])({
    enterprise: {
      light: themes_["variables"].accentColorD10,
      dark: themes_["variables"].linkColorHover
    }
  }), Object(themes_["pick"])({
    prisma: themes_["variables"].interactiveColorOverlaySelected
  }),
  /* sc-sel */
  HeadInnerStyles_Styled, Object(themes_["pick"])({
    enterprise: {
      light: themes_["variables"].accentColorD10,
      dark: themes_["variables"].linkColorHover
    }
  }), Object(themes_["pick"])({
    prisma: themes_["variables"].interactiveColorOverlayHover
  }),
  /* sc-sel */
  HeadInnerStyles_Styled, Object(themes_["pick"])({
    prisma: themes_["variables"].interactiveColorOverlayActive
  }));
}, function (_ref4) {
  var $dragging = _ref4.$dragging;
  return $dragging && Object(external_styled_components_["css"])(["background-color:", ";&:focus{box-shadow:none;}"], Object(themes_["pick"])({
    enterprise: {
      light: themes_["variables"].gray80,
      dark: themes_["variables"].gray20
    },
    prisma: themes_["mixins"].overlayColors(themes_["variables"].backgroundColorPage, themes_["variables"].interactiveColorOverlayDrag)
  }));
}, Object(themes_["pickVariant"])('$variant', {
  actions: Object(external_styled_components_["css"])(["& > ", "{padding-right:8px;}"],
  /* sc-sel */
  HeadInnerStyles_Styled),
  info: Object(external_styled_components_["css"])(["& > ", "{", ";}"],
  /* sc-sel */
  HeadInnerStyles_Styled, Object(themes_["pick"])({
    enterprise: Object(external_styled_components_["css"])(["padding-top:7px;"]),
    prisma: {
      comfortable: Object(external_styled_components_["css"])(["padding:16px 12px;"]),
      compact: Object(external_styled_components_["css"])(["padding:6px 12px;"])
    }
  })),
  toggleAll: Object(external_styled_components_["css"])(["& > ", "{padding-top:", ";}"],
  /* sc-sel */
  HeadInnerStyles_Styled, Object(themes_["pick"])({
    prisma: {
      comfortable: '14px',
      compact: '7px'
    }
  }))
}));
var StyledGuideLine = external_styled_components_default.a.div.withConfig({
  displayName: "HeadCellStyles__StyledGuideLine",
  componentId: "sc-1hj81sa-1"
})(["", " width:1px;position:absolute;background-color:", ";height:100%;top:0;z-index:1;", ""], themes_["mixins"].reset('block'), Object(themes_["pick"])({
  enterprise: themes_["variables"].linkColor,
  prisma: themes_["variables"].interactiveColorPrimary
}), Object(themes_["pickVariant"])('$position', {
  before: Object(external_styled_components_["css"])(["float:left;", ":not(:first-child) > &{margin-left:-1px;}"],
  /* sc-sel */
  HeadCellStyles_Styled),
  after: Object(external_styled_components_["css"])(["right:0;"])
}));

// CONCATENATED MODULE: ./src/Table/RowDragCellStyles.ts


var RowDragCellStyles_Styled = external_styled_components_default.a.td.withConfig({
  displayName: "RowDragCellStyles__Styled",
  componentId: "sc-9kbaj2-0"
})(["", " box-sizing:content-box;touch-action:none;width:", ";& + &{border-left:", ";}&:focus{box-shadow:", ";outline:none;}&:hover{background-color:", ";outline:none;}&:active{background-color:", ";}", ""], themes_["mixins"].reset('table-cell'), Object(themes_["pick"])({
  enterprise: '32px',
  prisma: '36px'
}), Object(themes_["pick"])({
  enterprise: "1px solid ".concat(themes_["variables"].backgroundColor),
  prisma: "1px solid ".concat(themes_["variables"].interactiveColorBorder)
}), themes_["variables"].focusShadowInset, Object(themes_["pick"])({
  enterprise: {
    light: themes_["variables"].accentColorL50,
    dark: themes_["variables"].accentColorD50
  },
  prisma: themes_["variables"].interactiveColorOverlayHover
}), Object(themes_["pick"])({
  prisma: themes_["variables"].interactiveColorOverlayActive
}), function (_ref) {
  var $dragging = _ref.$dragging;
  return $dragging && Object(external_styled_components_["css"])(["&:active{background-color:", ";}"], Object(themes_["pick"])({
    prisma: themes_["mixins"].overlayColors(themes_["variables"].backgroundColorPage, themes_["variables"].interactiveColorOverlayDrag)
  }));
});
var RowDragCellStyles_StyledGuideLine = external_styled_components_default.a.div.withConfig({
  displayName: "RowDragCellStyles__StyledGuideLine",
  componentId: "sc-9kbaj2-1"
})(["", " width:100%;height:1px;position:absolute;left:0;z-index:1;", ""], themes_["mixins"].reset('block'), Object(themes_["pickVariant"])('$position', {
  before: Object(external_styled_components_["css"])(["&::before{content:' ';border-top:1px solid;border-color:", ";width:100%;height:1px;top:0;position:absolute;}"], Object(themes_["pick"])({
    enterprise: themes_["variables"].linkColor,
    prisma: themes_["variables"].interactiveColorPrimary
  })),
  after: Object(external_styled_components_["css"])(["&::after{bottom:0;background-color:", ";}"], Object(themes_["pick"])({
    enterprise: themes_["variables"].linkColor,
    prisma: themes_["variables"].interactiveColorPrimary
  }))
}));
var StyledDrag = external_styled_components_default.a.div.withConfig({
  displayName: "RowDragCellStyles__StyledDrag",
  componentId: "sc-9kbaj2-2"
})(["", " ", ";justify-content:center;cursor:move;", " ", " &[data-helper]{background-color:", ";position:absolute;left:-10000px;top:-10000px;box-shadow:", ";box-sizing:border-box;background-repeat:repeat-x;", ";}@media print{background-image:none;}"], themes_["mixins"].reset('flex'), themes_["mixins"].clearfix(), function (_ref2) {
  var $dragging = _ref2.$dragging;
  return $dragging && Object(external_styled_components_["css"])(["opacity:0;"]);
}, function (_ref3) {
  var $draggable = _ref3.$draggable;
  return $draggable && Object(external_styled_components_["css"])(["padding:", ";-webkit-user-drag:element;user-select:none;"], Object(themes_["pick"])({
    enterprise: '9px 0',
    prisma: {
      comfortable: '16px 17px 15px',
      compact: '9px 17px 6px'
    }
  }));
}, Object(themes_["pick"])({
  enterprise: {
    light: themes_["variables"].accentColorL50,
    dark: themes_["variables"].accentColorD50
  },
  prisma: themes_["mixins"].overlayColors(themes_["variables"].interactiveColorBackground, themes_["variables"].interactiveColorOverlaySelected)
}), Object(themes_["pick"])({
  enterprise: themes_["variables"].overlayShadow,
  prisma: themes_["variables"].dragShadow
}), Object(themes_["pick"])({
  enterprise: Object(external_styled_components_["css"])(["border:1px solid ", ";"], themes_["variables"].borderColor)
}));

// CONCATENATED MODULE: ./src/Table/DragHandleStyles.ts




var DragHandleStyles_StyledDrag = external_styled_components_default.a.div.withConfig({
  displayName: "DragHandleStyles__StyledDrag",
  componentId: "sc-9eqfn5-0"
})(["display:block;cursor:move;background:", ";", ""], themes_["variables"].draggableBackground, Object(themes_["pick"])({
  enterprise: Object(external_styled_components_["css"])(["width:7px;height:14px;"]),
  prisma: Object(external_styled_components_["css"])(["width:6px;height:20px;margin-top:-3px;opacity:0;", ":focus &,", ":hover &,", " &,[data-helper] &{opacity:1;}"],
  /* sc-sel */
  HeadCellStyles_Styled,
  /* sc-sel */
  HeadCellStyles_Styled,
  /* sc-sel */
  RowDragCellStyles_Styled)
}));

// CONCATENATED MODULE: ./src/Table/DragHandle.tsx




var DragHandle_propTypes = {
  screenReaderContent: external_prop_types_default.a.string
};
var DragHandle_defaultProps = {};

function DragHandle(_ref) {
  var screenReaderContent = _ref.screenReaderContent;
  return /*#__PURE__*/external_react_default.a.createElement(DragHandleStyles_StyledDrag, null, /*#__PURE__*/external_react_default.a.createElement(ScreenReaderContent_default.a, null, screenReaderContent));
}

DragHandle.propTypes = DragHandle_propTypes;
/* harmony default export */ var Table_DragHandle = (DragHandle);
// CONCATENATED MODULE: ./src/Table/HeadInner.tsx
function HeadInner_extends() { HeadInner_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeadInner_extends.apply(this, arguments); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function HeadInner_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = HeadInner_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function HeadInner_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }













var HeadInner_propTypes = {
  align: external_prop_types_default.a.oneOf(['left', 'center', 'right']),
  columnId: external_prop_types_default.a.any,
  hasActionsHead: external_prop_types_default.a.bool,
  id: external_prop_types_default.a.string,
  index: external_prop_types_default.a.number,
  isMenu: external_prop_types_default.a.bool,
  label: external_prop_types_default.a.node,
  onAutosizeColumn: external_prop_types_default.a.func,
  onDragEnd: external_prop_types_default.a.func,
  onDragStart: external_prop_types_default.a.func,
  onRequestResize: external_prop_types_default.a.func,
  resizable: external_prop_types_default.a.bool,
  sortDir: external_prop_types_default.a.string,
  truncate: external_prop_types_default.a.bool,
  width: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.oneOf(['auto'])])
};

function HeadInner(_ref) {
  var index = _ref.index,
      columnId = _ref.columnId,
      id = _ref.id,
      widthProp = _ref.width,
      onDragEnd = _ref.onDragEnd,
      onAutosizeColumn = _ref.onAutosizeColumn,
      _ref$align = _ref.align,
      align = _ref$align === void 0 ? 'left' : _ref$align,
      label = _ref.label,
      _ref$hasActionsHead = _ref.hasActionsHead,
      hasActionsHead = _ref$hasActionsHead === void 0 ? false : _ref$hasActionsHead,
      _ref$isMenu = _ref.isMenu,
      isMenu = _ref$isMenu === void 0 ? false : _ref$isMenu,
      onDragStart = _ref.onDragStart,
      onRequestResize = _ref.onRequestResize,
      _ref$resizable = _ref.resizable,
      resizable = _ref$resizable === void 0 ? true : _ref$resizable,
      _ref$sortDir = _ref.sortDir,
      sortDir = _ref$sortDir === void 0 ? undefined : _ref$sortDir,
      _ref$truncate = _ref.truncate,
      truncate = _ref$truncate === void 0 ? true : _ref$truncate,
      otherProps = HeadInner_objectWithoutProperties(_ref, ["index", "columnId", "id", "width", "onDragEnd", "onAutosizeColumn", "align", "label", "hasActionsHead", "isMenu", "onDragStart", "onRequestResize", "resizable", "sortDir", "truncate"]);

  if (false) {}

  var _useState = Object(external_react_["useState"])(),
      _useState2 = _slicedToArray(_useState, 2),
      cloneEl = _useState2[0],
      setCloneEl = _useState2[1];

  var _useState3 = Object(external_react_["useState"])(false),
      _useState4 = _slicedToArray(_useState3, 2),
      isResizing = _useState4[0],
      setResizing = _useState4[1];

  var _useState5 = Object(external_react_["useState"])(false),
      _useState6 = _slicedToArray(_useState5, 2),
      isDragging = _useState6[0],
      setIsDragging = _useState6[1];

  var _useState7 = Object(external_react_["useState"])(0),
      _useState8 = _slicedToArray(_useState7, 2),
      startClientX = _useState8[0],
      setStartClientX = _useState8[1];

  var _useState9 = Object(external_react_["useState"])(0),
      _useState10 = _slicedToArray(_useState9, 2),
      startWidth = _useState10[0],
      setStartWidth = _useState10[1];

  var ref = Object(external_react_["useRef"])(null); // Cleanup dragend, and unmount during drag

  Object(external_react_["useEffect"])(function () {
    return function () {
      return cloneEl === null || cloneEl === void 0 ? void 0 : cloneEl.remove();
    };
  }, [cloneEl]);
  var width;

  if (widthProp === 'auto') {
    var _el$parentElement;

    var el = ref.current;
    var rect = el === null || el === void 0 ? void 0 : (_el$parentElement = el.parentElement) === null || _el$parentElement === void 0 ? void 0 : _el$parentElement.getBoundingClientRect();
    width = rect === null || rect === void 0 ? void 0 : rect.width;
  } else {
    width = widthProp;
  }

  var handleResizeKeyDown = function handleResizeKeyDown(e) {
    var key = Object(keyboard_["keycode"])(e.nativeEvent);

    if (onRequestResize === undefined || index === undefined) {
      return;
    }

    if (widthProp === 'auto') {
      var _el$parentElement2;

      var _el = ref.current;

      var _rect = _el === null || _el === void 0 ? void 0 : (_el$parentElement2 = _el.parentElement) === null || _el$parentElement2 === void 0 ? void 0 : _el$parentElement2.getBoundingClientRect();

      width = _rect === null || _rect === void 0 ? void 0 : _rect.width;
    } else {
      width = widthProp;
    }

    if (width === undefined) {
      return;
    }

    if (key === 'left') {
      e.preventDefault(); // prevent text selection

      var newWidth = Math.max(width - 10, 20);
      onRequestResize(e, {
        index: index,
        columnId: columnId,
        id: id,
        width: newWidth
      });
    }

    if (key === 'right') {
      e.preventDefault(); // prevent text selection

      var _newWidth = width + 10;

      onRequestResize(e, {
        index: index,
        columnId: columnId,
        id: id,
        width: _newWidth
      });
    }
  };

  var handleStartResize = function handleStartResize(e) {
    if (widthProp === 'auto') {
      var _el2$parentElement;

      var _el2 = ref.current;

      var _rect2 = _el2 === null || _el2 === void 0 ? void 0 : (_el2$parentElement = _el2.parentElement) === null || _el2$parentElement === void 0 ? void 0 : _el2$parentElement.getBoundingClientRect();

      width = _rect2 === null || _rect2 === void 0 ? void 0 : _rect2.width;
    } else {
      width = widthProp;
    }

    if (width === undefined) {
      return;
    }

    e.preventDefault(); // prevent text selection

    setStartClientX(e.clientX);
    setStartWidth(width || 0);
    setResizing(true);
  };

  var handleResize = function handleResize(e) {
    var change = startClientX - e.clientX;
    var newWidth = Math.max(startWidth - change, 16);

    if (index !== undefined) {
      onRequestResize === null || onRequestResize === void 0 ? void 0 : onRequestResize(e, {
        index: index,
        columnId: columnId,
        id: id,
        width: newWidth
      });
    }
  };

  var handleEndResize = function handleEndResize() {
    setResizing(false);
  };

  var handleDragStart = function handleDragStart(e) {
    var _el$textContent;

    var el = ref.current;

    if (e.dataTransfer.setDragImage && (el === null || el === void 0 ? void 0 : el.parentElement)) {
      var _rect3 = el.parentElement.getBoundingClientRect();

      var clone = el.cloneNode(true);
      clone.style.width = "".concat(_rect3.width, "px");
      clone.style.height = "".concat(_rect3.height, "px");
      clone.setAttribute('data-helper', 'true');
      document.body.appendChild(clone);
      e.dataTransfer.setDragImage(clone, e.clientX - _rect3.left, e.clientY - _rect3.top);
      setIsDragging(true);
      setCloneEl(clone);
    }

    e.dataTransfer.effectAllowed = 'move';
    e.dataTransfer.setData('text', (_el$textContent = el === null || el === void 0 ? void 0 : el.textContent) !== null && _el$textContent !== void 0 ? _el$textContent : ''); // Required for Firefox

    onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(index, columnId);
  };

  var handleDragEnd = function handleDragEnd() {
    setCloneEl(undefined);
    setIsDragging(false);
    onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd();
  };

  var handleDoubleClick = function handleDoubleClick(e) {
    if (index !== undefined) {
      onAutosizeColumn === null || onAutosizeColumn === void 0 ? void 0 : onAutosizeColumn(e, {
        index: index,
        columnId: columnId
      });
    }
  };

  var draggable = !!onDragStart;
  return /*#__PURE__*/external_react_default.a.createElement(HeadInnerStyles_Styled, HeadInner_extends({
    draggable: draggable || undefined,
    onDragStart: draggable ? handleDragStart : undefined,
    onDragEnd: draggable ? handleDragEnd : undefined,
    ref: ref,
    $hasActionsHead: !!hasActionsHead,
    $align: align,
    $draggable: draggable,
    $dragging: !!isDragging
  }, Object(external_lodash_["omit"])(otherProps, [].concat(_toConsumableArray(Object.keys(HeadInner.propTypes)), ['id']))), isResizing && /*#__PURE__*/external_react_default.a.createElement(external_react_default.a.Fragment, null, /*#__PURE__*/external_react_default.a.createElement(EventListener_default.a, {
    target: window,
    eventType: "mouseup",
    listener: handleEndResize
  }), /*#__PURE__*/external_react_default.a.createElement(EventListener_default.a, {
    target: window,
    eventType: "mousemove",
    listener: handleResize
  })), onRequestResize && resizable && /*#__PURE__*/external_react_default.a.createElement(StyledResize, {
    onMouseDown: handleStartResize,
    onDoubleClick: handleDoubleClick,
    onKeyDown: handleResizeKeyDown,
    "data-test": "resize"
  }), draggable && /*#__PURE__*/external_react_default.a.createElement(StyledDragContainer, null, /*#__PURE__*/external_react_default.a.createElement(Table_DragHandle, {
    screenReaderContent: Object(i18n_["_"])('Press left or right arrow key to reorder the columns.')
  })), /*#__PURE__*/external_react_default.a.createElement(StyledLabel, {
    $align: align,
    $truncate: truncate,
    $fill: isMenu
  }, label, isMenu && /*#__PURE__*/external_react_default.a.createElement(StyledMenuIcon, null, /*#__PURE__*/external_react_default.a.createElement(icons_CaretDown["a" /* default */], {
    enterpriseSize: 0.5,
    prismaSize: "small" // this icon indicates "has a menu" in all themes
    ,
    screenReaderText: Object(i18n_["_"])('Click to open menu')
  }))), sortDir && /*#__PURE__*/external_react_default.a.createElement(StyledSortIcon, {
    $sorted: sortDir !== 'none'
  }, sortDir === 'none' && /*#__PURE__*/external_react_default.a.createElement(CaretDown, {
    prismaSize: "small",
    screenReaderText: Object(i18n_["_"])('Click to sort')
  }), sortDir === 'asc' && /*#__PURE__*/external_react_default.a.createElement(SortedUp, {
    prismaSize: "small",
    inline: true,
    screenReaderText: Object(i18n_["_"])('Press to sort descending')
  }), sortDir === 'desc' && /*#__PURE__*/external_react_default.a.createElement(SortedDown, {
    prismaSize: "small",
    inline: true,
    screenReaderText: Object(i18n_["_"])('Press to sort ascending')
  })));
}

HeadInner.propTypes = HeadInner_propTypes;
/* harmony default export */ var Table_HeadInner = (HeadInner);
// CONCATENATED MODULE: ./src/Table/TableContext.ts

var TableContext = /*#__PURE__*/Object(external_react_["createContext"])({});
TableContext.displayName = 'Table';
/* harmony default export */ var Table_TableContext = (TableContext);
// CONCATENATED MODULE: ./src/Table/HeadCell.tsx
function HeadCell_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { HeadCell_typeof = function _typeof(obj) { return typeof obj; }; } else { HeadCell_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return HeadCell_typeof(obj); }

function HeadCell_extends() { HeadCell_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeadCell_extends.apply(this, arguments); }

function HeadCell_toConsumableArray(arr) { return HeadCell_arrayWithoutHoles(arr) || HeadCell_iterableToArray(arr) || HeadCell_unsupportedIterableToArray(arr) || HeadCell_nonIterableSpread(); }

function HeadCell_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function HeadCell_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return HeadCell_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return HeadCell_arrayLikeToArray(o, minLen); }

function HeadCell_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function HeadCell_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return HeadCell_arrayLikeToArray(arr); }

function HeadCell_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function HeadCell_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function HeadCell_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function HeadCell_createClass(Constructor, protoProps, staticProps) { if (protoProps) HeadCell_defineProperties(Constructor.prototype, protoProps); if (staticProps) HeadCell_defineProperties(Constructor, staticProps); return Constructor; }

function HeadCell_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) HeadCell_setPrototypeOf(subClass, superClass); }

function HeadCell_setPrototypeOf(o, p) { HeadCell_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return HeadCell_setPrototypeOf(o, p); }

function HeadCell_createSuper(Derived) { var hasNativeReflectConstruct = HeadCell_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = HeadCell_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = HeadCell_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return HeadCell_possibleConstructorReturn(this, result); }; }

function HeadCell_possibleConstructorReturn(self, call) { if (call && (HeadCell_typeof(call) === "object" || typeof call === "function")) { return call; } return HeadCell_assertThisInitialized(self); }

function HeadCell_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function HeadCell_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function HeadCell_getPrototypeOf(o) { HeadCell_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return HeadCell_getPrototypeOf(o); }

function HeadCell_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








var HeadCell_propTypes = {
  align: external_prop_types_default.a.oneOf(['left', 'center', 'right']),
  children: external_prop_types_default.a.node,
  columnId: external_prop_types_default.a.any,
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),

  /** @private Indicates the presence of actions. */
  hasActionsHead: external_prop_types_default.a.bool,

  /** @private The index of the cell, skipping the info column. */
  index: external_prop_types_default.a.number,

  /** @private. */
  onAutosizeColumn: external_prop_types_default.a.func,
  onSort: external_prop_types_default.a.func,

  /** @private. */
  onDragStart: external_prop_types_default.a.func,

  /**
   * @private. Passed through and works as expected.
   */
  onKeyDown: external_prop_types_default.a.func,

  /** @private. */
  onClick: external_prop_types_default.a.func,

  /** @private. */
  onRequestMoveColumn: external_prop_types_default.a.func,

  /** @private. */
  onRequestResize: external_prop_types_default.a.func,
  resizable: external_prop_types_default.a.bool,

  /** @private. */
  showGuideline: external_prop_types_default.a.oneOf(['none', 'before', 'after']),
  sortDir: external_prop_types_default.a.oneOf(['asc', 'desc', 'none']),
  sortKey: external_prop_types_default.a.string,
  truncate: external_prop_types_default.a.bool,

  /**
   * Used internally to suppress focus and id when this `HeadCell` is superseded by one in an
   * overlaid `HeadTable` for user interactions.
   * @private
   */
  visible: external_prop_types_default.a.bool,
  width: external_prop_types_default.a.oneOfType([external_prop_types_default.a.number, external_prop_types_default.a.oneOf(['auto'])]),

  /** @private. */
  variant: external_prop_types_default.a.oneOf(['toggleAll', 'info', 'actions']),

  /** @private. */
  zIndex: external_prop_types_default.a.number
};
var HeadCell_defaultProps = {
  align: 'left',
  resizable: true,
  showGuideline: 'none',
  sortDir: 'none',
  truncate: true,
  visible: true,
  zIndex: 1
};

var HeadCell_HeadCell = /*#__PURE__*/function (_Component) {
  HeadCell_inherits(HeadCell, _Component);

  var _super = HeadCell_createSuper(HeadCell);

  // @docs-props-type HeadCellPropsBase
  function HeadCell(props) {
    var _this;

    HeadCell_classCallCheck(this, HeadCell);

    _this = _super.call(this, props);

    HeadCell_defineProperty(HeadCell_assertThisInitialized(_this), "handleClick", function (e) {
      var _this$props$onClick, _this$props2;

      // ignore clicks on the resize handle
      if (e.target.getAttribute('data-test') !== 'resize' && _this.props.onSort && _this.props.index !== undefined) {
        var _this$props = _this.props,
            sortKey = _this$props.sortKey,
            sortDir = _this$props.sortDir,
            id = _this$props.id,
            _index = _this$props.index,
            _columnId = _this$props.columnId;

        _this.props.onSort(e, {
          sortKey: sortKey,
          sortDir: sortDir,
          id: id,
          columnId: _columnId,
          index: _index
        });
      }

      (_this$props$onClick = (_this$props2 = _this.props).onClick) === null || _this$props$onClick === void 0 ? void 0 : _this$props$onClick.call(_this$props2);
    });

    HeadCell_defineProperty(HeadCell_assertThisInitialized(_this), "handleKeyDown", function (e) {
      var _this$props3 = _this.props,
          columnId = _this$props3.columnId,
          index = _this$props3.index,
          onKeyDown = _this$props3.onKeyDown,
          onRequestMoveColumn = _this$props3.onRequestMoveColumn;

      if (e.target.getAttribute('data-test') !== 'resize') {
        if (Object(keyboard_["keycode"])(e.nativeEvent) === 'enter') {
          _this.handleClick(e);
        } else if (Object(keyboard_["keycode"])(e.nativeEvent) === 'left' && index !== undefined && index > 0) {
          onRequestMoveColumn === null || onRequestMoveColumn === void 0 ? void 0 : onRequestMoveColumn({
            fromIndex: index,
            toIndex: index - 1,
            columnId: columnId
          });
        } else if (Object(keyboard_["keycode"])(e.nativeEvent) === 'right' && index !== undefined) {
          onRequestMoveColumn === null || onRequestMoveColumn === void 0 ? void 0 : onRequestMoveColumn({
            fromIndex: index,
            toIndex: index + 1,
            columnId: columnId
          });
        }
      }

      if (index !== undefined) {
        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e, {
          index: index,
          columnId: columnId
        });
      }
    });

    HeadCell_defineProperty(HeadCell_assertThisInitialized(_this), "handleDragStart", function (index, columnId) {
      var _this$props$onDragSta, _this$props4;

      _this.setState({
        isDragging: true
      });

      (_this$props$onDragSta = (_this$props4 = _this.props).onDragStart) === null || _this$props$onDragSta === void 0 ? void 0 : _this$props$onDragSta.call(_this$props4, index, columnId);
    });

    HeadCell_defineProperty(HeadCell_assertThisInitialized(_this), "handleDragEnd", function () {
      _this.setState({
        isDragging: false
      });
    });

    HeadCell_defineProperty(HeadCell_assertThisInitialized(_this), "sortDirAriaMapping", {
      asc: 'ascending',
      desc: 'descending',
      none: 'none'
    });

    _this.state = {
      isDragging: false
    };
    return _this;
  }

  HeadCell_createClass(HeadCell, [{
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          align = _this$props5.align,
          children = _this$props5.children,
          columnId = _this$props5.columnId,
          elementRef = _this$props5.elementRef,
          hasActionsHead = _this$props5.hasActionsHead,
          id = _this$props5.id,
          index = _this$props5.index,
          onAutosizeColumn = _this$props5.onAutosizeColumn,
          onClick = _this$props5.onClick,
          onDragStart = _this$props5.onDragStart,
          onRequestResize = _this$props5.onRequestResize,
          onSort = _this$props5.onSort,
          resizable = _this$props5.resizable,
          showGuideline = _this$props5.showGuideline,
          sortDir = _this$props5.sortDir,
          style = _this$props5.style,
          variant = _this$props5.variant,
          truncateProp = _this$props5.truncate,
          visible = _this$props5.visible,
          width = _this$props5.width,
          zIndex = _this$props5.zIndex;
      var draggable = !!onDragStart;
      var sortable = !!onSort && !!sortDir;
      var hasOnClick = onClick !== undefined;
      var mergedStyle = Object(external_lodash_["merge"])(style, {
        width: width
      });
      var truncate = hasActionsHead ? false : truncateProp;
      var headType = this.context.headType;
      /* eslint-disable jsx-a11y/no-static-element-interactions */

      return /*#__PURE__*/external_react_default.a.createElement(HeadCellStyles_Styled, HeadCell_extends({
        style: mergedStyle,
        ref: elementRef,
        "aria-sort": onSort && (this.sortDirAriaMapping[sortDir] || 'none'),
        "data-test": "head-cell",
        "data-test-label": Object(external_lodash_["isString"])(children) ? children : undefined,
        "data-test-sort-dir": onSort && sortDir,
        id: visible ? id : undefined,
        onClick: onSort || hasOnClick ? this.handleClick : undefined,
        tabIndex: visible && (draggable || onSort || hasOnClick) ? 0 : undefined,
        $dragging: this.state.isDragging || undefined,
        $clickable: draggable || sortable || hasOnClick,
        $variant: variant,
        $zIndex: zIndex,
        $isFixed: headType === 'fixed'
      }, Object(external_lodash_["omit"])(this.props, [].concat(HeadCell_toConsumableArray(Object.keys(HeadCell.propTypes)), ['id', 'style'])), {
        onKeyDown: draggable || onSort || hasOnClick ? this.handleKeyDown : undefined
      }), /*#__PURE__*/external_react_default.a.createElement(Table_HeadInner, {
        label: children,
        align: align,
        columnId: columnId,
        hasActionsHead: hasActionsHead,
        id: id,
        index: index,
        resizable: visible && resizable,
        onDragStart: onDragStart ? this.handleDragStart : undefined,
        onDragEnd: onDragStart ? this.handleDragEnd : undefined,
        onAutosizeColumn: onAutosizeColumn,
        onRequestResize: onRequestResize,
        sortDir: onSort && sortDir,
        truncate: truncate,
        width: width
      }), showGuideline !== 'none' && /*#__PURE__*/external_react_default.a.createElement(StyledGuideLine, {
        $position: showGuideline
      }));
      /* eslint-enable jsx-a11y/no-static-element-interactions */
    }
  }]);

  return HeadCell;
}(external_react_["Component"]);

HeadCell_defineProperty(HeadCell_HeadCell, "splunkUiType", 'Table.HeadCell');

HeadCell_defineProperty(HeadCell_HeadCell, "propTypes", HeadCell_propTypes);

HeadCell_defineProperty(HeadCell_HeadCell, "defaultProps", HeadCell_defaultProps);

HeadCell_defineProperty(HeadCell_HeadCell, "contextType", Table_TableContext);

/* harmony default export */ var Table_HeadCell = (HeadCell_HeadCell);
// EXTERNAL MODULE: external "@splunk/react-icons/Info"
var Info_ = __webpack_require__(109);
var Info_default = /*#__PURE__*/__webpack_require__.n(Info_);

// EXTERNAL MODULE: ./src/icons/ChevronRight.tsx
var ChevronRight = __webpack_require__(27);

// CONCATENATED MODULE: ./src/Table/HeadExpandRowsIcon.tsx





/* This file works around the use of withSplunkTheme in Head. */

function HeadExpandRowsIcon() {
  var _useSplunkTheme = Object(themes_["useSplunkTheme"])(),
      family = _useSplunkTheme.family;

  var screenReaderText = Object(i18n_["_"])('More Information');

  return family === 'prisma' ? /*#__PURE__*/external_react_default.a.createElement(ChevronRight["a" /* default */], {
    screenReaderText: screenReaderText,
    prismaSize: "small"
  }) : /*#__PURE__*/external_react_default.a.createElement(Info_default.a, {
    screenReaderText: screenReaderText
  });
}
// EXTERNAL MODULE: external "@splunk/react-ui/Button"
var Button_ = __webpack_require__(16);
var Button_default = /*#__PURE__*/__webpack_require__.n(Button_);

// EXTERNAL MODULE: external "@splunk/react-ui/Dropdown"
var Dropdown_ = __webpack_require__(18);
var Dropdown_default = /*#__PURE__*/__webpack_require__.n(Dropdown_);

// EXTERNAL MODULE: external "@splunk/react-ui/Tooltip"
var Tooltip_ = __webpack_require__(50);
var Tooltip_default = /*#__PURE__*/__webpack_require__.n(Tooltip_);

// EXTERNAL MODULE: ./src/icons/ChevronDown.tsx
var ChevronDown = __webpack_require__(65);

// EXTERNAL MODULE: ./src/icons/MoreVertical.tsx
var MoreVertical = __webpack_require__(63);

// CONCATENATED MODULE: ./src/Table/RowDragCell.tsx
function RowDragCell_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { RowDragCell_typeof = function _typeof(obj) { return typeof obj; }; } else { RowDragCell_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return RowDragCell_typeof(obj); }

function RowDragCell_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function RowDragCell_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function RowDragCell_createClass(Constructor, protoProps, staticProps) { if (protoProps) RowDragCell_defineProperties(Constructor.prototype, protoProps); if (staticProps) RowDragCell_defineProperties(Constructor, staticProps); return Constructor; }

function RowDragCell_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) RowDragCell_setPrototypeOf(subClass, superClass); }

function RowDragCell_setPrototypeOf(o, p) { RowDragCell_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return RowDragCell_setPrototypeOf(o, p); }

function RowDragCell_createSuper(Derived) { var hasNativeReflectConstruct = RowDragCell_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = RowDragCell_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = RowDragCell_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return RowDragCell_possibleConstructorReturn(this, result); }; }

function RowDragCell_possibleConstructorReturn(self, call) { if (call && (RowDragCell_typeof(call) === "object" || typeof call === "function")) { return call; } return RowDragCell_assertThisInitialized(self); }

function RowDragCell_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function RowDragCell_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function RowDragCell_getPrototypeOf(o) { RowDragCell_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return RowDragCell_getPrototypeOf(o); }

function RowDragCell_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







var RowDragCell_propTypes = {
  activeElementId: external_prop_types_default.a.string,
  dataId: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number]),
  index: external_prop_types_default.a.number,
  onDragEnd: external_prop_types_default.a.func,
  onDragStart: external_prop_types_default.a.func,
  onKeyDown: external_prop_types_default.a.func,
  onRequestMoveRow: external_prop_types_default.a.func,
  rowSpan: external_prop_types_default.a.number,
  showRowGuideline: external_prop_types_default.a.oneOf(['none', 'before', 'after'])
};
var RowDragCell_defaultProps = {
  showRowGuideline: 'none'
};

var RowDragCell_RowDragCell = /*#__PURE__*/function (_Component) {
  RowDragCell_inherits(RowDragCell, _Component);

  var _super = RowDragCell_createSuper(RowDragCell);

  function RowDragCell(props) {
    var _this;

    RowDragCell_classCallCheck(this, RowDragCell);

    _this = _super.call(this, props);

    RowDragCell_defineProperty(RowDragCell_assertThisInitialized(_this), "cloneEl", void 0);

    RowDragCell_defineProperty(RowDragCell_assertThisInitialized(_this), "el", null);

    RowDragCell_defineProperty(RowDragCell_assertThisInitialized(_this), "handleMount", function (el) {
      _this.el = el;
    });

    RowDragCell_defineProperty(RowDragCell_assertThisInitialized(_this), "handleDragStart", function (e) {
      var _this$el, _this$el$textContent, _this$el2, _this$props$onDragSta, _this$props;

      e.stopPropagation();

      if (e.dataTransfer.setDragImage && ((_this$el = _this.el) === null || _this$el === void 0 ? void 0 : _this$el.parentElement)) {
        // not supported in IE11
        var rect = _this.el.parentElement.getBoundingClientRect();

        _this.cloneEl = _this.el.cloneNode(true); // TS: this seems safe to assume?

        _this.cloneEl.style.width = "".concat(rect.width, "px");
        _this.cloneEl.style.height = "".concat(rect.height, "px");

        _this.cloneEl.setAttribute('data-helper', 'true');

        document.body.appendChild(_this.cloneEl);
        e.dataTransfer.setDragImage(_this.cloneEl, e.clientX - rect.left, e.clientY - rect.top);

        _this.setState({
          isDragging: true
        });
      }

      e.dataTransfer.effectAllowed = 'move';
      e.dataTransfer.setData('text', (_this$el$textContent = (_this$el2 = _this.el) === null || _this$el2 === void 0 ? void 0 : _this$el2.textContent) !== null && _this$el$textContent !== void 0 ? _this$el$textContent : ''); // Required for Firefox

      (_this$props$onDragSta = (_this$props = _this.props).onDragStart) === null || _this$props$onDragSta === void 0 ? void 0 : _this$props$onDragSta.call(_this$props, _this.props.index, _this.props.dataId);
    });

    RowDragCell_defineProperty(RowDragCell_assertThisInitialized(_this), "handleDragEnd", function () {
      var _this$props$onDragEnd, _this$props2;

      _this.cleanupDrag();

      _this.setState({
        isDragging: false
      });

      (_this$props$onDragEnd = (_this$props2 = _this.props).onDragEnd) === null || _this$props$onDragEnd === void 0 ? void 0 : _this$props$onDragEnd.call(_this$props2);
    });

    RowDragCell_defineProperty(RowDragCell_assertThisInitialized(_this), "handleKeyDown", function (e) {
      var _this$props3 = _this.props,
          onRequestMoveRow = _this$props3.onRequestMoveRow,
          index = _this$props3.index,
          dataId = _this$props3.dataId,
          onKeyDown = _this$props3.onKeyDown;
      var code = Object(keyboard_["keycode"])(e.nativeEvent);

      if (code === 'up' || code === 'down') {
        e.preventDefault();
      }

      if (code === 'up' && index !== undefined && index > 0) {
        onRequestMoveRow === null || onRequestMoveRow === void 0 ? void 0 : onRequestMoveRow({
          fromIndex: index,
          toIndex: index - 1,
          dataId: dataId
        });
      } else if (code === 'down' && index !== undefined) {
        onRequestMoveRow === null || onRequestMoveRow === void 0 ? void 0 : onRequestMoveRow({
          fromIndex: index,
          toIndex: index + 1,
          dataId: dataId
        });
      }

      if (index !== undefined) {
        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e, {
          index: index,
          dataId: dataId
        });
      }
    });

    _this.state = {
      isDragging: false
    };
    return _this;
  }

  RowDragCell_createClass(RowDragCell, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // get handle of the element and add focus
      var _this$props4 = this.props,
          dataId = _this$props4.dataId,
          activeElementId = _this$props4.activeElementId;

      if (dataId === activeElementId) {
        var _this$el3, _this$el3$parentEleme;

        (_this$el3 = this.el) === null || _this$el3 === void 0 ? void 0 : (_this$el3$parentEleme = _this$el3.parentElement) === null || _this$el3$parentEleme === void 0 ? void 0 : _this$el3$parentEleme.focus();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cleanupDrag();
    }
  }, {
    key: "cleanupDrag",
    value: function cleanupDrag() {
      if (this.cloneEl) {
        if (this.cloneEl.remove) {
          this.cloneEl.remove();
        } else {
          var _this$cloneEl$parentN;

          (_this$cloneEl$parentN = this.cloneEl.parentNode) === null || _this$cloneEl$parentN === void 0 ? void 0 : _this$cloneEl$parentN.removeChild(this.cloneEl); // IE
        }

        this.cloneEl = undefined;
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          showRowGuideline = _this$props5.showRowGuideline,
          rowSpan = _this$props5.rowSpan;
      return /*#__PURE__*/external_react_default.a.createElement(RowDragCellStyles_Styled, {
        $align: "center",
        "data-test": "drag",
        $dragging: this.state.isDragging,
        tabIndex: 0,
        rowSpan: rowSpan,
        onKeyDown: this.handleKeyDown
      }, showRowGuideline !== 'none' && /*#__PURE__*/external_react_default.a.createElement(RowDragCellStyles_StyledGuideLine, {
        $position: showRowGuideline
      }), /*#__PURE__*/external_react_default.a.createElement(StyledDrag, {
        draggable: true,
        $draggable: true,
        $dragging: this.state.isDragging || undefined,
        onDragStart: this.handleDragStart,
        onDragEnd: this.handleDragEnd,
        ref: this.handleMount
      }, /*#__PURE__*/external_react_default.a.createElement(Table_DragHandle, {
        screenReaderContent: Object(i18n_["_"])('Press up or down arrow key to reorder the columns.')
      })));
    }
  }]);

  return RowDragCell;
}(external_react_["Component"]);

RowDragCell_defineProperty(RowDragCell_RowDragCell, "propTypes", RowDragCell_propTypes);

RowDragCell_defineProperty(RowDragCell_RowDragCell, "defaultProps", RowDragCell_defaultProps);

/* harmony default export */ var Table_RowDragCell = (RowDragCell_RowDragCell);
// CONCATENATED MODULE: ./src/Table/RowStyles.ts



var StyledStripeNone = external_styled_components_default.a.tr.withConfig({
  displayName: "RowStyles__StyledStripeNone",
  componentId: "f0igqq-0"
})(["", " background-color:", ";", ";@media print{background-color:none;}", " ", ""], themes_["mixins"].reset('table-row'), Object(themes_["pick"])({
  prisma: themes_["variables"].transparent
}), function (_ref) {
  var $clickable = _ref.$clickable;
  return $clickable && Object(external_styled_components_["css"])(["cursor:pointer;&:hover{background-color:", ";}&:focus{box-shadow:", ";}"], Object(themes_["pick"])({
    enterprise: {
      light: themes_["variables"].accentColorL50,
      dark: themes_["variables"].accentColorD50
    },
    prisma: themes_["variables"].interactiveColorOverlayHover
  }), themes_["variables"].focusShadowInset);
}, function (_ref2) {
  var disabled = _ref2.disabled,
      $expandable = _ref2.$expandable;
  return !disabled && !$expandable && Object(external_styled_components_["css"])(["&:not([data-expansion-row='true']){&:hover{background-color:", ";}}"], Object(themes_["pick"])({
    prisma: themes_["variables"].interactiveColorOverlayHover
  }));
}, function (_ref3) {
  var disabled = _ref3.disabled;
  return disabled && Object(external_styled_components_["css"])(["color:", ";"], Object(themes_["pick"])({
    prisma: themes_["variables"].contentColorDisabled
  }));
});
var StyledStripeOdd = external_styled_components_default()(StyledStripeNone).withConfig({
  displayName: "RowStyles__StyledStripeOdd",
  componentId: "f0igqq-1"
})(["background-color:", ";"], Object(themes_["pick"])({
  enterprise: {
    dark: themes_["variables"].gray22
  },
  prisma: themes_["variables"].transparent
}));
var StyledStripeEven = external_styled_components_default()(StyledStripeNone).withConfig({
  displayName: "RowStyles__StyledStripeEven",
  componentId: "f0igqq-2"
})(["background-color:", ";"], Object(themes_["pick"])({
  enterprise: {
    light: themes_["variables"].gray96,
    dark: themes_["variables"].gray20
  },
  prisma: themes_["variables"].transparent
}));
var StyledCellSelectionDisabled = external_styled_components_default()(Table_Cell).withConfig({
  displayName: "RowStyles__StyledCellSelectionDisabled",
  componentId: "f0igqq-3"
})(["&&{cursor:not-allowed;}"]);
var StyledCellExpansionDisabled = external_styled_components_default()(Table_Cell).withConfig({
  displayName: "RowStyles__StyledCellExpansionDisabled",
  componentId: "f0igqq-4"
})(["width:", ";"], Object(themes_["pick"])({
  enterprise: '35px',
  prisma: '40px'
}));

// EXTERNAL MODULE: external "@splunk/react-ui/Switch"
var Switch_ = __webpack_require__(70);
var Switch_default = /*#__PURE__*/__webpack_require__.n(Switch_);

// CONCATENATED MODULE: ./src/Table/ToggleStyles.ts



var StyledSwitch = external_styled_components_default()(Switch_default.a).withConfig({
  displayName: "ToggleStyles__StyledSwitch",
  componentId: "sc-1x3ikch-0"
})(["margin:", ";justify-content:center;"], Object(themes_["pickVariant"])('$allRows', {
  "true": {
    enterprise: '-6px 0',
    prisma: '-10px 0'
  },
  "false": '-6px 0'
}));

// CONCATENATED MODULE: ./src/Table/Toggle.tsx
function Toggle_extends() { Toggle_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Toggle_extends.apply(this, arguments); }

function Toggle_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Toggle_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Toggle_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }





var Toggle_propTypes = {
  allRows: external_prop_types_default.a.bool,
  disabled: external_prop_types_default.a.bool,
  onClick: external_prop_types_default.a.func,
  selected: external_prop_types_default.a.oneOf([true, false, 'some'])
};

function Toggle(_ref) {
  var _ref$allRows = _ref.allRows,
      allRows = _ref$allRows === void 0 ? false : _ref$allRows,
      disabled = _ref.disabled,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? false : _ref$selected,
      otherProps = Toggle_objectWithoutProperties(_ref, ["allRows", "disabled", "selected"]);

  var ariaLabel = allRows ? Object(i18n_["_"])('No rows selected') : Object(i18n_["_"])('Row unselected');

  if (selected === 'some') {
    ariaLabel = Object(i18n_["_"])('Some rows selected');
  } else if (selected) {
    ariaLabel = allRows ? Object(i18n_["_"])('All rows selected') : Object(i18n_["_"])('Row selected');
  }

  return /*#__PURE__*/external_react_default.a.createElement(StyledSwitch, Toggle_extends({
    $allRows: allRows
  }, otherProps, {
    interactive: false,
    disabled: disabled,
    value: "",
    selected: selected,
    "aria-label": ariaLabel,
    selectedLabel: allRows ? Object(i18n_["_"])('All rows selected') : Object(i18n_["_"])('Row selected'),
    unselectedLabel: allRows ? Object(i18n_["_"])('No rows selected') : Object(i18n_["_"])('Row unselected'),
    someSelectedLabel: Object(i18n_["_"])('Some rows selected')
  }));
}

Toggle.propTypes = Toggle_propTypes;
/* harmony default export */ var Table_Toggle = (Toggle);
// CONCATENATED MODULE: ./src/Table/Row.tsx
function Row_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Row_typeof = function _typeof(obj) { return typeof obj; }; } else { Row_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Row_typeof(obj); }

function Row_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Row_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function Row_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function Row_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Row_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Row_createClass(Constructor, protoProps, staticProps) { if (protoProps) Row_defineProperties(Constructor.prototype, protoProps); if (staticProps) Row_defineProperties(Constructor, staticProps); return Constructor; }

function Row_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Row_setPrototypeOf(subClass, superClass); }

function Row_setPrototypeOf(o, p) { Row_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Row_setPrototypeOf(o, p); }

function Row_createSuper(Derived) { var hasNativeReflectConstruct = Row_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Row_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Row_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Row_possibleConstructorReturn(this, result); }; }

function Row_possibleConstructorReturn(self, call) { if (call && (Row_typeof(call) === "object" || typeof call === "function")) { return call; } return Row_assertThisInitialized(self); }

function Row_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function Row_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function Row_getPrototypeOf(o) { Row_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Row_getPrototypeOf(o); }

function Row_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function Row_extends() { Row_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Row_extends.apply(this, arguments); }

















var StyledStripeComponents = {
  odd: StyledStripeOdd,
  even: StyledStripeEven,
  none: StyledStripeNone
};
/** @public */

var Row_propTypes = {
  /** @private. Generally passed by Table rather than added directly. */
  activeElementId: external_prop_types_default.a.string,
  actionPrimary: external_prop_types_default.a.element,
  actionsSecondary: external_prop_types_default.a.element,
  children: external_prop_types_default.a.node,
  data: external_prop_types_default.a.any,

  /** @private. Generally passed by Table rather than added directly. */
  dataId: external_prop_types_default.a.oneOfType([external_prop_types_default.a.string, external_prop_types_default.a.number]),
  disabled: external_prop_types_default.a.bool,

  /** @private. Generally passed by Table rather than added directly. */
  draggable: external_prop_types_default.a.bool,
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),

  /** @private. */
  expandable: external_prop_types_default.a.bool,
  expanded: external_prop_types_default.a.bool,
  expansionRow: external_prop_types_default.a.oneOfType([external_prop_types_default.a.element, external_prop_types_default.a.arrayOf(external_prop_types_default.a.element)]),

  /** @private. Indicates whether the table has an actions column. */
  actions: external_prop_types_default.a.bool,

  /** @private. Generally passed by `Table` rather than added directly. */
  index: external_prop_types_default.a.number,

  /** @private. Generally passed by `Table` rather than added directly. */
  movableColumns: external_prop_types_default.a.bool,
  onClick: external_prop_types_default.a.func,

  /** @private. Generally passed by `Table` rather than added directly. */
  onDragStart: external_prop_types_default.a.func,
  onExpansion: external_prop_types_default.a.func,

  /** @private. This is passed through and works as expected. */
  onKeyDown: external_prop_types_default.a.func,

  /** @private. Generally passed by `Table` rather than added directly. */
  onRequestMoveRow: external_prop_types_default.a.func,
  onRequestToggle: external_prop_types_default.a.func,
  selected: external_prop_types_default.a.bool,

  /** @private. Generally passed by `Table` rather than added directly. */
  showRowGuideline: external_prop_types_default.a.oneOf(['none', 'before', 'after']),

  /** @private. */
  stripe: external_prop_types_default.a.oneOf(['odd', 'even', 'none'])
};
var Row_defaultProps = {
  stripe: 'none'
};
var ActionsSecondaryToggle = /*#__PURE__*/external_react_default.a.forwardRef(function (props, ref) {
  return /*#__PURE__*/external_react_default.a.createElement(Tooltip_default.a, Row_extends({
    content: Object(i18n_["_"])('Actions'),
    contentRelationship: "label"
  }, props), /*#__PURE__*/external_react_default.a.createElement(Button_default.a, {
    appearance: "secondary",
    "data-test": "actions-secondary-toggle",
    icon: /*#__PURE__*/external_react_default.a.createElement(MoreVertical["a" /* default */], null),
    elementRef: ref
  }));
});

var Row_Row = /*#__PURE__*/function (_Component) {
  Row_inherits(Row, _Component);

  var _super = Row_createSuper(Row);

  function Row() {
    var _this;

    Row_classCallCheck(this, Row);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    Row_defineProperty(Row_assertThisInitialized(_this), "elementRef", null);

    Row_defineProperty(Row_assertThisInitialized(_this), "handleClick", function (e) {
      var _this$props = _this.props,
          data = _this$props.data,
          onClick = _this$props.onClick;
      var el = e.target;

      while (el) {
        if (_this.elementRef === el) {
          break;
        } // Ignore clicks on row-actions


        if (el.tagName === 'BUTTON' || el.tagName === 'A') {
          return;
        }

        el = el.parentNode;
      }

      if (!e.defaultPrevented) {
        onClick === null || onClick === void 0 ? void 0 : onClick(e, data);
      }
    });

    Row_defineProperty(Row_assertThisInitialized(_this), "handleKeyDown", function (e) {
      var _this$props2 = _this.props,
          data = _this$props2.data,
          onClick = _this$props2.onClick,
          onKeyDown = _this$props2.onKeyDown;

      if (Object(keyboard_["keycode"])(e.nativeEvent) === 'enter' && onClick) {
        onClick(e, data);
      }

      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);
    });

    Row_defineProperty(Row_assertThisInitialized(_this), "handleToggle", function (e) {
      var _this$props3 = _this.props,
          data = _this$props3.data,
          disabled = _this$props3.disabled,
          onRequestToggle = _this$props3.onRequestToggle;

      if (!disabled) {
        e.preventDefault();
        onRequestToggle === null || onRequestToggle === void 0 ? void 0 : onRequestToggle(e, data);
      }
    });

    Row_defineProperty(Row_assertThisInitialized(_this), "handleExpansion", function (e) {
      var _this$props4 = _this.props,
          data = _this$props4.data,
          onExpansion = _this$props4.onExpansion;
      e.preventDefault();
      onExpansion === null || onExpansion === void 0 ? void 0 : onExpansion(e, data);
    });

    Row_defineProperty(Row_assertThisInitialized(_this), "renderActionPrimary", function () {
      var actionPrimary = _this.props.actionPrimary;

      if (actionPrimary && actionPrimary.props.onClick) {
        return /*#__PURE__*/Object(external_react_["cloneElement"])(actionPrimary, {
          onClick: function onClick(e) {
            var _actionPrimary$props$, _actionPrimary$props;

            e.preventDefault();
            return (_actionPrimary$props$ = (_actionPrimary$props = actionPrimary.props).onClick) === null || _actionPrimary$props$ === void 0 ? void 0 : _actionPrimary$props$.call(_actionPrimary$props, e, _this.props.data);
          }
        });
      }

      return actionPrimary;
    });

    Row_defineProperty(Row_assertThisInitialized(_this), "renderActionsSecondary", function () {
      var actionsSecondary = _this.props.actionsSecondary;

      if (actionsSecondary && actionsSecondary.props.children) {
        var actions = external_react_["Children"].toArray(actionsSecondary.props.children).filter(external_react_["isValidElement"]);
        var clonedActions = actions.map(function (action) {
          if (action.props.onClick) {
            return /*#__PURE__*/Object(external_react_["cloneElement"])(action, {
              onClick: function onClick(e) {
                var _action$props$onClick, _action$props;

                e.preventDefault();
                return (_action$props$onClick = (_action$props = action.props).onClick) === null || _action$props$onClick === void 0 ? void 0 : _action$props$onClick.call(_action$props, e, _this.props.data);
              }
            });
          }

          return action;
        });
        return /*#__PURE__*/Object(external_react_["cloneElement"])(actionsSecondary, {
          children: clonedActions
        });
      }

      return actionsSecondary;
    });

    Row_defineProperty(Row_assertThisInitialized(_this), "handleMount", function (el) {
      Object(updateReactRef["a" /* updateReactRef */])(_this.props.elementRef, el);
      _this.elementRef = el;
    });

    return _this;
  }

  Row_createClass(Row, [{
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          actions = _this$props5.actions,
          actionPrimary = _this$props5.actionPrimary,
          actionsSecondary = _this$props5.actionsSecondary,
          activeElementId = _this$props5.activeElementId,
          children = _this$props5.children,
          dataId = _this$props5.dataId,
          disabled = _this$props5.disabled,
          draggable = _this$props5.draggable,
          elementRef = _this$props5.elementRef,
          expandable = _this$props5.expandable,
          expanded = _this$props5.expanded,
          expansionRow = _this$props5.expansionRow,
          index = _this$props5.index,
          movableColumns = _this$props5.movableColumns,
          onClick = _this$props5.onClick,
          onDragStart = _this$props5.onDragStart,
          onExpansion = _this$props5.onExpansion,
          onRequestMoveRow = _this$props5.onRequestMoveRow,
          onRequestToggle = _this$props5.onRequestToggle,
          selected = _this$props5.selected,
          showRowGuideline = _this$props5.showRowGuideline,
          stripe = _this$props5.stripe,
          otherProps = Row_objectWithoutProperties(_this$props5, ["actions", "actionPrimary", "actionsSecondary", "activeElementId", "children", "dataId", "disabled", "draggable", "elementRef", "expandable", "expanded", "expansionRow", "index", "movableColumns", "onClick", "onDragStart", "onExpansion", "onRequestMoveRow", "onRequestToggle", "selected", "showRowGuideline", "stripe"]);

      var childrenCloned = !onClick ? external_react_["Children"].toArray(children).map(function (child) {
        return /*#__PURE__*/Object(external_react_["cloneElement"])(child, {
          disabled: disabled
        });
      }) // ensure consistent keys
      : external_react_["Children"].toArray(children).filter(external_react_["isValidElement"]).map(function (child) {
        return /*#__PURE__*/Object(external_react_["cloneElement"])(child, {
          appearance: 'rowLink',
          disabled: disabled
        });
      });
      var StyledStripe = StyledStripeComponents[stripe];
      var StyledCellToggle = disabled ? StyledCellSelectionDisabled : Table_Cell;
      var rowSpan = expanded ? external_react_["Children"].count(expansionRow) + 1 : undefined;
      var dataMovableColumn = movableColumns ? 'false' : undefined;
      var actionsSecondaryToggle = /*#__PURE__*/external_react_default.a.createElement(ActionsSecondaryToggle, null);
      return /*#__PURE__*/external_react_default.a.createElement(StyledStripe, Row_extends({
        "data-test": "row",
        "data-test-selected": onRequestToggle ? selected : undefined,
        $clickable: !!onClick,
        "data-has-movable-columns": movableColumns ? 'true' : undefined,
        disabled: !!disabled,
        $expandable: !!expandable,
        ref: this.handleMount,
        tabIndex: onClick ? 0 : undefined
      }, Object(external_lodash_["omit"])(otherProps, 'data'), {
        onClick: onClick ? this.handleClick : undefined,
        onKeyDown: this.handleKeyDown,
        $rowSelected: !!(onRequestToggle && selected)
      }), draggable && /*#__PURE__*/external_react_default.a.createElement(Table_RowDragCell, {
        activeElementId: activeElementId,
        dataId: dataId,
        "data-movable-column": dataMovableColumn,
        index: index,
        onRequestMoveRow: onRequestMoveRow,
        onDragStart: onDragStart,
        rowSpan: rowSpan,
        showRowGuideline: showRowGuideline
      }), onRequestToggle && /*#__PURE__*/external_react_default.a.createElement(StyledCellToggle, {
        appearance: onClick ? 'rowLink' : 'data',
        "data-test": "toggle",
        variant: "toggle",
        "data-movable-column": dataMovableColumn,
        onClick: this.handleToggle,
        rowSpan: rowSpan,
        role: "checkbox",
        "aria-checked": selected
      }, /*#__PURE__*/external_react_default.a.createElement(Table_Toggle, {
        disabled: disabled,
        selected: selected
      })), expandable && expansionRow && /*#__PURE__*/external_react_default.a.createElement(Table_Cell, {
        align: "center",
        appearance: "data",
        "aria-expanded": expanded,
        "aria-label": Object(i18n_["_"])('Expandable row'),
        "data-movable-column": dataMovableColumn,
        "data-test": "expand",
        expand: expanded,
        onClick: this.handleExpansion,
        rowSpan: rowSpan,
        variant: "expand"
      }, /*#__PURE__*/external_react_default.a.createElement("div", {
        "aria-hidden": true,
        title: expanded ? Object(i18n_["_"])('Collapse row') : Object(i18n_["_"])('Expand row')
      }, expanded ? /*#__PURE__*/external_react_default.a.createElement(ChevronDown["a" /* default */], {
        prismaSize: "small"
      }) : /*#__PURE__*/external_react_default.a.createElement(ChevronRight["a" /* default */], {
        prismaSize: "small"
      }))), expandable && !expansionRow && /*#__PURE__*/external_react_default.a.createElement(StyledCellExpansionDisabled, {
        variant: "expand",
        "data-movable-column": dataMovableColumn
      }), childrenCloned, actions && !actionPrimary && !actionsSecondary && /*#__PURE__*/external_react_default.a.createElement(Table_Cell, {
        align: "right",
        appearance: disabled ? 'data' : 'rowLink',
        "data-test": "row-actions",
        variant: "actions",
        "data-movable-column": dataMovableColumn
      }), (actionPrimary || actionsSecondary) && /*#__PURE__*/external_react_default.a.createElement(Table_Cell, {
        align: "right",
        appearance: "rowLink",
        "data-test": "row-actions",
        variant: "actions",
        "data-movable-column": dataMovableColumn
      }, actionPrimary && this.renderActionPrimary(), actionsSecondary && /*#__PURE__*/external_react_default.a.createElement(Dropdown_default.a, {
        toggle: actionsSecondaryToggle
      }, this.renderActionsSecondary())));
    }
  }]);

  return Row;
}(external_react_["Component"]);

Row_defineProperty(Row_Row, "splunkUiType", 'Table.Row');

Row_defineProperty(Row_Row, "propTypes", Row_propTypes);

Row_defineProperty(Row_Row, "defaultProps", Row_defaultProps);

/* harmony default export */ var Table_Row = (Row_Row);
// CONCATENATED MODULE: ./src/Table/HeadStyles.ts



var HeadStyles_Styled = external_styled_components_default.a.thead.withConfig({
  displayName: "HeadStyles__Styled",
  componentId: "iap21t-0"
})(["", ";"], themes_["mixins"].reset('table-header-group'));
var StyledToggleAll = external_styled_components_default()(Table_HeadCell).withConfig({
  displayName: "HeadStyles__StyledToggleAll",
  componentId: "iap21t-1"
})(["width:", ";"], Object(themes_["pick"])({
  enterprise: '42px',
  prisma: '40px'
}));
var StyledInfo = external_styled_components_default()(Table_HeadCell).withConfig({
  displayName: "HeadStyles__StyledInfo",
  componentId: "iap21t-2"
})(["width:", ";"], Object(themes_["pick"])({
  enterprise: '32px',
  prisma: '40px'
}));
var StyledDragRow = external_styled_components_default()(Table_HeadCell).withConfig({
  displayName: "HeadStyles__StyledDragRow",
  componentId: "iap21t-3"
})(["width:", ";"], Object(themes_["pick"])({
  enterprise: '32px',
  prisma: '40px'
}));

// CONCATENATED MODULE: ./src/Table/Head.tsx
function Head_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Head_typeof = function _typeof(obj) { return typeof obj; }; } else { Head_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Head_typeof(obj); }

function Head_extends() { Head_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Head_extends.apply(this, arguments); }

function Head_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Head_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Head_createClass(Constructor, protoProps, staticProps) { if (protoProps) Head_defineProperties(Constructor.prototype, protoProps); if (staticProps) Head_defineProperties(Constructor, staticProps); return Constructor; }

function Head_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Head_setPrototypeOf(subClass, superClass); }

function Head_setPrototypeOf(o, p) { Head_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Head_setPrototypeOf(o, p); }

function Head_createSuper(Derived) { var hasNativeReflectConstruct = Head_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Head_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Head_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Head_possibleConstructorReturn(this, result); }; }

function Head_possibleConstructorReturn(self, call) { if (call && (Head_typeof(call) === "object" || typeof call === "function")) { return call; } return Head_assertThisInitialized(self); }

function Head_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function Head_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function Head_getPrototypeOf(o) { Head_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Head_getPrototypeOf(o); }

function Head_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }










var Head_propTypes = {
  /** @private. */
  actions: external_prop_types_default.a.arrayOf(external_prop_types_default.a.node),

  /** @private. */
  actionsColumnWidth: external_prop_types_default.a.number,
  children: external_prop_types_default.a.node,

  /** @private. */
  dragPosition: external_prop_types_default.a.number,

  /** @private. */
  dragIndex: external_prop_types_default.a.number,
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),

  /** @private. */
  hasDragColumn: external_prop_types_default.a.bool,

  /** @private. */
  hasInfoColumn: external_prop_types_default.a.bool,

  /** @private. */
  onAutosizeColumn: external_prop_types_default.a.func,

  /** @private. */
  onDragStart: external_prop_types_default.a.func,

  /** @private. */
  onRequestMoveColumn: external_prop_types_default.a.func,

  /** @private. */
  onRequestResizeColumn: external_prop_types_default.a.func,

  /** @private. */
  onRequestToggleAllRows: external_prop_types_default.a.func,

  /** @private. */
  rowSelection: external_prop_types_default.a.oneOf(['all', 'some', 'none'])
};
var Head_defaultProps = {
  actions: []
};
var columnOneIndexOffset = 3;
var columnTwoIndexOffset = 2;
var columnThreeIndexOffset = 1;

var Head_Head = /*#__PURE__*/function (_Component) {
  Head_inherits(Head, _Component);

  var _super = Head_createSuper(Head);

  // @docs-props-type HeadPropsBase
  function Head(props) {
    var _this;

    Head_classCallCheck(this, Head);

    _this = _super.call(this, props);

    Head_defineProperty(Head_assertThisInitialized(_this), "cells", void 0);

    Head_defineProperty(Head_assertThisInitialized(_this), "el", null);

    Head_defineProperty(Head_assertThisInitialized(_this), "onRequestMoveColumn", function (_ref) {
      var columnId = _ref.columnId,
          fromIndex = _ref.fromIndex,
          toIndex = _ref.toIndex;

      if (toIndex < external_react_["Children"].toArray(_this.props.children).length) {
        var _this$props$onRequest, _this$props;

        // HeadCell never requests less than zero
        (_this$props$onRequest = (_this$props = _this.props).onRequestMoveColumn) === null || _this$props$onRequest === void 0 ? void 0 : _this$props$onRequest.call(_this$props, {
          fromIndex: fromIndex,
          toIndex: toIndex,
          columnId: columnId
        });
      }
    });

    Head_defineProperty(Head_assertThisInitialized(_this), "handleMount", function (el) {
      _this.el = el;
      Object(updateReactRef["a" /* updateReactRef */])(_this.props.elementRef, el);
    });

    Head_defineProperty(Head_assertThisInitialized(_this), "handleDragStart", function (dragIndex, dragColumnId) {
      var _this$props$onDragSta, _this$props2;

      _this.setState({
        dragColumnId: dragColumnId
      });

      window.addEventListener('dragend', _this.handleDragEnd);
      (_this$props$onDragSta = (_this$props2 = _this.props).onDragStart) === null || _this$props$onDragSta === void 0 ? void 0 : _this$props$onDragSta.call(_this$props2, {
        dragIndex: dragIndex
      });
    });

    Head_defineProperty(Head_assertThisInitialized(_this), "handleDragEnd", function () {
      var dragColumnId = _this.state.dragColumnId;
      var dragIndex = _this.props.dragIndex;

      var guidelineIndex = _this.calculateGuideIndex(); // The new index is not necessarily the same as the guidelineIndex


      var toIndex = dragIndex !== undefined && dragIndex < guidelineIndex ? guidelineIndex - 1 : guidelineIndex;

      if (dragIndex !== undefined && dragIndex !== toIndex) {
        var _this$props$onRequest2, _this$props3;

        (_this$props$onRequest2 = (_this$props3 = _this.props).onRequestMoveColumn) === null || _this$props$onRequest2 === void 0 ? void 0 : _this$props$onRequest2.call(_this$props3, {
          fromIndex: dragIndex,
          toIndex: toIndex,
          columnId: dragColumnId
        });
      }

      _this.cleanupDrag();
    });

    _this.state = {
      dragColumnId: undefined // the item being reordered

    };

    if (false) {}

    return _this;
  }

  Head_createClass(Head, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      if (false) {}
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cleanupDrag();
    }
  }, {
    key: "getCellWidths",
    value: function getCellWidths() {
      var _this$el$firstElement, _this$el, _this$el$firstElement2;

      var headRowCells = Array.from((_this$el$firstElement = (_this$el = this.el) === null || _this$el === void 0 ? void 0 : (_this$el$firstElement2 = _this$el.firstElementChild) === null || _this$el$firstElement2 === void 0 ? void 0 : _this$el$firstElement2.children) !== null && _this$el$firstElement !== void 0 ? _this$el$firstElement : []);
      var result = headRowCells.map(function (el) {
        var computedStyle = window.getComputedStyle(el);
        return el.clientWidth - parseFloat(computedStyle.getPropertyValue('padding-right')) - parseFloat(computedStyle.getPropertyValue('padding-left'));
      });
      return result;
    }
  }, {
    key: "getClientHeight",
    value: function getClientHeight() {
      var _this$el2;

      return (_this$el2 = this.el) === null || _this$el2 === void 0 ? void 0 : _this$el2.clientHeight;
    }
  }, {
    key: "getEl",
    value: function getEl() {
      return this.el;
    }
  }, {
    key: "calculateGuideIndex",
    value: function calculateGuideIndex() {
      var _this$el$firstElement3, _this$el3, _this$el3$firstElemen;

      var _this$props4 = this.props,
          dragIndex = _this$props4.dragIndex,
          dragPosition = _this$props4.dragPosition,
          hasInfoColumn = _this$props4.hasInfoColumn,
          hasDragColumn = _this$props4.hasDragColumn,
          onRequestToggleAllRows = _this$props4.onRequestToggleAllRows;

      if (this.props.dragPosition === undefined || !this.el) {
        return -1;
      }

      this.cells = Array.from((_this$el$firstElement3 = (_this$el3 = this.el) === null || _this$el3 === void 0 ? void 0 : (_this$el3$firstElemen = _this$el3.firstElementChild) === null || _this$el3$firstElemen === void 0 ? void 0 : _this$el3$firstElemen.children) !== null && _this$el$firstElement3 !== void 0 ? _this$el$firstElement3 : []).slice(hasInfoColumn ? 1 : 0).slice(hasDragColumn ? 1 : 0).slice(onRequestToggleAllRows ? 1 : 0);
      var overIndex = Object(external_lodash_["findIndex"])(this.cells, function (cell) {
        var rect = cell.getBoundingClientRect();
        return dragPosition !== undefined && dragPosition > rect.left && dragPosition < rect.right;
      });

      if (overIndex === -1) {
        // must be too far left or right;
        var rect = this.el.getBoundingClientRect();
        return dragPosition !== undefined && dragPosition < rect.left ? 0 : this.cells.length;
      }

      if (dragIndex !== undefined && overIndex > dragIndex) {
        return overIndex + 1;
      }

      return overIndex;
    }
  }, {
    key: "cleanupDrag",
    value: function cleanupDrag() {
      window.removeEventListener('dragend', this.handleDragEnd);
      this.cells = undefined;
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props5 = this.props,
          actions = _this$props5.actions,
          actionsColumnWidth = _this$props5.actionsColumnWidth,
          children = _this$props5.children,
          hasDragColumn = _this$props5.hasDragColumn,
          hasInfoColumn = _this$props5.hasInfoColumn,
          onAutosizeColumn = _this$props5.onAutosizeColumn,
          onRequestMoveColumn = _this$props5.onRequestMoveColumn,
          onRequestResizeColumn = _this$props5.onRequestResizeColumn,
          onRequestToggleAllRows = _this$props5.onRequestToggleAllRows,
          rowSelection = _this$props5.rowSelection;
      var guidelineIndex = this.calculateGuideIndex();
      var validChildren = external_react_["Children"].toArray(children).filter(external_react_["isValidElement"]);
      var minimumIndex = validChildren.length + (actions.length || actionsColumnWidth ? 1 : 0);
      var clonedChildren = validChildren.map(function (child, index, original) {
        var showGuideline = 'none';

        if (guidelineIndex === original.length && index + 1 === original.length) {
          showGuideline = 'after';
        } else if (guidelineIndex === index) {
          showGuideline = 'before';
        }

        return /*#__PURE__*/Object(external_react_["cloneElement"])(child, {
          index: index,
          showGuideline: showGuideline,
          onRequestResize: onRequestResizeColumn,
          onDragStart: onRequestMoveColumn ? _this2.handleDragStart : undefined,
          onRequestMoveColumn: onRequestMoveColumn ? _this2.onRequestMoveColumn : undefined,
          onAutosizeColumn: onAutosizeColumn,
          key: child.key || child.props.columnId || index,
          zIndex: minimumIndex - index
        });
      });
      var toggleStateMap = {
        all: true,
        none: false,
        some: 'some'
      };
      var toggleState = rowSelection === undefined ? undefined : toggleStateMap[rowSelection];
      var ariaChecked = toggleState === 'some' ? 'mixed' : toggleState;
      var defaultActionsColumnWidth = actionsColumnWidth || 48;
      return /*#__PURE__*/external_react_default.a.createElement(HeadStyles_Styled, Head_extends({
        ref: this.handleMount,
        "data-test": "head"
      }, Object(external_lodash_["omit"])(this.props, Object(external_lodash_["keys"])(Head.propTypes))), /*#__PURE__*/external_react_default.a.createElement(Table_Row, null, hasDragColumn && /*#__PURE__*/external_react_default.a.createElement(StyledDragRow, {
        key: "drag_rows_head_cell",
        "data-test": "drag-rows-head-cell",
        align: "center",
        resizable: false,
        zIndex: minimumIndex + columnOneIndexOffset
      }), onRequestToggleAllRows && /*#__PURE__*/external_react_default.a.createElement(StyledToggleAll, {
        key: "toggle_all",
        "data-test": "toggle-all",
        resizable: false,
        align: "center",
        onClick: onRequestToggleAllRows,
        variant: "toggleAll",
        truncate: false,
        role: "checkbox",
        "aria-checked": ariaChecked,
        zIndex: minimumIndex + columnTwoIndexOffset
      }, /*#__PURE__*/external_react_default.a.createElement(Table_Toggle, {
        selected: toggleState,
        allRows: true
      })), hasInfoColumn && /*#__PURE__*/external_react_default.a.createElement(StyledInfo, {
        key: "more_info_head_cell",
        "data-test": "more-info-head-cell",
        align: "center",
        resizable: false,
        variant: "info",
        zIndex: minimumIndex + columnThreeIndexOffset
      }, /*#__PURE__*/external_react_default.a.createElement(HeadExpandRowsIcon, null)), clonedChildren, actions.length > 0 && /*#__PURE__*/external_react_default.a.createElement(Table_HeadCell, {
        hasActionsHead: true,
        key: "actions_head_cell",
        "data-test": "actions-head-cell",
        align: "right",
        resizable: false,
        width: defaultActionsColumnWidth,
        style: {
          minWidth: defaultActionsColumnWidth
        },
        variant: "actions",
        zIndex: 1
      }, actions), actions.length === 0 && actionsColumnWidth && /*#__PURE__*/external_react_default.a.createElement(Table_HeadCell, {
        key: "actions_head_cell",
        "data-test": "actions-head-cell",
        align: "right",
        resizable: false,
        width: actionsColumnWidth,
        style: {
          minWidth: actionsColumnWidth
        },
        variant: "actions",
        zIndex: 1
      }, ' ')));
    }
  }], [{
    key: "validateChildrenWidth",
    value: function validateChildrenWidth(props) {
      if (false) { var hasChildWithoutWidth; }
    }
  }]);

  return Head;
}(external_react_["Component"]);

Head_defineProperty(Head_Head, "splunkUiType", 'Table.Head');

Head_defineProperty(Head_Head, "propTypes", Head_propTypes);

Head_defineProperty(Head_Head, "defaultProps", Head_defaultProps);

/* harmony default export */ var Table_Head = (Head_Head);
// EXTERNAL MODULE: external "@splunk/ui-utils/id"
var id_ = __webpack_require__(10);

// EXTERNAL MODULE: external "@splunk/react-ui/Popover"
var Popover_ = __webpack_require__(17);
var Popover_default = /*#__PURE__*/__webpack_require__.n(Popover_);

// CONCATENATED MODULE: ./src/Table/HeadDropdownCell.tsx
function HeadDropdownCell_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { HeadDropdownCell_typeof = function _typeof(obj) { return typeof obj; }; } else { HeadDropdownCell_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return HeadDropdownCell_typeof(obj); }

function HeadDropdownCell_extends() { HeadDropdownCell_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeadDropdownCell_extends.apply(this, arguments); }

function HeadDropdownCell_toConsumableArray(arr) { return HeadDropdownCell_arrayWithoutHoles(arr) || HeadDropdownCell_iterableToArray(arr) || HeadDropdownCell_unsupportedIterableToArray(arr) || HeadDropdownCell_nonIterableSpread(); }

function HeadDropdownCell_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function HeadDropdownCell_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return HeadDropdownCell_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return HeadDropdownCell_arrayLikeToArray(o, minLen); }

function HeadDropdownCell_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function HeadDropdownCell_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return HeadDropdownCell_arrayLikeToArray(arr); }

function HeadDropdownCell_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function HeadDropdownCell_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function HeadDropdownCell_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function HeadDropdownCell_createClass(Constructor, protoProps, staticProps) { if (protoProps) HeadDropdownCell_defineProperties(Constructor.prototype, protoProps); if (staticProps) HeadDropdownCell_defineProperties(Constructor, staticProps); return Constructor; }

function HeadDropdownCell_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) HeadDropdownCell_setPrototypeOf(subClass, superClass); }

function HeadDropdownCell_setPrototypeOf(o, p) { HeadDropdownCell_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return HeadDropdownCell_setPrototypeOf(o, p); }

function HeadDropdownCell_createSuper(Derived) { var hasNativeReflectConstruct = HeadDropdownCell_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = HeadDropdownCell_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = HeadDropdownCell_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return HeadDropdownCell_possibleConstructorReturn(this, result); }; }

function HeadDropdownCell_possibleConstructorReturn(self, call) { if (call && (HeadDropdownCell_typeof(call) === "object" || typeof call === "function")) { return call; } return HeadDropdownCell_assertThisInitialized(self); }

function HeadDropdownCell_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function HeadDropdownCell_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function HeadDropdownCell_getPrototypeOf(o) { HeadDropdownCell_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return HeadDropdownCell_getPrototypeOf(o); }

function HeadDropdownCell_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }











/** @public */

var possibleCloseReasons = ['clickAway', 'contentClick', 'escapeKey', 'offScreen', 'tabKey', 'toggleClick'];
var HeadDropdownCell_propTypes = {
  align: external_prop_types_default.a.oneOf(['left', 'center', 'right']),
  canCoverHead: external_prop_types_default.a.bool,
  children: external_prop_types_default.a.node.isRequired,
  closeReasons: external_prop_types_default.a.arrayOf(external_prop_types_default.a.oneOf(possibleCloseReasons)),
  columnId: external_prop_types_default.a.any,
  defaultPlacement: external_prop_types_default.a.oneOf(['above', 'below', 'left', 'right', 'vertical', 'horizontal']),
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  focusToggleReasons: external_prop_types_default.a.arrayOf(external_prop_types_default.a.oneOf(possibleCloseReasons)),

  /** @private The index of the cell, skipping the info column. */
  index: external_prop_types_default.a.number,
  label: external_prop_types_default.a.node,

  /** @private. */
  onAutosizeColumn: external_prop_types_default.a.func,

  /** @private. */
  onDragStart: external_prop_types_default.a.func,

  /**
   * @private. This will be passed through, and will work as expected.
   */
  onKeyDown: external_prop_types_default.a.func,
  onRequestClose: external_prop_types_default.a.func,

  /** @private. */
  onRequestMoveColumn: external_prop_types_default.a.func,
  onRequestOpen: external_prop_types_default.a.func,

  /** @private. */
  onRequestResize: external_prop_types_default.a.func,
  open: external_prop_types_default.a.bool,
  repositionMode: external_prop_types_default.a.oneOf(['none', 'flip', 'any']),
  resizable: external_prop_types_default.a.bool,
  retainFocus: external_prop_types_default.a.bool,

  /** @private. */
  showGuideline: external_prop_types_default.a.oneOf(['none', 'before', 'after']),
  takeFocus: external_prop_types_default.a.bool,
  truncate: external_prop_types_default.a.bool,

  /**
   * @private
   * Used internally to suppress focus when this `HeadDropdownCell` is superseded by one in an
   * overlaid `HeadTable` for user interactions.
   */
  visible: external_prop_types_default.a.bool,
  width: external_prop_types_default.a.number,

  /** @private. */
  variant: external_prop_types_default.a.oneOf(['toggleAll', 'info', 'actions']),

  /** @private. */
  zIndex: external_prop_types_default.a.number
};
var HeadDropdownCell_defaultProps = {
  align: 'left',
  canCoverHead: true,
  closeReasons: possibleCloseReasons,
  defaultPlacement: 'below',
  focusToggleReasons: ['contentClick', 'escapeKey', 'toggleClick'],
  repositionMode: 'flip',
  resizable: true,
  retainFocus: false,
  takeFocus: true,
  truncate: true,
  visible: true,
  zIndex: 1
};

var HeadDropdownCell_HeadDropdownCell = /*#__PURE__*/function (_Component) {
  HeadDropdownCell_inherits(HeadDropdownCell, _Component);

  var _super = HeadDropdownCell_createSuper(HeadDropdownCell);

  // @docs-props-type HeadDropdownCellPropsBase

  /**
   * Enumeration of the possible reasons for closing the Select.
   * 'clickAway', 'escapeKey', and 'offScreen' are inherited from Popover, but repeated here for
   * docs extraction.
   */
  function HeadDropdownCell(props) {
    var _this;

    HeadDropdownCell_classCallCheck(this, HeadDropdownCell);

    _this = _super.call(this, props);

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "cellId", void 0);

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "controlledExternally", void 0);

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "popoverId", void 0);

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "handleMount", function (el) {
      _this.setState({
        el: el
      });

      Object(updateReactRef["a" /* updateReactRef */])(_this.props.elementRef, el);
    });

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "handleRequestClose", function (_ref) {
      var reason = _ref.reason,
          event = _ref.event;
      var _this$props = _this.props,
          closeReasons = _this$props.closeReasons,
          columnId = _this$props.columnId,
          focusToggleReasons = _this$props.focusToggleReasons,
          index = _this$props.index,
          onRequestClose = _this$props.onRequestClose;

      if (reason === 'clickAway' && event !== undefined) {
        var el = event.target;

        while (el) {
          // Ignore clicks on toggle.
          if (el === _this.state.el) {
            return;
          }

          el = el.parentNode;
        }
      }

      if (_this.isOpen() && Object(external_lodash_["includes"])(closeReasons, reason) && index !== undefined) {
        if (Object(external_lodash_["includes"])(focusToggleReasons, reason)) {
          _this.focus();
        }

        if (!_this.isControlled()) {
          _this.setState({
            open: false
          });
        }

        onRequestClose === null || onRequestClose === void 0 ? void 0 : onRequestClose(event, {
          index: index,
          reason: reason,
          columnId: columnId
        });
      }
    });

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "handleClick", function (e) {
      var _this$props2 = _this.props,
          columnId = _this$props2.columnId,
          index = _this$props2.index; // ignore clicks on the resize handle

      if (e.target.getAttribute('data-test') === 'resize') {
        return;
      }

      _this.setState({
        clientX: e.clientX || undefined
      });

      if (_this.isOpen()) {
        var _this$handleRequestCl, _this2;

        (_this$handleRequestCl = (_this2 = _this).handleRequestClose) === null || _this$handleRequestCl === void 0 ? void 0 : _this$handleRequestCl.call(_this2, {
          reason: 'toggleClick',
          event: e
        });
      } else if (index !== undefined) {
        var _this$props$onRequest, _this$props3;

        (_this$props$onRequest = (_this$props3 = _this.props).onRequestOpen) === null || _this$props$onRequest === void 0 ? void 0 : _this$props$onRequest.call(_this$props3, e, {
          reason: 'toggleClick',
          columnId: columnId,
          index: index
        });

        if (!_this.isControlled()) {
          _this.setState({
            open: true
          });
        }
      }
    });

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "handleKeyDown", function (e) {
      var _this$props4 = _this.props,
          columnId = _this$props4.columnId,
          index = _this$props4.index,
          onKeyDown = _this$props4.onKeyDown,
          onRequestMoveColumn = _this$props4.onRequestMoveColumn;

      if (e.target.getAttribute('data-test') !== 'resize') {
        if (Object(keyboard_["keycode"])(e.nativeEvent) === 'enter') {
          _this.handleClick(e);
        } else if (Object(keyboard_["keycode"])(e.nativeEvent) === 'left' && index !== undefined && index > 0) {
          onRequestMoveColumn === null || onRequestMoveColumn === void 0 ? void 0 : onRequestMoveColumn({
            fromIndex: index,
            toIndex: index - 1,
            columnId: columnId
          });
        } else if (Object(keyboard_["keycode"])(e.nativeEvent) === 'right' && index !== undefined) {
          onRequestMoveColumn === null || onRequestMoveColumn === void 0 ? void 0 : onRequestMoveColumn({
            fromIndex: index,
            toIndex: index + 1,
            columnId: columnId
          });
        }
      }

      if (index !== undefined) {
        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e, {
          index: index,
          columnId: columnId
        });
      }
    });

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "handleContentClick", function (event) {
      _this.handleRequestClose({
        reason: 'contentClick',
        event: event
      });
    });

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "handleDragStart", function (index, columnId) {
      var _this$props$onDragSta, _this$props5;

      _this.setState({
        isDragging: true
      });

      (_this$props$onDragSta = (_this$props5 = _this.props).onDragStart) === null || _this$props$onDragSta === void 0 ? void 0 : _this$props$onDragSta.call(_this$props5, index, columnId);
    });

    HeadDropdownCell_defineProperty(HeadDropdownCell_assertThisInitialized(_this), "handleDragEnd", function () {
      _this.setState({
        isDragging: false
      });
    });

    _this.state = {
      el: null,
      isDragging: false,
      open: false
    };
    _this.controlledExternally = Object(external_lodash_["has"])(props, 'open');
    _this.popoverId = Object(id_["createDOMID"])('popover');
    _this.cellId = Object(id_["createDOMID"])('cellId');

    if (false) {}

    return _this;
  }

  HeadDropdownCell_createClass(HeadDropdownCell, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.visible && !this.props.visible) {
        this.handleRequestClose({
          reason: 'offScreen'
        });
      }

      if (false) {}
    }
  }, {
    key: "focus",

    /**
     * Place focus on the toggle.
     */
    value: function focus() {
      var _this$state$el;

      (_this$state$el = this.state.el) === null || _this$state$el === void 0 ? void 0 : _this$state$el.focus();
    }
  }, {
    key: "isOpen",
    value: function isOpen() {
      return this.isControlled() ? this.props.open : this.state.open;
    }
  }, {
    key: "isControlled",
    value: function isControlled() {
      return this.controlledExternally;
    }
  }, {
    key: "render",
    value: function render() {
      var _el$getBoundingClient,
          _this3 = this;

      var _this$props6 = this.props,
          align = _this$props6.align,
          canCoverHead = _this$props6.canCoverHead,
          children = _this$props6.children,
          closeReasons = _this$props6.closeReasons,
          columnId = _this$props6.columnId,
          defaultPlacement = _this$props6.defaultPlacement,
          id = _this$props6.id,
          index = _this$props6.index,
          label = _this$props6.label,
          onAutosizeColumn = _this$props6.onAutosizeColumn,
          onDragStart = _this$props6.onDragStart,
          onRequestResize = _this$props6.onRequestResize,
          repositionMode = _this$props6.repositionMode,
          resizable = _this$props6.resizable,
          retainFocus = _this$props6.retainFocus,
          showGuideline = _this$props6.showGuideline,
          style = _this$props6.style,
          takeFocus = _this$props6.takeFocus,
          truncate = _this$props6.truncate,
          variant = _this$props6.variant,
          visible = _this$props6.visible,
          width = _this$props6.width,
          zIndex = _this$props6.zIndex;
      var _this$state = this.state,
          el = _this$state.el,
          clientX = _this$state.clientX;
      var cellId = id || this.cellId;
      var headType = this.context.headType;
      return /*#__PURE__*/external_react_default.a.createElement(HeadCellStyles_Styled, HeadDropdownCell_extends({
        style: Object(external_lodash_["merge"])(style, {
          width: width
        }),
        "data-test": "head-cell",
        $dragging: this.state.isDragging || undefined,
        $clickable: true,
        $variant: variant,
        id: visible ? cellId : undefined,
        tabIndex: visible ? 0 : undefined,
        ref: this.handleMount
      }, Object(external_lodash_["omit"])(this.props, [].concat(HeadDropdownCell_toConsumableArray(Object.keys(HeadDropdownCell.propTypes)), ['id', 'style'])), {
        onClick: this.handleClick,
        onKeyDown: this.handleKeyDown,
        "aria-haspopup": true,
        "aria-owns": this.popoverId,
        "aria-expanded": this.isOpen(),
        $isFixed: headType === 'fixed',
        $zIndex: zIndex
      }), /*#__PURE__*/external_react_default.a.createElement(Table_HeadInner, {
        label: label,
        align: align,
        columnId: columnId,
        id: id,
        index: index,
        isMenu: true,
        resizable: visible && resizable,
        onDragStart: onDragStart ? this.handleDragStart : undefined,
        onDragEnd: onDragStart ? this.handleDragEnd : undefined,
        onAutosizeColumn: onAutosizeColumn,
        onRequestResize: onRequestResize,
        truncate: truncate,
        width: width
      }), showGuideline !== 'none' && /*#__PURE__*/external_react_default.a.createElement(StyledGuideLine, {
        $position: showGuideline
      }), /*#__PURE__*/external_react_default.a.createElement(Popover_default.a, {
        align: "center",
        open: !!el && this.isOpen(),
        autoCloseWhenOffScreen: Object(external_lodash_["includes"])(closeReasons, 'offScreen'),
        anchor: el,
        canCoverAnchor: canCoverHead,
        retainFocus: retainFocus,
        defaultPlacement: defaultPlacement,
        onRequestClose: this.handleRequestClose,
        repositionMode: repositionMode,
        id: this.popoverId,
        "aria-labelledby": id || this.cellId,
        takeFocus: takeFocus,
        pointTo: clientX !== undefined && Object(external_lodash_["isFinite"])(clientX) ? {
          x: clientX - ((_el$getBoundingClient = el === null || el === void 0 ? void 0 : el.getBoundingClientRect().left) !== null && _el$getBoundingClient !== void 0 ? _el$getBoundingClient : 0)
        } : undefined
      }, Object(external_lodash_["isFunction"])(children) ? function () {
        return (
          /*#__PURE__*/
          // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
          external_react_default.a.createElement("div", {
            onClick: _this3.handleContentClick
          }, children.apply(void 0, arguments))
        );
      } :
      /*#__PURE__*/
      // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
      external_react_default.a.createElement("div", {
        onClick: this.handleContentClick
      }, children)));
    }
  }]);

  return HeadDropdownCell;
}(external_react_["Component"]);

HeadDropdownCell_defineProperty(HeadDropdownCell_HeadDropdownCell, "splunkUiType", 'Table.HeadDropdownCell');

HeadDropdownCell_defineProperty(HeadDropdownCell_HeadDropdownCell, "possibleCloseReasons", possibleCloseReasons);

HeadDropdownCell_defineProperty(HeadDropdownCell_HeadDropdownCell, "propTypes", HeadDropdownCell_propTypes);

HeadDropdownCell_defineProperty(HeadDropdownCell_HeadDropdownCell, "defaultProps", HeadDropdownCell_defaultProps);

HeadDropdownCell_defineProperty(HeadDropdownCell_HeadDropdownCell, "contextType", Table_TableContext);

/* harmony default export */ var Table_HeadDropdownCell = (HeadDropdownCell_HeadDropdownCell);
// CONCATENATED MODULE: ./src/Table/HeadTableStyles.ts



var HeadTableStyles_Styled = external_styled_components_default()(StyledTable).withConfig({
  displayName: "HeadTableStyles__Styled",
  componentId: "g85wgf-0"
})(["min-width:0;table-layout:fixed;"]);
var StyledDockedContainer = external_styled_components_default.a.div.withConfig({
  displayName: "HeadTableStyles__StyledDockedContainer",
  componentId: "g85wgf-1"
})(["overflow:hidden;position:fixed;box-shadow:", ";z-index:", ";@media print{display:none;}"], Object(themes_["pick"])({
  enterprise: themes_["variables"].overlayShadow,
  prisma: 'none'
}), themes_["variables"].zindexFixedNavbar);
var StyledFixedContainer = external_styled_components_default()(StyledDockedContainer).withConfig({
  displayName: "HeadTableStyles__StyledFixedContainer",
  componentId: "g85wgf-2"
})(["position:absolute;box-shadow:none;z-index:1;"]);

// CONCATENATED MODULE: ./src/Table/HeadTable.tsx
function HeadTable_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { HeadTable_typeof = function _typeof(obj) { return typeof obj; }; } else { HeadTable_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return HeadTable_typeof(obj); }

function HeadTable_extends() { HeadTable_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return HeadTable_extends.apply(this, arguments); }

function HeadTable_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = HeadTable_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function HeadTable_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function HeadTable_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function HeadTable_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function HeadTable_createClass(Constructor, protoProps, staticProps) { if (protoProps) HeadTable_defineProperties(Constructor.prototype, protoProps); if (staticProps) HeadTable_defineProperties(Constructor, staticProps); return Constructor; }

function HeadTable_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) HeadTable_setPrototypeOf(subClass, superClass); }

function HeadTable_setPrototypeOf(o, p) { HeadTable_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return HeadTable_setPrototypeOf(o, p); }

function HeadTable_createSuper(Derived) { var hasNativeReflectConstruct = HeadTable_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = HeadTable_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = HeadTable_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return HeadTable_possibleConstructorReturn(this, result); }; }

function HeadTable_possibleConstructorReturn(self, call) { if (call && (HeadTable_typeof(call) === "object" || typeof call === "function")) { return call; } return HeadTable_assertThisInitialized(self); }

function HeadTable_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function HeadTable_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function HeadTable_getPrototypeOf(o) { HeadTable_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return HeadTable_getPrototypeOf(o); }

function HeadTable_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





var HeadTable_propTypes = {
  cellWidths: external_prop_types_default.a.arrayOf(external_prop_types_default.a.number).isRequired,
  dragIndex: external_prop_types_default.a.number,
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  hasDragColumn: external_prop_types_default.a.bool,
  hasRowExpansion: external_prop_types_default.a.bool,
  hasRowSelection: external_prop_types_default.a.bool,
  headType: external_prop_types_default.a.oneOf(['docked', 'fixed']).isRequired,
  horizontalOffset: external_prop_types_default.a.number,
  isFixedColumn: external_prop_types_default.a.bool,
  rowSelection: external_prop_types_default.a.oneOf(['all', 'some', 'none']),
  tableStyle: external_prop_types_default.a.object,
  tableWidth: external_prop_types_default.a.number.isRequired,
  tHead: external_prop_types_default.a.element.isRequired,
  top: external_prop_types_default.a.number.isRequired,
  width: external_prop_types_default.a.number.isRequired
};
var HeadTable_defaultProps = {
  horizontalOffset: 0
};

/**
 * @private
 * HeadTable is an internal component that provides a detached table head that can
 * then be positioned in different ways outside of the main table.
 */
var HeadTable_HeadTable = /*#__PURE__*/function (_Component) {
  HeadTable_inherits(HeadTable, _Component);

  var _super = HeadTable_createSuper(HeadTable);

  function HeadTable() {
    var _this;

    HeadTable_classCallCheck(this, HeadTable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    HeadTable_defineProperty(HeadTable_assertThisInitialized(_this), "head", null);

    HeadTable_defineProperty(HeadTable_assertThisInitialized(_this), "handleHeadMount", function (head) {
      _this.head = head;
    });

    return _this;
  }

  HeadTable_createClass(HeadTable, [{
    key: "getHead",
    value: function getHead() {
      return this.head;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          cellWidths = _this$props.cellWidths,
          elementRef = _this$props.elementRef,
          hasDragColumn = _this$props.hasDragColumn,
          hasRowExpansion = _this$props.hasRowExpansion,
          hasRowSelection = _this$props.hasRowSelection,
          headType = _this$props.headType,
          horizontalOffset = _this$props.horizontalOffset,
          isFixedColumn = _this$props.isFixedColumn,
          tableStyle = _this$props.tableStyle,
          tableWidth = _this$props.tableWidth,
          tHead = _this$props.tHead,
          top = _this$props.top,
          width = _this$props.width,
          otherProps = HeadTable_objectWithoutProperties(_this$props, ["cellWidths", "elementRef", "hasDragColumn", "hasRowExpansion", "hasRowSelection", "headType", "horizontalOffset", "isFixedColumn", "tableStyle", "tableWidth", "tHead", "top", "width"]);

      var isDocked = headType === 'docked';
      var StyledContainer = isDocked ? StyledDockedContainer : StyledFixedContainer;
      var indexOffset = 0;

      if (hasRowExpansion) {
        indexOffset += 1;
      }

      if (hasRowSelection) {
        indexOffset += 1;
      }

      if (hasDragColumn) {
        indexOffset += 1;
      } // Set the widths of the head cells if not fixed column


      var cells = isFixedColumn ? external_react_["Children"].toArray(tHead.props.children) : // ensure consistent keys
      external_react_["Children"].toArray(tHead.props.children).filter(external_react_["isValidElement"]).map(function (cell, i) {
        return /*#__PURE__*/Object(external_react_["cloneElement"])(cell, {
          style: Object(external_lodash_["extend"])({}, cell.props.style, {
            width: cellWidths[i + indexOffset]
          })
        });
      });
      var clonedTHead = /*#__PURE__*/Object(external_react_["cloneElement"])(tHead, {
        ref: this.handleHeadMount,
        'data-test': "".concat(headType, "-head")
      }, cells);
      return /*#__PURE__*/external_react_default.a.createElement(StyledContainer, {
        style: {
          top: top,
          width: width
        },
        ref: elementRef
      }, /*#__PURE__*/external_react_default.a.createElement(HeadTableStyles_Styled, HeadTable_extends({
        "data-test": "".concat(headType, "-head-table"),
        "data-fixed-column": isFixedColumn ? 'true' : undefined,
        style: Object(external_lodash_["extend"])({}, tableStyle, {
          marginLeft: horizontalOffset,
          width: isFixedColumn ? undefined : tableWidth
        })
      }, Object(external_lodash_["omit"])(otherProps, 'dragIndex')), clonedTHead));
    }
  }]);

  return HeadTable;
}(external_react_["Component"]);

HeadTable_defineProperty(HeadTable_HeadTable, "propTypes", HeadTable_propTypes);

HeadTable_defineProperty(HeadTable_HeadTable, "defaultProps", HeadTable_defaultProps);

/* harmony default export */ var Table_HeadTable = (HeadTable_HeadTable);
// EXTERNAL MODULE: ./src/utils/types.ts
var types = __webpack_require__(55);

// CONCATENATED MODULE: ./src/Table/Table.tsx
function Table_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Table_typeof = function _typeof(obj) { return typeof obj; }; } else { Table_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Table_typeof(obj); }

function Table_extends() { Table_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Table_extends.apply(this, arguments); }

function Table_toConsumableArray(arr) { return Table_arrayWithoutHoles(arr) || Table_iterableToArray(arr) || Table_unsupportedIterableToArray(arr) || Table_nonIterableSpread(); }

function Table_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function Table_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Table_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Table_arrayLikeToArray(o, minLen); }

function Table_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function Table_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return Table_arrayLikeToArray(arr); }

function Table_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function Table_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function Table_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function Table_createClass(Constructor, protoProps, staticProps) { if (protoProps) Table_defineProperties(Constructor.prototype, protoProps); if (staticProps) Table_defineProperties(Constructor, staticProps); return Constructor; }

function Table_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Table_setPrototypeOf(subClass, superClass); }

function Table_setPrototypeOf(o, p) { Table_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Table_setPrototypeOf(o, p); }

function Table_createSuper(Derived) { var hasNativeReflectConstruct = Table_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Table_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Table_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Table_possibleConstructorReturn(this, result); }; }

function Table_possibleConstructorReturn(self, call) { if (call && (Table_typeof(call) === "object" || typeof call === "function")) { return call; } return Table_assertThisInitialized(self); }

function Table_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function Table_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function Table_getPrototypeOf(o) { Table_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Table_getPrototypeOf(o); }

function Table_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }







 // Exposed as static members of the Table class







 // Internal Helper Modules





/** @public */

var Table_propTypes = {
  actions: external_prop_types_default.a.arrayOf(external_prop_types_default.a.element),
  actionsColumnWidth: external_prop_types_default.a.number,
  children: external_prop_types_default.a.node,
  dockOffset: external_prop_types_default.a.number,
  dockScrollBar: external_prop_types_default.a.bool,
  elementRef: external_prop_types_default.a.oneOfType([external_prop_types_default.a.func, external_prop_types_default.a.object]),
  headType: external_prop_types_default.a.oneOf(['docked', 'fixed', 'inline']),
  innerStyle: external_prop_types_default.a.object,
  onRequestToggleAllRows: external_prop_types_default.a.func,
  onScroll: external_prop_types_default.a.func,
  outerStyle: external_prop_types_default.a.object,
  rowExpansion: external_prop_types_default.a.oneOf(['single', 'multi', 'controlled', 'none']),
  rowSelection: external_prop_types_default.a.oneOf(['all', 'some', 'none']),
  stripeRows: external_prop_types_default.a.bool,
  tableStyle: external_prop_types_default.a.object,
  onRequestMoveColumn: external_prop_types_default.a.func,
  onRequestMoveRow: external_prop_types_default.a.func,
  onRequestResizeColumn: external_prop_types_default.a.func
};
var Table_defaultProps = {
  actions: [],
  dockOffset: 0,
  headType: 'inline',
  rowExpansion: 'none',
  rowSelection: 'none',
  resizableFillLayout: false
};

var Table_Table = /*#__PURE__*/function (_Component) {
  Table_inherits(Table, _Component);

  var _super = Table_createSuper(Table);

  Table_createClass(Table, null, [{
    key: "getHeadFocusState",
    // @docs-props-type TablePropsBase

    /**
     * @private
     * @private
     * Returns an object describing the focus state of the provided `head`.
     * @param head - A reference to a mounted `Head` component.
     * @returns {Object} focusState - An object containing a target (either 'headCell' or
     * 'resizeButton') and an index.
     */
    value: function getHeadFocusState(head) {
      var _head$getEl, _head$getEl2;

      if (head === undefined || head === null) {
        return undefined;
      }

      var headCells = (_head$getEl = head.getEl()) === null || _head$getEl === void 0 ? void 0 : _head$getEl.children[0].children;
      var activeHeadCellIndex = Object(external_lodash_["indexOf"])(headCells, document.activeElement);

      if (activeHeadCellIndex > -1) {
        return {
          target: 'headCell',
          index: activeHeadCellIndex
        };
      }

      var resizeButtons = (_head$getEl2 = head.getEl()) === null || _head$getEl2 === void 0 ? void 0 : _head$getEl2.querySelectorAll('[data-test=resize]');
      var activeResizeButtonIndex = Object(external_lodash_["indexOf"])(resizeButtons, document.activeElement);

      if (activeResizeButtonIndex > -1) {
        return {
          target: 'resizeButton',
          index: activeResizeButtonIndex
        };
      }

      return undefined;
    }
  }, {
    key: "getOffset",
    value: function getOffset(el) {
      var rect = el.getBoundingClientRect();
      return {
        top: rect.top + window.pageYOffset,
        left: rect.left + window.pageXOffset
      };
    }
    /**
     * @private
     * @private
     * Applies the provided `headFocusState` to the provided `head`.
     * @param head - A reference to a mounted `Head` component.
     * @param {Object} headFocusState
     * @param {String} headFocusState.target - Focus can be applied to a 'headCell' or a
     * 'resizeButton'.
     * @param {Number} headFocusState.index - The index of the element to set focus on.
     */

  }, {
    key: "applyHeadFocusState",
    value: function applyHeadFocusState(head, _ref) {
      var _targetEl, _targetEl$focus;

      var target = _ref.target,
          index = _ref.index;

      if (false) {}

      var targetEl;

      if (target === 'headCell') {
        var _head$getEl3;

        targetEl = head === null || head === void 0 ? void 0 : (_head$getEl3 = head.getEl()) === null || _head$getEl3 === void 0 ? void 0 : _head$getEl3.children[0].children[index];
      } else if (target === 'resizeButton') {
        var _head$getEl4;

        targetEl = head === null || head === void 0 ? void 0 : (_head$getEl4 = head.getEl()) === null || _head$getEl4 === void 0 ? void 0 : _head$getEl4.querySelectorAll('[data-test=resize]')[index];
      }

      if (false) {}

      (_targetEl = targetEl) === null || _targetEl === void 0 ? void 0 : (_targetEl$focus = _targetEl.focus) === null || _targetEl$focus === void 0 ? void 0 : _targetEl$focus.call(_targetEl);
    }
  }]);

  function Table(props) {
    var _this;

    Table_classCallCheck(this, Table);

    _this = _super.call(this, props);

    Table_defineProperty(Table_assertThisInitialized(_this), "dockedScrollBar", null);

    Table_defineProperty(Table_assertThisInitialized(_this), "head", null);

    Table_defineProperty(Table_assertThisInitialized(_this), "headFocusState", void 0);

    Table_defineProperty(Table_assertThisInitialized(_this), "headTable", null);

    Table_defineProperty(Table_assertThisInitialized(_this), "headTableEl", null);

    Table_defineProperty(Table_assertThisInitialized(_this), "scrollSource", void 0);

    Table_defineProperty(Table_assertThisInitialized(_this), "table", null);

    Table_defineProperty(Table_assertThisInitialized(_this), "tableContainer", null);

    Table_defineProperty(Table_assertThisInitialized(_this), "updateDockedHeadState", function () {
      if (_this.isInline()) {
        return;
      }

      var _assertThisInitialize = Table_assertThisInitialized(_this),
          tableContainer = _assertThisInitialize.tableContainer,
          head = _assertThisInitialize.head,
          table = _assertThisInitialize.table;

      var dockOffset = _this.props.dockOffset;

      if (!table || !head) {
        return;
      }

      var cellWidths = head.getCellWidths();
      var headHeight = head.getClientHeight();
      var tableTopWrtWindow = Table.getOffset(table).top - window.pageYOffset - (headHeight !== null && headHeight !== void 0 ? headHeight : 0) + table.offsetHeight;
      var top = Math.min(tableTopWrtWindow, dockOffset);

      _this.setState({
        width: tableContainer === null || tableContainer === void 0 ? void 0 : tableContainer.clientWidth,
        tableWidth: table === null || table === void 0 ? void 0 : table.clientWidth,
        cellWidths: cellWidths,
        top: top
      });
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleScroll", Object(external_lodash_["throttle"])(_this.updateDockedHeadState, 0));

    Table_defineProperty(Table_assertThisInitialized(_this), "handleResize", Object(external_lodash_["throttle"])(_this.updateDockedHeadState, 50));

    Table_defineProperty(Table_assertThisInitialized(_this), "handleContainerScroll", function (e) {
      var _this$props$onScroll, _this$props;

      (_this$props$onScroll = (_this$props = _this.props).onScroll) === null || _this$props$onScroll === void 0 ? void 0 : _this$props$onScroll.call(_this$props, e);

      if ((_this.isFixed() || _this.headerIsDocked()) && _this.tableContainer) {
        _this.setState({
          horizontalOffset: -_this.tableContainer.scrollLeft
        });
      }

      if (_this.dockedScrollBar && _this.scrollSource !== 'dockedScrollBar' && _this.tableContainer) {
        _this.scrollSource = 'container';
        _this.dockedScrollBar.scrollLeft = _this.tableContainer.scrollLeft;
      } else {
        _this.scrollSource = undefined;
      }
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleDockedScrollBarScroll", function () {
      if (_this.scrollSource !== 'container' && _this.tableContainer && _this.dockedScrollBar) {
        _this.scrollSource = 'dockedScrollBar';
        _this.tableContainer.scrollLeft = _this.dockedScrollBar.scrollLeft;
      } else {
        _this.scrollSource = undefined;
      }
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleDragStart", function (_ref2) {
      var dragIndex = _ref2.dragIndex;

      _this.setState({
        dragIndex: dragIndex
      });

      window.addEventListener('dragenter', _this.handleDragEnter);
      window.addEventListener('dragover', _this.handleDragOver);
      window.addEventListener('drop', _this.handleDrop);
      window.addEventListener('dragend', _this.handleDragEnd);
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleDragOver", function (e) {
      e.preventDefault(); // necessary for the drop event to fire

      if (e.dataTransfer) {
        e.dataTransfer.dropEffect = 'move';
      }

      _this.updateDragPosition(e.clientX);
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleDragEnter", function (e) {
      e.preventDefault(); // necessary for the drop event to fire

      _this.setState({
        dragPosition: e.clientX
      });
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleDragEnd", function () {
      _this.setState({
        dragPosition: undefined
      });

      _this.cleanupDrag();
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleDrop", function (e) {
      e.preventDefault(); // necessary to prevent cell from animating to original position;
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleHeadMount", function (comp) {
      _this.head = comp;
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleHeadTableMount", function (headTable) {
      if (headTable) {
        // On mount, focus the applicable docked head cell if a primary head cell was focused.
        if (_this.headFocusState) {
          Table.applyHeadFocusState(headTable.getHead(), _this.headFocusState);
          _this.headFocusState = undefined;
        }
      } else {
        var _this$headTable;

        // On unmount, focus the applicable primary head cell if a docked head cell was focused.
        var focusState = Table.getHeadFocusState((_this$headTable = _this.headTable) === null || _this$headTable === void 0 ? void 0 : _this$headTable.getHead());

        if (focusState) {
          Table.applyHeadFocusState(_this.head, focusState);
        }
      }

      _this.headTable = headTable;
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleHeadTableElementMount", function (el) {
      _this.headTableEl = el;
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleHeadTableKeyUp", function (e) {
      if (!_this.headTableEl || !_this.tableContainer || Object(keyboard_["keycode"])(e.nativeEvent) !== 'tab') {
        return;
      }

      var scrollAdjust = _this.headTableEl.scrollLeft;

      if (scrollAdjust !== 0) {
        _this.headTableEl.scrollLeft = 0;
        _this.tableContainer.scrollLeft += scrollAdjust;
      }
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "handleAutosizeColumn", function (e, _ref3) {
      var _this$tableContainer, _this$props$onRequest, _this$props2, _wrapper$parentNode;

      var index = _ref3.index,
          columnId = _ref3.columnId;

      if (index === undefined) {
        return;
      }

      var offset = _this.props.rowExpansion === 'none' ? 1 : 2;
      var cells = (_this$tableContainer = _this.tableContainer) === null || _this$tableContainer === void 0 ? void 0 : _this$tableContainer.querySelectorAll("thead th:nth-child(".concat(index + offset, "), tbody td:nth-child(").concat(index + offset, ")"));
      var wrapper = document.createElement('div'); // TODO: find a styled-components compliant way to do this

      wrapper.style["float"] = 'left';
      wrapper.style.position = 'fixed';
      wrapper.style.top = '-100';
      wrapper.style.left = '0';
      wrapper.style.maxHeight = '10px';
      wrapper.style.overflow = 'hidden';
      Object(external_lodash_["forEach"])(cells, function (cell) {
        var clone = cell.cloneNode(true); // TS: this seems safe to assume?

        clone.style.display = 'block';
        clone.style.width = 'auto';
        wrapper.appendChild(clone);
      });
      document.body.appendChild(wrapper);
      (_this$props$onRequest = (_this$props2 = _this.props).onRequestResizeColumn) === null || _this$props$onRequest === void 0 ? void 0 : _this$props$onRequest.call(_this$props2, e, {
        index: index,
        columnId: columnId,
        width: wrapper.clientWidth + 1
      });
      (_wrapper$parentNode = wrapper.parentNode) === null || _wrapper$parentNode === void 0 ? void 0 : _wrapper$parentNode.removeChild(wrapper);
    });

    Table_defineProperty(Table_assertThisInitialized(_this), "updateDragPosition", Object(external_lodash_["throttle"])(_this.updateDragPositionImpl, 100, {
      trailing: false
    }));

    _this.state = {
      dragPosition: undefined
    };

    if (false) {}

    return _this;
  }

  Table_createClass(Table, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      var head = this.head,
          headTable = this.headTable;

      if (head && headTable) {
        var cellWidths = head.getCellWidths();

        if (!Object(external_lodash_["isEqual"])(this.state.cellWidths, cellWidths)) {
          this.updateDockedHeadState();
        }
      }

      if (prevProps.headType === 'inline' && this.props.headType !== 'inline') {
        this.updateDockedHeadState();
      }

      if (false) {}
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      this.updateDockedHeadState();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.handleScroll.cancel();
      this.handleResize.cancel();
      this.cleanupDrag();
    }
  }, {
    key: "createHead",
    value: function createHead(base) {
      var _this$props3 = this.props,
          actions = _this$props3.actions,
          actionsColumnWidth = _this$props3.actionsColumnWidth,
          onRequestMoveColumn = _this$props3.onRequestMoveColumn,
          onRequestMoveRow = _this$props3.onRequestMoveRow,
          onRequestResizeColumn = _this$props3.onRequestResizeColumn,
          onRequestToggleAllRows = _this$props3.onRequestToggleAllRows,
          rowExpansion = _this$props3.rowExpansion,
          rowSelection = _this$props3.rowSelection;
      var dragIndex = this.state.dragIndex;
      var headCells = external_react_["Children"].toArray(base.props.children).filter(external_react_["isValidElement"]);
      var validActions = actions.filter(external_react_["isValidElement"]);
      var newHead = /*#__PURE__*/Object(external_react_["cloneElement"])(base, {
        actions: validActions,
        actionsColumnWidth: actionsColumnWidth,
        dragIndex: dragIndex,
        dragPosition: this.state.dragPosition,
        hasInfoColumn: rowExpansion !== 'none',
        hasDragColumn: !!onRequestMoveRow,
        onAutosizeColumn: this.handleAutosizeColumn,
        onDragStart: onRequestMoveColumn ? this.handleDragStart : undefined,
        onRequestMoveColumn: onRequestMoveColumn,
        onRequestResizeColumn: onRequestResizeColumn,
        onRequestToggleAllRows: onRequestToggleAllRows,
        ref: this.handleHeadMount,
        rowSelection: rowSelection
      }, headCells);
      return newHead;
    }
  }, {
    key: "createBody",
    value: function createBody(base) {
      var actions = this.props.actions;
      var validActions = actions.filter(external_react_["isValidElement"]);
      return /*#__PURE__*/Object(external_react_["cloneElement"])(base, {
        actions: validActions.length > 0,
        movableColumns: !!this.props.onRequestMoveColumn,
        onRequestMoveRow: this.props.onRequestMoveRow,
        rowExpansion: this.props.rowExpansion,
        stripeRows: this.props.stripeRows
      });
    }
  }, {
    key: "isInline",
    value: function isInline() {
      return this.props.headType === 'inline';
    }
  }, {
    key: "headerIsDocked",
    value: function headerIsDocked() {
      return this.props.headType === 'docked';
    }
  }, {
    key: "isFixed",
    value: function isFixed() {
      return this.props.headType === 'fixed';
    }
  }, {
    key: "showDockedHeader",
    value: function showDockedHeader() {
      if (!this.headerIsDocked() || !this.table || !this.head || !this.tableContainer) {
        return false;
      }

      var dockOffset = this.props.dockOffset;
      var tableTop = Table.getOffset(this.tableContainer).top;
      return window.pageYOffset >= tableTop - dockOffset;
    }
  }, {
    key: "showDockedScrollBar",
    value: function showDockedScrollBar() {
      if (!this.props.dockScrollBar || !this.table || !this.tableContainer) {
        return false;
      }

      var rect = this.tableContainer.getBoundingClientRect();
      return rect.bottom > window.innerHeight && rect.top < window.innerHeight;
    }
  }, {
    key: "updateDragPositionImpl",
    value: function updateDragPositionImpl(dragPosition) {
      this.setState({
        dragPosition: dragPosition
      });
    }
  }, {
    key: "cleanupDrag",
    value: function cleanupDrag() {
      window.removeEventListener('dragenter', this.handleDragEnter);
      window.removeEventListener('dragover', this.handleDragOver);
      window.removeEventListener('drop', this.handleDrop);
      window.removeEventListener('dragend', this.handleDragEnd);
      this.updateDragPosition.cancel(); // cancel throttle
    }
  }, {
    key: "renderHeadTable",
    value: function renderHeadTable(tHead, isFixedColumn) {
      if (this.showDockedHeader()) {
        // FIXME: handle inline
        // Save the current head focus state so that it can be applied to the docked version
        // after the `HeadTable` mounts.
        this.headFocusState = Table.getHeadFocusState(this.head);
        var _this$state = this.state,
            cellWidths = _this$state.cellWidths,
            dragIndex = _this$state.dragIndex,
            horizontalOffset = _this$state.horizontalOffset,
            tableWidth = _this$state.tableWidth,
            top = _this$state.top,
            width = _this$state.width;

        if (cellWidths === undefined || tableWidth === undefined || top === undefined || width === undefined) {
          return false;
        }

        return /*#__PURE__*/external_react_default.a.createElement(Table_HeadTable, {
          headType: "docked",
          tHead: tHead,
          cellWidths: cellWidths,
          dragIndex: dragIndex,
          horizontalOffset: horizontalOffset,
          tableWidth: tableWidth,
          top: top,
          width: width,
          tableStyle: this.props.tableStyle,
          isFixedColumn: isFixedColumn,
          ref: this.handleHeadTableMount,
          onKeyUp: this.handleHeadTableKeyUp,
          elementRef: this.handleHeadTableElementMount,
          hasDragColumn: !!this.props.onRequestMoveRow,
          hasRowExpansion: this.props.rowExpansion !== 'none',
          hasRowSelection: !!this.props.onRequestToggleAllRows
        });
      }

      return false;
    }
  }, {
    key: "renderDockedScrollbar",
    value: function renderDockedScrollbar() {
      var _this2 = this;

      if (!this.showDockedScrollBar()) {
        return false;
      }

      var shiftPosition = 0;

      if (this.dockedScrollBar && this.head && this.table && this.head) {
        var _this$head$getEl$offs, _this$head$getEl;

        var availableSpace = window.innerHeight - this.table.getBoundingClientRect().top - ((_this$head$getEl$offs = (_this$head$getEl = this.head.getEl()) === null || _this$head$getEl === void 0 ? void 0 : _this$head$getEl.offsetHeight) !== null && _this$head$getEl$offs !== void 0 ? _this$head$getEl$offs : 0);
        shiftPosition = Math.min(availableSpace - this.dockedScrollBar.offsetHeight, 0);
      }

      return /*#__PURE__*/external_react_default.a.createElement(StyledDockedScrollbar, {
        style: {
          width: this.state.width,
          marginBottom: shiftPosition
        },
        onScroll: this.handleDockedScrollBarScroll,
        "data-test": "docked-scroll-bar",
        ref: function ref(el) {
          _this2.dockedScrollBar = el;
        }
      }, /*#__PURE__*/external_react_default.a.createElement(StyledDockedScrollbarContent, {
        style: {
          width: this.state.tableWidth
        },
        "data-test": "docked-scroll-content"
      }));
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var _this$props4 = this.props,
          children = _this$props4.children,
          elementRef = _this$props4.elementRef,
          headType = _this$props4.headType,
          innerStyle = _this$props4.innerStyle,
          onRequestResizeColumn = _this$props4.onRequestResizeColumn,
          onRequestToggleAllRows = _this$props4.onRequestToggleAllRows,
          outerStyle = _this$props4.outerStyle,
          resizableFillLayout = _this$props4.resizableFillLayout,
          rowSelection = _this$props4.rowSelection,
          tableStyle = _this$props4.tableStyle;
      var tHead;
      var tBody;
      var tCaption;
      var isFixedColumn = !!onRequestResizeColumn;
      external_react_["Children"].toArray(children).forEach(function (child) {
        var splunkUiType = child.type.splunkUiType;

        if (splunkUiType === 'Table.Head') {
          tHead = _this3.createHead(child);

          if (!isFixedColumn) {
            // if all the HeadCells are fixed width, then the table is fixed.
            isFixedColumn = !external_react_["Children"].toArray(child.props.children).filter(external_react_["isValidElement"]).some(function (th) {
              return !Object(external_lodash_["has"])(th.props, 'width');
            });
          }
        } else if (splunkUiType === 'Table.Body') {
          tBody = _this3.createBody(child);
        } else if (splunkUiType === 'Table.Caption') {
          // the html spec mandates that a caption must be the first table child.
          // catch the caption here so that it can be placed first later. note: a
          // caption can be placed on the bottom side of a table by adjusting the
          // caption's side prop.
          tCaption = child;
        }
      });
      Object(types["a" /* assertDefined */])(tHead, 'A Table.Head is required.');
      var headTable = this.renderHeadTable(tHead, isFixedColumn); // When a `headTable` is used, suppress focus interactions in the primary `Head`. Focus
      // interactions will be handled by the overlaid `headTable` instead.

      var headCells = external_react_["Children"].toArray(tHead.props.children).filter(external_react_["isValidElement"]).map(function (cell) {
        return (
          /*#__PURE__*/
          // TS: onClick is different for regular/dropdown head cells, that's ok
          Object(external_react_["cloneElement"])(cell, {
            visible: !headTable
          })
        );
      });
      tHead = /*#__PURE__*/Object(external_react_["cloneElement"])(tHead, {}, headCells);
      var defaultScrollContainer = this.context || window;
      var scrollContainer = this.isFixed() ? this.tableContainer : defaultScrollContainer;

      if (resizableFillLayout) {
        isFixedColumn = false;
      }

      return /*#__PURE__*/external_react_default.a.createElement(TableStyles_Styled, Table_extends({
        "data-test": "table",
        ref: elementRef,
        style: outerStyle,
        "data-test-row-selection": onRequestToggleAllRows ? rowSelection : undefined
      }, Object(external_lodash_["omit"])(this.props, [].concat(Table_toConsumableArray(Object.keys(Table.propTypes)), ['style']))), /*#__PURE__*/external_react_default.a.createElement(EventListener_default.a, {
        target: window,
        eventType: "scroll",
        listener: this.handleScroll,
        options: {
          passive: false,
          capture: true
        }
      }), /*#__PURE__*/external_react_default.a.createElement(external_react_resize_detector_default.a, {
        handleWidth: true,
        onResize: this.handleResize
      }), /*#__PURE__*/external_react_default.a.createElement(Table_TableContext.Provider, {
        value: {
          headType: headType
        }
      }, headTable, /*#__PURE__*/external_react_default.a.createElement(StyledTableContainer, {
        onScroll: this.handleContainerScroll,
        ref: function ref(el) {
          _this3.tableContainer = el;
        },
        style: innerStyle
      }, /*#__PURE__*/external_react_default.a.createElement(ScrollContainerContext_["ScrollContainerProvider"], {
        value: scrollContainer
      }, /*#__PURE__*/external_react_default.a.createElement(StyledTable, {
        ref: function ref(el) {
          _this3.table = el;
        },
        "data-test": "main-table",
        style: tableStyle,
        "data-fixed-column": isFixedColumn ? 'true' : undefined,
        $resizableFillLayout: resizableFillLayout
      }, tCaption, tHead, tBody))), this.renderDockedScrollbar()));
    }
  }]);

  return Table;
}(external_react_["Component"]);

Table_defineProperty(Table_Table, "propTypes", Table_propTypes);

Table_defineProperty(Table_Table, "contextType", ScrollContainerContext_["ScrollContainerContext"]);

Table_defineProperty(Table_Table, "defaultProps", Table_defaultProps);

Table_defineProperty(Table_Table, "Caption", Table_Caption);

Table_defineProperty(Table_Table, "Head", Table_Head);

Table_defineProperty(Table_Table, "HeadCell", Table_HeadCell);

Table_defineProperty(Table_Table, "HeadDropdownCell", Table_HeadDropdownCell);

Table_defineProperty(Table_Table, "Body", Table_Body);

Table_defineProperty(Table_Table, "Row", Table_Row);

Table_defineProperty(Table_Table, "Cell", Table_Cell);

/* harmony default export */ var src_Table_Table = (Table_Table);

// CONCATENATED MODULE: ./src/Table/index.ts



/***/ })
/******/ ]);