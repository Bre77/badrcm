module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 176);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports) {

module.exports = require("@splunk/themes");

/***/ }),

/***/ 1:
/***/ (function(module, exports) {

module.exports = require("prop-types");

/***/ }),

/***/ 176:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* reexport */ src_TransitionOpen_TransitionOpen; });

// EXTERNAL MODULE: external "react"
var external_react_ = __webpack_require__(2);
var external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);

// EXTERNAL MODULE: external "prop-types"
var external_prop_types_ = __webpack_require__(1);
var external_prop_types_default = /*#__PURE__*/__webpack_require__.n(external_prop_types_);

// EXTERNAL MODULE: external "lodash"
var external_lodash_ = __webpack_require__(4);

// EXTERNAL MODULE: external "@splunk/react-ui/Animation"
var Animation_ = __webpack_require__(31);

// EXTERNAL MODULE: external "@splunk/ui-utils/focus"
var focus_ = __webpack_require__(26);

// EXTERNAL MODULE: external "@splunk/ui-utils/style"
var style_ = __webpack_require__(32);

// EXTERNAL MODULE: external "react-spring"
var external_react_spring_ = __webpack_require__(19);

// EXTERNAL MODULE: external "styled-components"
var external_styled_components_ = __webpack_require__(3);
var external_styled_components_default = /*#__PURE__*/__webpack_require__.n(external_styled_components_);

// EXTERNAL MODULE: external "@splunk/themes"
var themes_ = __webpack_require__(0);

// CONCATENATED MODULE: ./src/TransitionOpen/TransitionOpenStyles.ts



var Styled = external_styled_components_default()(external_react_spring_["animated"].div).withConfig({
  displayName: "TransitionOpenStyles__Styled",
  componentId: "sc-1x58s0g-0"
})(["", ";", ";"], themes_["mixins"].reset('block'), function (_ref) {
  var $hideOverflow = _ref.$hideOverflow;
  return $hideOverflow && Object(external_styled_components_["css"])(["overflow:hidden;"]);
});
var StyledInner = external_styled_components_default()(external_react_spring_["animated"].div).withConfig({
  displayName: "TransitionOpenStyles__StyledInner",
  componentId: "sc-1x58s0g-1"
})(["", ";", ";width:100%;"], themes_["mixins"].reset('table'), themes_["mixins"].clearfix());

// CONCATENATED MODULE: ./src/TransitionOpen/TransitionOpen.tsx
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }








var propTypes = {
  animation: external_prop_types_default.a.oneOf(['slideFromTop', 'slideFromRight', 'slideFromBottom', 'slideFromLeft', 'expandHeight', 'expandWidth', 'none']),
  animateOnMount: external_prop_types_default.a.bool,
  children: external_prop_types_default.a.node,
  className: external_prop_types_default.a.string,
  id: external_prop_types_default.a.string,
  innerClassName: external_prop_types_default.a.string,
  innerStyle: external_prop_types_default.a.object,
  onAnimationEnd: external_prop_types_default.a.func,
  open: external_prop_types_default.a.bool,
  outerClassName: external_prop_types_default.a.string,
  outerId: external_prop_types_default.a.string,
  outerStyle: external_prop_types_default.a.object,
  retainFocus: external_prop_types_default.a.bool,
  takeFocus: external_prop_types_default.a.bool
};
var defaultProps = {
  animation: 'expandHeight',
  animateOnMount: false,
  innerStyle: {},
  open: false,
  outerStyle: {},
  retainFocus: false,
  takeFocus: false
};

var TransitionOpen_TransitionOpen = /*#__PURE__*/function (_Component) {
  _inherits(TransitionOpen, _Component);

  var _super = _createSuper(TransitionOpen);

  // @docs-props-type TransitionOpenPropsBase
  function TransitionOpen(props) {
    var _this;

    _classCallCheck(this, TransitionOpen);

    _this = _super.call(this, props);

    _defineProperty(_assertThisInitialized(_this), "allowAnimationUpdates", true);

    _defineProperty(_assertThisInitialized(_this), "getValue", function (el) {
      var animation = _this.props.animation;
      var value = 0;

      if (el) {
        if (_this.props.takeFocus) {
          Object(focus_["takeFocus"])(el, 'container');
        }

        switch (animation) {
          case 'slideFromTop':
          case 'slideFromBottom':
          case 'expandHeight':
          case 'none':
            value = el.offsetHeight;
            break;

          case 'slideFromLeft':
          case 'slideFromRight':
          case 'expandWidth':
            value = el.offsetWidth;
            break;

          default: // Intentionally left empty.

        }
      }

      return value;
    });

    _defineProperty(_assertThisInitialized(_this), "handleMount", function (el) {
      var value = _this.getValue(el);

      _this.setState({
        value: value,
        innerEl: el
      });
    });

    _defineProperty(_assertThisInitialized(_this), "handleRest", function () {
      var _this$props$onAnimati, _this$props;

      if (_this.allowAnimationUpdates) {
        _this.setState({
          animating: false
        });
      }

      (_this$props$onAnimati = (_this$props = _this.props).onAnimationEnd) === null || _this$props$onAnimati === void 0 ? void 0 : _this$props$onAnimati.call(_this$props);
    });

    _defineProperty(_assertThisInitialized(_this), "handleTab", function (e) {
      if (_this.state.innerEl) {
        Object(focus_["handleTab"])(_this.state.innerEl, e);
      }
    });

    _defineProperty(_assertThisInitialized(_this), "internalRender", function (_ref) {
      var value = _ref.value,
          transform = _ref.transform;
      var _this$props2 = _this.props,
          animation = _this$props2.animation,
          className = _this$props2.className,
          children = _this$props2.children,
          id = _this$props2.id,
          innerClassName = _this$props2.innerClassName,
          innerStyle = _this$props2.innerStyle,
          open = _this$props2.open,
          outerClassName = _this$props2.outerClassName,
          outerId = _this$props2.outerId,
          outerStyle = _this$props2.outerStyle;
      var animating = _this.state.animating;
      var dimension;

      if (animating) {
        switch (animation) {
          case 'slideFromTop':
          case 'slideFromBottom':
          case 'expandHeight':
          case 'none':
            dimension = 'height';
            break;

          case 'slideFromLeft':
          case 'slideFromRight':
          case 'expandWidth':
            dimension = 'width';
            break;

          default: // Intentionally left empty.

        }
      }
      /* eslint-disable jsx-a11y/no-static-element-interactions */


      return /*#__PURE__*/external_react_default.a.createElement(Styled, {
        $hideOverflow: !open || animating,
        className: Object(style_["toClassName"])(className, outerClassName),
        style: _objectSpread(_objectSpread({}, outerStyle), dimension && _defineProperty({}, dimension, value)),
        id: outerId
      }, (open || animating) && /*#__PURE__*/external_react_default.a.createElement(StyledInner, _extends({
        "data-test": "transition-open"
      }, Object(external_lodash_["omit"])(_this.props, Object(external_lodash_["keys"])(TransitionOpen.propTypes)), {
        ref: _this.handleMount,
        tabIndex: -1,
        className: innerClassName,
        id: id,
        onKeyDown: _this.props.retainFocus ? _this.handleTab : undefined,
        style: _objectSpread(_objectSpread({}, innerStyle), {}, {
          transform: transform
        })
      }), children));
    });

    _defineProperty(_assertThisInitialized(_this), "getSpringTransition", function () {
      var _this$props3 = _this.props,
          open = _this$props3.open,
          animation = _this$props3.animation;
      var value = _this.state.value;
      var toValue = {
        value: open ? value : 0
      };
      var fromValue = {
        value: open ? 0 : value
      };
      var config = {
        precision: 1
      }; // Only use precision when not using transform, otherwise transform animation will break
      // Expansion doesn't require a valid value; the subsequent render animates it.

      if (animation === 'expandWidth' || animation === 'expandHeight' || animation === 'none') {
        return {
          to: toValue,
          config: config
        };
      } // Slide transitions require a valid value, render without transition first.


      if (!value) {
        return null;
      }

      if (animation !== 'slideFromTop' && animation !== 'slideFromLeft') {
        // Return the standard transition if not using a transform.
        return {
          to: toValue,
          from: fromValue,
          config: config
        };
      } // The top and left directions require an additional transform of their inner content to match the outer dimension animation.
      // This is needed to achieve a clipping effect from the outer div, rather than the consumer providing their own.


      var orientation = animation === 'slideFromTop' ? 'Y' : 'X';
      var toTransform = "translate".concat(orientation, "(").concat(open ? 0 : -value, "px)");
      var fromTransform = "translate".concat(orientation, "(").concat(open ? -value : 0, "px)");
      return {
        to: _objectSpread({
          transform: toTransform
        }, toValue),
        from: _objectSpread({
          transform: fromTransform
        }, fromValue)
      };
    });

    _this.state = {
      animating: props.animateOnMount ? props.open : false,
      innerEl: null,
      prevOpen: props.open // eslint-disable-line react/no-unused-state

    };
    return _this;
  }

  _createClass(TransitionOpen, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var value = this.getValue(this.state.innerEl);

      if (this.state.value !== value && !this.state.animating) {
        this.setState({
          value: value
        }); // eslint-disable-line react/no-did-update-set-state
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.allowAnimationUpdates = false;
    }
  }, {
    key: "render",
    value: function render() {
      var animation = this.props.animation;
      return /*#__PURE__*/external_react_default.a.createElement(Animation_["Spring"], _extends({}, this.getSpringTransition(), {
        immediate: animation === 'none',
        onRest: this.handleRest
      }), // eslint-disable-next-line @typescript-eslint/no-explicit-any
      this.internalRender);
    }
  }]);

  return TransitionOpen;
}(external_react_["Component"]);

_defineProperty(TransitionOpen_TransitionOpen, "propTypes", propTypes);

_defineProperty(TransitionOpen_TransitionOpen, "defaultProps", defaultProps);

_defineProperty(TransitionOpen_TransitionOpen, "getDerivedStateFromProps", function (props, state) {
  if (props.open !== state.prevOpen) {
    return {
      animating: true,
      prevOpen: props.open
    };
  }

  return null;
});

/* harmony default export */ var src_TransitionOpen_TransitionOpen = (TransitionOpen_TransitionOpen);
// CONCATENATED MODULE: ./src/TransitionOpen/index.ts



/***/ }),

/***/ 19:
/***/ (function(module, exports) {

module.exports = require("react-spring");

/***/ }),

/***/ 2:
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ 26:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/focus");

/***/ }),

/***/ 3:
/***/ (function(module, exports) {

module.exports = require("styled-components");

/***/ }),

/***/ 31:
/***/ (function(module, exports) {

module.exports = require("@splunk/react-ui/Animation");

/***/ }),

/***/ 32:
/***/ (function(module, exports) {

module.exports = require("@splunk/ui-utils/style");

/***/ }),

/***/ 4:
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ })

/******/ });