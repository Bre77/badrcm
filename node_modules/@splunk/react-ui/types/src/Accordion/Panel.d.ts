import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface AccordionPanelPropsBase {
    /** Displays right-aligned text in the title bar of the panel. */
    description?: string;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    /**
     * When `true` renders the Panel with padding.
     * When `false` render the Panel without padding.
     * Note: in `v5` this will default to `true`. SUI-2559
     */
    inset?: boolean;
    /**
     * Identifies the unique `id` for a panel. `Accordion` uses 'panelID' to track
     * the expanded panel.
     */
    panelId?: string | number;
    /**
     * Displays the the name of the panel in its title bar.
     */
    title: React.ReactNode;
}
declare type AccordionPanelProps = ComponentProps<AccordionPanelPropsBase, 'div'>;
/**
 * `Accordion.Panel` operates as a container component for content in an `Accordion`.
 */
declare function Panel({ panelId, inset, ...otherProps }: AccordionPanelProps): JSX.Element;
declare namespace Panel {
    var propTypes: {
        description: PropTypes.Requireable<string>;
        elementRef: PropTypes.Requireable<object>;
        inset: PropTypes.Requireable<boolean>;
        panelId: PropTypes.Validator<any>;
        title: PropTypes.Validator<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
    };
}
export default Panel;
