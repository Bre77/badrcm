import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface AnchorPropsBase {
    children?: React.ReactNode;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLAnchorElement>;
    /**
     * The name to give to the anchor for the URL fragment.
     */
    name: string;
}
declare type AnchorProps = ComponentProps<AnchorPropsBase, 'a', 'href'>;
/**
 * `Anchor` is a utility component used to add a fragment link to an element.
 */
declare function Anchor({ children, elementRef, name, ...otherProps }: AnchorProps): JSX.Element;
declare namespace Anchor {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        elementRef: PropTypes.Requireable<object>;
        name: PropTypes.Validator<string>;
    };
}
export default Anchor;
