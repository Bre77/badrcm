import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface BoxPropsBase {
    children?: React.ReactNode;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    flex?: boolean;
    inline?: boolean;
}
declare type BoxProps = ComponentProps<BoxPropsBase, 'div'>;
/**
 * Box is a utility component to normalize and abstract common layout styles.
 */
declare function Box({ children, elementRef, flex, inline, ...otherProps }: BoxProps): JSX.Element;
declare namespace Box {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        elementRef: PropTypes.Requireable<object>;
        flex: PropTypes.Requireable<boolean>;
        inline: PropTypes.Requireable<boolean>;
    };
}
export default Box;
