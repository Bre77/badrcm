import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface HeaderPropsBase {
    /**
     * Adds a primary action to the header.
     * For best results, use an icon-only button style.
     * @includeTheme prisma
     */
    actionPrimary?: React.ReactNode;
    /** Adds a secondary actions dropdown menu to the header. Make this prop a `Menu`.
     * @includeTheme prisma
     */
    actionsSecondary?: React.ReactNode;
    /**
     * Make the title an anchor so it can be bookmarked with a fragment.
     */
    anchor?: string;
    children?: React.ReactNode;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    /**
     * Used as the subheading.
     */
    subtitle?: React.ReactNode;
    /**
     * Used as the main heading.
     */
    title?: React.ReactNode;
    /**
     * Do not wrap Title and Subtitle. Long titles will truncate with an ellipsis.
     */
    truncateTitle?: boolean;
}
declare type HeaderProps = ComponentProps<HeaderPropsBase, 'div'>;
/**
 * A styled container for `Card` header content.
 */
declare function Header({ actionPrimary, actionsSecondary, anchor, children, subtitle, title, truncateTitle, ...otherProps }: HeaderProps): JSX.Element;
declare namespace Header {
    var propTypes: {
        actionPrimary: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        actionsSecondary: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        anchor: PropTypes.Requireable<string>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        elementRef: PropTypes.Requireable<object>;
        subtitle: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        title: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        truncateTitle: PropTypes.Requireable<boolean>;
    };
}
export default Header;
