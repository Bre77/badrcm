import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface ColumnPropsBase {
    children?: React.ReactNode;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    /** @private. This prop must only inherit from parent component */
    gutter?: number;
    /** The number of columns the element spans. */
    span?: number;
    /** @private. This prop should be calculated and set by parent component */
    isFirstChild?: boolean;
    /** @private. This prop should be calculated and set by parent component */
    isLastChild?: boolean;
}
declare type ColumnProps = ComponentProps<ColumnPropsBase, 'div'>;
declare function Column({ children, elementRef, gutter, span, isFirstChild, isLastChild, style, ...otherProps }: ColumnProps): JSX.Element;
declare namespace Column {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        elementRef: PropTypes.Requireable<object>;
        /** @private. */
        gutter: PropTypes.Requireable<number>;
        /** @private. */
        isFirstChild: PropTypes.Requireable<boolean>;
        /** @private. */
        isLastChild: PropTypes.Requireable<boolean>;
        span: PropTypes.Requireable<number>;
        /** @private. */
        style: PropTypes.Requireable<object>;
    };
}
export default Column;
