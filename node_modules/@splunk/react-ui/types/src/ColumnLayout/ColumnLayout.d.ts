import React from 'react';
import PropTypes from 'prop-types';
import Column from './Column';
import Row from './Row';
import { ComponentProps } from '../utils/types';
interface ColumnLayoutPropsBase {
    /** `children` must be `ColumnLayout.Row` elements. */
    children?: React.ReactNode;
    /** Show dividers between columns. */
    divider?: 'none' | 'vertical' | 'horizontal';
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    /** Set gutter width in pixels. This is propagated down to its `children`. */
    gutter?: number;
}
declare type ColumnLayoutProps = ComponentProps<ColumnLayoutPropsBase, 'div'>;
/**
 * `ColumnLayout` provides simple API for laying out content into columns. It is based on flexbox
 * and has 12 columns.
 */
declare function ColumnLayout({ children, divider, elementRef, gutter: gutterProp, ...otherProps }: ColumnLayoutProps): JSX.Element;
declare namespace ColumnLayout {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        divider: PropTypes.Requireable<string>;
        elementRef: PropTypes.Requireable<object>;
        gutter: PropTypes.Requireable<number>;
    };
    var Row: typeof import("./Row").default;
    var Column: typeof import("./Column").default;
}
export default ColumnLayout;
export { Column, Row };
