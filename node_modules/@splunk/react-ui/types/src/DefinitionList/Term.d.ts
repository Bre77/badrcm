import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface TermPropsBase {
    children?: React.ReactNode;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLElement>;
}
declare type TermProps = ComponentProps<TermPropsBase, 'dt'>;
/**
 * Container component for a `DefinitionList` term.
 */
declare function Term({ children, elementRef, ...otherProps }: TermProps): JSX.Element;
declare namespace Term {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        elementRef: PropTypes.Requireable<object>;
    };
}
export default Term;
