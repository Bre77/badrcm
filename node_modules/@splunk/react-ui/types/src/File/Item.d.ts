import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
declare type ItemClickHandler = (data: {
    itemId?: any;
    name: string;
    index: number;
}) => void;
interface ItemPropsBase {
    disabled?: boolean;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    /** Show the Item in an error state. */
    error?: boolean;
    /** A unique for this file. */
    itemId?: any;
    /** The name is displayed on the item. */
    name: string;
    /** @private */
    index?: number;
    /** If the uploadPercentage is 0, the item is assumed to be queued. If the upload is complete or
     * not applicable, uploadPercentage must be undefined. */
    uploadPercentage?: number;
}
declare type ItemProps = ComponentProps<ItemPropsBase, 'div'>;
declare function Item({ disabled, error, itemId, name, index, uploadPercentage, ...otherProps }: ItemProps): JSX.Element;
declare namespace Item {
    var propTypes: {
        disabled: PropTypes.Requireable<boolean>;
        elementRef: PropTypes.Requireable<object>;
        error: PropTypes.Requireable<boolean>;
        /** @private */
        index: PropTypes.Requireable<number>;
        itemId: PropTypes.Requireable<any>;
        name: PropTypes.Validator<string>;
        /** If the uploadPercentage is 0, the item is assumed to be queued. If the upload is complete or
         * not applicable, uploadPercentage must be undefined. */
        uploadPercentage: PropTypes.Requireable<number>;
    };
}
export default Item;
export { ItemClickHandler };
