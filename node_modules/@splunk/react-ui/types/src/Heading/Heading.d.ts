import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface HeadingPropsBase {
    children?: React.ReactNode;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLHeadingElement>;
    /**
     * Corresponds to the respective `<hX>` HTML tags. Use `s` for section-style headings
     * and `ss` for small section-style headings.
     */
    level?: 1 | 2 | 3 | 4 | 's' | 'ss';
}
declare type HeadingProps = ComponentProps<HeadingPropsBase, 'h1'>;
declare const levelToElement: {
    readonly '1': "h1";
    readonly '2': "h2";
    readonly '3': "h3";
    readonly '4': "h4";
    readonly s: "h4";
    readonly ss: "h5";
};
declare function Heading({ level, children, elementRef, ...otherProps }: HeadingProps): JSX.Element;
declare namespace Heading {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        elementRef: PropTypes.Requireable<object>;
        level: PropTypes.Requireable<React.ReactText>;
    };
}
export default Heading;
export { levelToElement };
