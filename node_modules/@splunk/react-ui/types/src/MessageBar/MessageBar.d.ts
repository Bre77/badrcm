import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface MessageBarPropsBase {
    /**
     * Text is required and should be concise.
     */
    children: React.ReactNode;
    /**
     * Includes a close button. Always consider including a close button.
     */
    onRequestClose?: React.MouseEventHandler<HTMLButtonElement>;
    /**
     * Sets the severity of this `MessageBar`.
     * */
    type: 'info' | 'warning' | 'error' | 'success';
}
declare type MessageBarProps = ComponentProps<MessageBarPropsBase, 'div'>;
declare function MessageBar({ children, type, onRequestClose, ...otherProps }: MessageBarProps): JSX.Element;
declare namespace MessageBar {
    var propTypes: {
        children: PropTypes.Validator<string | number | boolean | {} | PropTypes.ReactElementLike | PropTypes.ReactNodeArray>;
        onRequestClose: PropTypes.Requireable<(...args: any[]) => any>;
        type: PropTypes.Validator<string>;
    };
}
export default MessageBar;
export type { MessageBarPropsBase };
