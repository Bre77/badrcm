import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface HeaderPropsBase {
    /**
     * `children` might be passed instead of a title. Note that `children` aren't
     * rendered if a title is provided.
     */
    children?: React.ReactNode;
    /**
     * If an `onRequestClose` function is provided, the header includes a close
     * button, which invokes the `onRequestClose` callback when clicked.
     *
     * This callback must return focus to the invoking element or other element that follows the logical flow of the application.
     */
    onRequestClose?: React.MouseEventHandler<HTMLButtonElement>;
    /**
     * Used as the main heading.
     */
    title?: string;
    /**
     * Used as the subheading. Only shown if `title` is also present.
     * @includeTheme prisma
     */
    subtitle?: React.ReactNode;
    /**
     * The icon to show before the title.
     * @includeTheme prisma
     */
    icon?: React.ReactNode;
}
declare type HeaderProps = ComponentProps<HeaderPropsBase, 'div'>;
/**
 * A styled container for `Modal` header content.
 */
declare function Header({ children, icon, onRequestClose, subtitle, title, ...otherProps }: HeaderProps): JSX.Element;
declare namespace Header {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        icon: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        onRequestClose: PropTypes.Requireable<(...args: any[]) => any>;
        subtitle: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        title: PropTypes.Requireable<string>;
    };
}
export default Header;
