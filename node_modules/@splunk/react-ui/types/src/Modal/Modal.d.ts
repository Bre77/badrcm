import React, { Component } from 'react';
import Body from './Body';
import Footer from './Footer';
import Header from './Header';
import { ClassComponentProps } from '../utils/types';
/** @public */
declare type ModalRequestCloseHandler = (data: {
    event: React.MouseEvent<HTMLDivElement> | MouseEvent | KeyboardEvent | TouchEvent;
    reason: 'clickAway' | 'escapeKey';
}) => void;
declare type ModalInitialFocus = 'first' | 'container' | (React.Component & {
    focus: () => {};
}) | HTMLElement | null;
interface ModalPropsBase {
    /**
     * Any renderable children can be passed to the `Modal`.
     *
     * To use the default Splunk UI `Modal` styles, use the
     * `Modal.Header`, `Modal.Body`, and `Modal.Footer`.
     */
    children?: React.ReactNode;
    /**
     * Allows focus to be set to a component other than the default.
     * Supports `first` (first focusable element in the modal), `container` (focus the modal itself), or a ref.
     */
    initialFocus?: ModalInitialFocus;
    /**
     * Called when a close event occurs. The callback is passed the event
     * and a reason, which is either 'escapeKey' or 'clickAway'.
     *
     * Generally, use this callback to toggle the `open` prop.
     *
     * This callback must return focus to the invoking element or other element that follows the logical flow of the application.
     */
    onRequestClose?: ModalRequestCloseHandler;
    /**
     * Set to `true` if the `Modal` is currently open. Otherwise, set to `false`.
     */
    open?: boolean;
}
declare const defaultProps: Required<Pick<ModalPropsBase, 'initialFocus' | 'open'>>;
declare type ModalProps = ClassComponentProps<ModalPropsBase, typeof defaultProps, 'div'>;
declare class Modal extends Component<ModalProps> {
    private el;
    private initialFocusTimeoutId;
    private initialFocus;
    private headerTitleId;
    static propTypes: React.WeakValidationMap<ClassComponentProps<ModalPropsBase, Required<Pick<ModalPropsBase, "open" | "initialFocus">>, "div", never>>;
    static defaultProps: Required<Pick<ModalPropsBase, "open" | "initialFocus">>;
    static Header: typeof Header;
    static Body: typeof Body;
    static Footer: typeof Footer;
    constructor(props: Readonly<ModalProps>);
    componentDidMount(): void;
    componentDidUpdate(prevProps: ModalProps): void;
    private getDefaultMotionStyle;
    private getMotionStyle;
    private handleInitialFocus;
    private handleModalMount;
    private handleModalKeyDown;
    private handleRequestClose;
    private renderModal;
    render(): JSX.Element;
}
export default Modal;
export { Body, Header, Footer, ModalRequestCloseHandler };
