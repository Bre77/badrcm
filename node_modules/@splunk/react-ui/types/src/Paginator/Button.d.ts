import React, { Component } from 'react';
import { PaginatorChangeHandler } from './Paginator';
import { ClassComponentProps } from '../utils/types';
declare type PaginatorButtonClickHandler = PaginatorChangeHandler;
interface PaginatorButtonPropsBase {
    children?: React.ReactNode;
    label?: React.ReactNode;
    /** Callback for button click event */
    onClick?: PaginatorButtonClickHandler;
    /** Index of page */
    page?: number;
    /** @private */
    selected?: boolean;
}
declare const defaultProps: Required<Pick<PaginatorButtonPropsBase, 'selected'>>;
declare type PaginatorButtonProps = ClassComponentProps<PaginatorButtonPropsBase, typeof defaultProps, 'button'>;
declare class PaginatorButton extends Component<PaginatorButtonProps, {}> {
    static propTypes: React.WeakValidationMap<ClassComponentProps<PaginatorButtonPropsBase, Required<Pick<PaginatorButtonPropsBase, "selected">>, "button", never>>;
    static defaultProps: Required<Pick<PaginatorButtonPropsBase, "selected">>;
    handleClick: (e: React.MouseEvent<HTMLButtonElement>) => void;
    render(): JSX.Element;
}
export default PaginatorButton;
