import React from 'react';
import PropTypes from 'prop-types';
import { RadioListChangeHandler, RadioListValueTypes } from './RadioList';
import { ComponentProps } from '../utils/types';
interface OptionPropsBase {
    children?: React.ReactNode;
    disabled?: boolean;
    error?: boolean;
    id?: string;
    onChange?: RadioListChangeHandler;
    /**
     * The selectable value. If this matches the ControlRadioList value, the item is selected.
     */
    value: RadioListValueTypes;
}
declare type OptionProps = ComponentProps<OptionPropsBase, 'div'>;
declare function Option({ children, disabled: disabledProp, error: errorProp, id: idProp, onChange, value, ...otherProps }: OptionProps): JSX.Element;
declare namespace Option {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        disabled: PropTypes.Requireable<boolean>;
        error: PropTypes.Requireable<boolean>;
        id: PropTypes.Requireable<string>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        value: PropTypes.Validator<any>;
    };
}
export default Option;
export type { OptionPropsBase };
