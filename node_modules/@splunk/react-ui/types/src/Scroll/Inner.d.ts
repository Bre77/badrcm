import React, { Component } from 'react';
import { SpringValue } from 'react-spring';
import { ClassComponentProps } from '../utils/types';
interface InnerPropsBase {
    children?: React.ReactNode;
    /** The scrollLeft to set on Mount. */
    defaultLeft?: number;
    /** The scrollTop to set on Mount. */
    defaultTop?: number;
    elementRef?: React.Ref<Element>;
    /** If set, scroll to this position on update. If null, ignore. */
    left?: SpringValue<number>;
    /** Prevent mouseWheel events from scrolling the page or other containers. */
    stopScrollPropagation?: boolean | 'window';
    /** A callback for when the scroll position changes. */
    onScroll?: React.UIEventHandler<Element>;
    tagName?: keyof JSX.IntrinsicElements;
    /** If set, scroll to this position on update. If null, ignore. */
    top?: SpringValue<number>;
}
declare const defaultProps: Required<Pick<InnerPropsBase, 'defaultLeft' | 'defaultTop' | 'tagName'>>;
declare type InnerProps = ClassComponentProps<InnerPropsBase, typeof defaultProps, keyof JSX.IntrinsicElements>;
interface InnerState {
    containerEl: HTMLElement | null;
}
declare class Inner extends Component<InnerProps, InnerState> {
    private defaultWindowOverflowX;
    private defaultWindowOverflowY;
    static propTypes: React.WeakValidationMap<ClassComponentProps<InnerPropsBase, Required<Pick<InnerPropsBase, "defaultLeft" | "defaultTop" | "tagName">>, "symbol" | "object" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "big" | "blockquote" | "body" | "br" | "button" | "canvas" | "caption" | "cite" | "code" | "col" | "colgroup" | "data" | "datalist" | "dd" | "del" | "details" | "dfn" | "dialog" | "div" | "dl" | "dt" | "em" | "embed" | "fieldset" | "figcaption" | "figure" | "footer" | "form" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "head" | "header" | "hgroup" | "hr" | "html" | "i" | "iframe" | "img" | "input" | "ins" | "kbd" | "keygen" | "label" | "legend" | "li" | "link" | "main" | "map" | "mark" | "menu" | "menuitem" | "meta" | "meter" | "nav" | "noindex" | "noscript" | "ol" | "optgroup" | "option" | "output" | "p" | "param" | "picture" | "pre" | "progress" | "q" | "rp" | "rt" | "ruby" | "s" | "samp" | "slot" | "script" | "section" | "select" | "small" | "source" | "span" | "strong" | "style" | "sub" | "summary" | "sup" | "table" | "template" | "tbody" | "td" | "textarea" | "tfoot" | "th" | "thead" | "time" | "title" | "tr" | "track" | "u" | "ul" | "var" | "video" | "wbr" | "webview" | "svg" | "animate" | "animateMotion" | "animateTransform" | "circle" | "clipPath" | "defs" | "desc" | "ellipse" | "feBlend" | "feColorMatrix" | "feComponentTransfer" | "feComposite" | "feConvolveMatrix" | "feDiffuseLighting" | "feDisplacementMap" | "feDistantLight" | "feDropShadow" | "feFlood" | "feFuncA" | "feFuncB" | "feFuncG" | "feFuncR" | "feGaussianBlur" | "feImage" | "feMerge" | "feMergeNode" | "feMorphology" | "feOffset" | "fePointLight" | "feSpecularLighting" | "feSpotLight" | "feTile" | "feTurbulence" | "filter" | "foreignObject" | "g" | "image" | "line" | "linearGradient" | "marker" | "mask" | "metadata" | "mpath" | "path" | "pattern" | "polygon" | "polyline" | "radialGradient" | "rect" | "stop" | "switch" | "text" | "textPath" | "tspan" | "use" | "view", never>>;
    static defaultProps: Required<Pick<InnerPropsBase, "defaultLeft" | "defaultTop" | "tagName">>;
    constructor(props: Readonly<InnerProps>);
    componentDidUpdate(prevProps: Readonly<InnerProps>, prevState: Readonly<InnerState>): void;
    private handleWheel;
    private handleMount;
    private handleMouseEnter;
    private handleMouseLeave;
    render(): JSX.Element;
}
export default Inner;
