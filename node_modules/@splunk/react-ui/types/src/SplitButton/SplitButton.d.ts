import React from 'react';
import PropTypes from 'prop-types';
import Item from './Item';
import { ComponentProps } from '../utils/types';
interface SplitButtonPropsBase {
    /**
     * Changes the style of the main button and toggle.
     * @themeNotes 'destructive' is not supported by `enterprise` themes.
     */
    appearance?: 'default' | 'primary' | 'destructive';
    /**
     * Must be `SplitButton.Item`. Becomes main button and dropdown items.
     */
    children?: React.ReactNode;
    /**
     * Prevents main button and dropdown toggle from being clicked.
     */
    disabled?: boolean;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    /**
     * A callback for when the main button or toggle is clicked.
     */
    onClick?: React.MouseEventHandler<HTMLDivElement>;
}
declare type SplitButtonProps = ComponentProps<SplitButtonPropsBase, 'div'>;
declare function SplitButton({ appearance, children, disabled, elementRef, onClick, ...otherProps }: SplitButtonProps): JSX.Element;
declare namespace SplitButton {
    var propTypes: {
        appearance: PropTypes.Requireable<string>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        disabled: PropTypes.Requireable<boolean>;
        elementRef: PropTypes.Requireable<object>;
        onClick: PropTypes.Requireable<(...args: any[]) => any>;
    };
    var Item: typeof import("./Item").default;
}
export default SplitButton;
export { Item };
