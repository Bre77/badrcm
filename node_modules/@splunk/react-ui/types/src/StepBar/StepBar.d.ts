import React from 'react';
import PropTypes from 'prop-types';
import Step from './Step';
import { ComponentProps } from '../utils/types';
interface StepBarPropsBase {
    /** The `stepId` of the `StepBar.Step` to activate. */
    activeStepId: any;
    /**
     * Must be `StepBar.Step`.
     */
    children?: React.ReactNode;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLUListElement>;
    /**
     * Setting inline to true makes the Step Bar inline element. It assume its minimum
     * width.
     */
    inline?: boolean;
}
declare type StepBarProps = ComponentProps<StepBarPropsBase, 'ul'>;
declare function StepBar({ activeStepId, children, elementRef, inline, ...otherProps }: StepBarProps): JSX.Element;
declare namespace StepBar {
    var propTypes: {
        activeStepId: PropTypes.Validator<any>;
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        elementRef: PropTypes.Requireable<object>;
        inline: PropTypes.Requireable<boolean>;
    };
    var Step: typeof import("./Step").default;
}
export default StepBar;
export { Step };
