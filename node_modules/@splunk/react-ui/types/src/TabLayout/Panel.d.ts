import React from 'react';
import PropTypes from 'prop-types';
import { ComponentProps } from '../utils/types';
interface PanelPropsBase {
    children?: React.ReactNode;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLDivElement>;
    /** See Icon documentation for more information.
     * @excludeTheme prisma
     */
    icon?: React.ReactNode;
    /** The text shown in the button. */
    label?: React.ReactNode;
    /** A unique `id` for this panel and used by the `TabLayout` to keep track of the open panel. */
    panelId: string;
    /**
     * Content to show in a tooltip when the user hovers over or focuses on the tab.
     */
    tooltip?: React.ReactNode;
    /** Prevents user from clicking the tab. */
    disabled?: boolean;
}
declare type PanelProps = ComponentProps<PanelPropsBase, 'div'>;
declare function Panel({ children, disabled, // eslint-disable-line @typescript-eslint/no-unused-vars
elementRef, panelId, ...otherProps }: PanelProps): JSX.Element;
declare namespace Panel {
    var propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        disabled: PropTypes.Requireable<boolean>;
        elementRef: PropTypes.Requireable<object>;
        icon: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        label: PropTypes.Requireable<string | PropTypes.ReactElementLike>;
        panelId: PropTypes.Validator<string>;
        tooltip: PropTypes.Requireable<PropTypes.ReactNodeLike>;
    };
}
export default Panel;
