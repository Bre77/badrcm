import React, { Component } from 'react';
import { TableRequestMoveColumnHandler } from './Table';
import { ClassComponentProps } from '../utils/types';
declare type HeadAutosizeColumnHandler = (event: React.MouseEvent<HTMLButtonElement>, data: {
    columnId: any;
    index: number;
}) => void;
declare type HeadDragStartHandler = (data: {
    dragIndex?: number;
}) => void;
declare type HeadRequestMoveColumnHandler = TableRequestMoveColumnHandler;
declare type HeadRequestResizeColumnHandler = (event: React.KeyboardEvent<HTMLButtonElement> | MouseEvent, data: {
    columnId: any;
    id?: string;
    index: number;
    width: number;
}) => void;
interface HeadPropsBase {
    /** @private. */
    actions?: React.ReactNode[];
    /** @private. */
    actionsColumnWidth?: number;
    /**
     * Must be `Table.HeadCell`s or `Table.HeadDropdownCell`s.
     */
    children?: React.ReactNode;
    /** @private. */
    dragPosition?: number;
    /** @private. */
    dragIndex?: number;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLTableSectionElement>;
    /** @private. */
    hasDragColumn?: boolean;
    /** @private. */
    hasInfoColumn?: boolean;
    /** @private. */
    onAutosizeColumn?: HeadAutosizeColumnHandler;
    /** @private. */
    onDragStart?: HeadDragStartHandler;
    /** @private. */
    onRequestMoveColumn?: HeadRequestMoveColumnHandler;
    /** @private. */
    onRequestResizeColumn?: HeadRequestResizeColumnHandler;
    /** @private. */
    onRequestToggleAllRows?: () => void;
    /** @private. */
    rowSelection?: 'all' | 'some' | 'none';
    /** @private */
    resizableFillLayout?: boolean;
}
declare const defaultProps: Required<Pick<HeadPropsBase, 'actions'>>;
declare type HeadProps = ClassComponentProps<HeadPropsBase, typeof defaultProps, 'thead'>;
interface HeadState {
    dragColumnId: any;
}
declare class Head extends Component<HeadProps, HeadState> {
    private cells?;
    private el;
    static splunkUiType: string;
    static propTypes: React.WeakValidationMap<ClassComponentProps<HeadPropsBase, Required<Pick<HeadPropsBase, "actions">>, "thead", never>>;
    static defaultProps: Required<Pick<HeadPropsBase, "actions">>;
    constructor(props: Readonly<HeadProps>);
    componentDidUpdate(): void;
    private static validateChildrenWidth;
    componentWillUnmount(): void;
    private onRequestMoveColumn;
    getCellWidths(): number[];
    getClientHeight(): number | undefined;
    getEl(): HTMLTableSectionElement | null;
    private handleMount;
    private handleDragStart;
    private handleDragEnd;
    private calculateGuideIndex;
    private cleanupDrag;
    render(): JSX.Element;
}
export default Head;
export { HeadAutosizeColumnHandler, HeadDragStartHandler, HeadRequestMoveColumnHandler, HeadRequestResizeColumnHandler, };
