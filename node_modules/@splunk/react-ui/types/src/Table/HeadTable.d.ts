import React, { Component } from 'react';
import Head from './Head';
import { ClassComponentProps } from '../utils/types';
interface HeadTablePropsBase {
    cellWidths: number[];
    dragIndex?: number;
    elementRef?: React.Ref<HTMLDivElement>;
    hasDragColumn?: boolean;
    hasRowExpansion?: boolean;
    hasRowSelection?: boolean;
    headType: 'docked' | 'fixed';
    horizontalOffset?: number;
    isFixedColumn?: boolean;
    rowSelection?: 'all' | 'some' | 'none';
    tableStyle?: React.CSSProperties;
    tableWidth: number;
    tHead: React.ReactElement;
    top: number;
    width: number;
}
declare const defaultProps: Required<Pick<HeadTablePropsBase, 'horizontalOffset'>>;
declare type HeadTableProps = ClassComponentProps<HeadTablePropsBase, typeof defaultProps, 'table'>;
/**
 * @private
 * HeadTable is an internal component that provides a detached table head that can
 * then be positioned in different ways outside of the main table.
 */
declare class HeadTable extends Component<HeadTableProps, {}> {
    private head;
    static propTypes: React.WeakValidationMap<ClassComponentProps<HeadTablePropsBase, Required<Pick<HeadTablePropsBase, "horizontalOffset">>, "table", never>>;
    static defaultProps: Required<Pick<HeadTablePropsBase, "horizontalOffset">>;
    getHead(): Head | null;
    private handleHeadMount;
    render(): JSX.Element;
}
export default HeadTable;
