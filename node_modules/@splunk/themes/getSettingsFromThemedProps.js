"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _utils = require("./utils");

/**
 * The theme settings in `props.theme` are not considered an API to allow support for fallbacks
 * and forward compatibility in future versions of `SplunkThemeProvider`. Use this utility to
 * access `family`, `colorScheme`, and `density` from a component's props. This is useful
 * in limited migration scenarios. Use `withSplunkTheme` or `useSplunkTheme` instead.
 *
 * ```js
 * import getSettingsFromThemedProps from '@splunk/themes/getSettingsFromThemedProps';
 * ...
 * const { family, colorScheme } = getSettingsFromThemedProps(props);
 *
 * ```
 * @param {object} props - The themed props passed to a styled-component.
 * @returns {object} An object consisting of `{ family, colorScheme, density }`.
 * @public
 */
function getSettingsFromThemedProps(props) {
  var _props$theme;

  // props.theme is sometimes null
  var _ref = ((_props$theme = props.theme) === null || _props$theme === void 0 ? void 0 : _props$theme.splunkThemeV1) || {},
      family = _ref.family,
      colorScheme = _ref.colorScheme,
      density = _ref.density;

  return (0, _utils.addThemeDefaults)({
    family: family,
    colorScheme: colorScheme,
    density: density
  });
}

var _default = getSettingsFromThemedProps;
exports["default"] = _default;