"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = require("react");

var _styledComponents = require("styled-components");

var _utils = require("./utils");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * React hook that allows theme variables to be easily used within a React functional component.
 * This includes the basic configuration of `family`, `colorScheme` and `density`,
 * as well as all the specific variables available in that theme.
 *
 * If no data `SplunkThemeProvider` was configured, the Prisma Dark Comfortable theme is returned.
 *
 * ```
 * import useSplunkTheme from '@splunk/themes/useSplunkTheme';
 * ...
 * export function() {
 *     const { isComfortable, focusColor } = useSplunkTheme();
 *
 *     const style = {
 *         color: focusColor,
 *         padding: isComfortable ? '10px' : '5px',
 *     }
 *
 *     ...
 *
 *     return (
 *         <div style={style}>
 *             Hello
 *         </div>
 *     )
 * }
 * ```
 * @public
 */
var useSplunkTheme = function useSplunkTheme() {
  var _ref = (0, _react.useContext)(_styledComponents.ThemeContext) || {},
      _ref$splunkThemeV = _ref.splunkThemeV1,
      splunkThemeV1 = _ref$splunkThemeV === void 0 ? {} : _ref$splunkThemeV,
      rest = _objectWithoutProperties(_ref, ["splunkThemeV1"]);

  var family = splunkThemeV1.family,
      colorScheme = splunkThemeV1.colorScheme,
      density = splunkThemeV1.density,
      customizer = splunkThemeV1.customizer;
  return _objectSpread(_objectSpread({}, rest), (0, _utils.getCustomizedTheme)({
    family: family,
    colorScheme: colorScheme,
    density: density
  }, customizer));
};

var _default = useSplunkTheme;
exports["default"] = _default;