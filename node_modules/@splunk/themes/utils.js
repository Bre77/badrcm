"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCustomizedTheme = exports.addThemeDefaults = void 0;

var _lodash = require("lodash");

var _getTheme = _interopRequireDefault(require("./getTheme"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Accepts a theme object and returns supported values and defaults.
 * @private
 */
var addThemeDefaults = function addThemeDefaults() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$family = _ref.family,
      family = _ref$family === void 0 ? 'prisma' : _ref$family,
      _ref$colorScheme = _ref.colorScheme,
      colorScheme = _ref$colorScheme === void 0 ? 'dark' : _ref$colorScheme,
      _ref$density = _ref.density,
      density = _ref$density === void 0 ? 'comfortable' : _ref$density,
      _ref$isPrisma = _ref.isPrisma,
      isPrisma = _ref$isPrisma === void 0 ? true : _ref$isPrisma,
      _ref$isEnterprise = _ref.isEnterprise,
      isEnterprise = _ref$isEnterprise === void 0 ? false : _ref$isEnterprise,
      _ref$isComfortable = _ref.isComfortable,
      isComfortable = _ref$isComfortable === void 0 ? true : _ref$isComfortable,
      _ref$isCompact = _ref.isCompact,
      isCompact = _ref$isCompact === void 0 ? false : _ref$isCompact,
      _ref$isDark = _ref.isDark,
      isDark = _ref$isDark === void 0 ? true : _ref$isDark,
      _ref$isLight = _ref.isLight,
      isLight = _ref$isLight === void 0 ? false : _ref$isLight;

  return {
    family: family,
    colorScheme: colorScheme,
    density: density,
    isPrisma: isPrisma,
    isEnterprise: isEnterprise,
    isComfortable: isComfortable,
    isCompact: isCompact,
    isDark: isDark,
    isLight: isLight
  };
};

exports.addThemeDefaults = addThemeDefaults;

function getCustomizedThemeUnmemo(settings, customizer) {
  var variables = (0, _getTheme["default"])(settings);

  if (!customizer) {
    return variables;
  }

  return customizer(variables);
}
/**
 * Accepts a theme object and customizer, and returns supported values and defaults.
 * @private
 */


var getCustomizedTheme = (0, _lodash.memoize)(getCustomizedThemeUnmemo, function () {
  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      family = _ref2.family,
      colorScheme = _ref2.colorScheme,
      density = _ref2.density;

  var customizer = arguments.length > 1 ? arguments[1] : undefined;
  return "".concat(family, "-").concat(colorScheme, "-").concat(density, "-").concat(!!customizer);
});
exports.getCustomizedTheme = getCustomizedTheme;